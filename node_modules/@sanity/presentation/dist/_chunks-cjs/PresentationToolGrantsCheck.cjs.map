{"version":3,"file":"PresentationToolGrantsCheck.cjs","sources":["../../../visual-editing-helpers/dist/index.js","../../src/lib/debounce.ts","../../src/overlays/SharedStateProvider.tsx","../../src/panels/PanelsContext.tsx","../../src/panels/Panel.tsx","../../src/panels/usePanelsStorage.ts","../../src/panels/util.ts","../../src/panels/Panels.tsx","../../src/components/ErrorCard.tsx","../../src/editor/PresentationPaneRouterProvider.tsx","../../src/editor/DocumentListPane.tsx","../../src/editor/DocumentPane.tsx","../../src/editor/DocumentPanel.tsx","../../src/editor/usePreviewState.ts","../../src/editor/ContentEditor.tsx","../../../../node_modules/.pnpm/uuid@10.0.0/node_modules/uuid/dist/esm-browser/stringify.js","../../../../node_modules/.pnpm/uuid@10.0.0/node_modules/uuid/dist/esm-browser/rng.js","../../../../node_modules/.pnpm/uuid@10.0.0/node_modules/uuid/dist/esm-browser/native.js","../../../../node_modules/.pnpm/uuid@10.0.0/node_modules/uuid/dist/esm-browser/v4.js","../../src/panels/usePanelId.ts","../../src/panels/PanelResizer.tsx","../../src/PresentationContent.tsx","../../src/PresentationNavigateProvider.tsx","../../src/useLocalState.ts","../../src/PresentationNavigator.tsx","../../src/PresentationParamsProvider.tsx","../../src/PresentationProvider.tsx","../../src/preview/IFrame.tsx","../../src/preview/OpenPreviewButton.tsx","../../src/preview/PreviewLocationInput.tsx","../../src/preview/SharePreviewMenu.tsx","../../src/preview/PreviewHeader.tsx","../../src/preview/Preview.tsx","../../src/util/useEffectOnChange.ts","../../src/RevisionSwitcher.tsx","../../src/util/warnOnce.ts","../../src/useDocumentsOnPage.ts","../../src/useMainDocument.ts","../../src/lib/parse.ts","../../src/useParams.ts","../../src/usePopups.ts","../../src/usePreviewUrl.ts","../../src/useStatus.ts","../../src/PresentationTool.tsx","../../src/PresentationToolGrantsCheck.tsx"],"sourcesContent":["import { createListenLogic, createRequestMachine, DOMAIN, MSG_HANDSHAKE_SYN, MSG_HANDSHAKE_SYN_ACK, MSG_HANDSHAKE_ACK, MSG_RESPONSE, MSG_HEARTBEAT, MSG_DISCONNECT } from \"@sanity/comlink\";\nimport { MSG_RESPONSE as MSG_RESPONSE2 } from \"@sanity/comlink\";\nimport { studioPath } from \"@sanity/client/csm\";\nimport { encodeSanityNodeData } from \"./_chunks-es/transformSanityNodeData.js\";\nimport { pathToUrlString, urlStringToPath } from \"./_chunks-es/transformSanityNodeData.js\";\nvar __defProp$1 = Object.defineProperty, __defProps$1 = Object.defineProperties, __getOwnPropDescs$1 = Object.getOwnPropertyDescriptors, __getOwnPropSymbols$1 = Object.getOwnPropertySymbols, __hasOwnProp$1 = Object.prototype.hasOwnProperty, __propIsEnum$1 = Object.prototype.propertyIsEnumerable, __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __spreadValues$1 = (a, b) => {\n  for (var prop in b || (b = {}))\n    __hasOwnProp$1.call(b, prop) && __defNormalProp$1(a, prop, b[prop]);\n  if (__getOwnPropSymbols$1)\n    for (var prop of __getOwnPropSymbols$1(b))\n      __propIsEnum$1.call(b, prop) && __defNormalProp$1(a, prop, b[prop]);\n  return a;\n}, __spreadProps$1 = (a, b) => __defProps$1(a, __getOwnPropDescs$1(b)), __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    __hasOwnProp$1.call(source, prop) && exclude.indexOf(prop) < 0 && (target[prop] = source[prop]);\n  if (source != null && __getOwnPropSymbols$1)\n    for (var prop of __getOwnPropSymbols$1(source))\n      exclude.indexOf(prop) < 0 && __propIsEnum$1.call(source, prop) && (target[prop] = source[prop]);\n  return target;\n};\nconst channelsToComlinkMap = {\n  \"handshake/syn\": MSG_HANDSHAKE_SYN,\n  \"handshake/syn-ack\": MSG_HANDSHAKE_SYN_ACK,\n  \"handshake/ack\": MSG_HANDSHAKE_ACK,\n  \"channel/response\": MSG_RESPONSE,\n  \"channel/heartbeat\": MSG_HEARTBEAT,\n  \"channel/disconnect\": MSG_DISCONNECT,\n  \"overlay/focus\": \"visual-editing/focus\",\n  \"overlay/navigate\": \"visual-editing/navigate\",\n  \"overlay/toggle\": \"visual-editing/toggle\",\n  \"presentation/toggleOverlay\": \"presentation/toggle-overlay\"\n}, comlinkToChannelsMap = {\n  [MSG_HANDSHAKE_SYN]: \"handshake/syn\",\n  [MSG_HANDSHAKE_SYN_ACK]: \"handshake/syn-ack\",\n  [MSG_HANDSHAKE_ACK]: \"handshake/ack\",\n  [MSG_RESPONSE]: \"channel/response\",\n  [MSG_HEARTBEAT]: \"channel/heartbeat\",\n  [MSG_DISCONNECT]: \"channel/disconnect\",\n  \"visual-editing/focus\": \"overlay/focus\",\n  \"visual-editing/navigate\": \"overlay/navigate\",\n  \"visual-editing/toggle\": \"overlay/toggle\",\n  \"presentation/toggle-overlay\": \"presentation/toggleOverlay\"\n}, convertToComlinkEvent = (event) => {\n  var _a;\n  const { data } = event;\n  return data && typeof data == \"object\" && \"domain\" in data && \"type\" in data && \"from\" in data && \"to\" in data && (data.domain === \"sanity/channels\" && (data.domain = DOMAIN), data.to === \"overlays\" && (data.to = \"visual-editing\"), data.from === \"overlays\" && (data.from = \"visual-editing\"), data.channelId = data.connectionId, delete data.connectionId, data.type = (_a = channelsToComlinkMap[data.type]) != null ? _a : data.type), event;\n}, convertToChannelsMessage = (comlinkMessage) => {\n  var _b;\n  const _a = comlinkMessage, { channelId } = _a, rest = __objRest(_a, [\"channelId\"]), message = __spreadProps$1(__spreadValues$1({}, rest), { connectionId: channelId });\n  return message.domain === DOMAIN && (message.domain = \"sanity/channels\"), message.to === \"visual-editing\" && (message.to = \"overlays\"), message.from === \"visual-editing\" && (message.from = \"overlays\"), message.type = (_b = comlinkToChannelsMap[message.type]) != null ? _b : message.type, message.type === \"channel/response\" && message.responseTo && !message.data && (message.data = { responseTo: message.responseTo }), (message.type === \"handshake/syn\" || message.type === \"handshake/syn-ack\" || message.type === \"handshake/ack\") && (message.data = { id: message.connectionId }), message;\n}, sendAsChannelsMessage = ({ context }, params) => {\n  const { sources, targetOrigin } = context, message = convertToChannelsMessage(params.message);\n  sources.forEach((source) => {\n    source.postMessage(message, { targetOrigin });\n  });\n}, createCompatibilityActors = () => ({\n  listen: createListenLogic(convertToComlinkEvent),\n  requestMachine: createRequestMachine().provide({\n    actions: {\n      \"send message\": sendAsChannelsMessage\n    }\n  })\n});\nvar __defProp = Object.defineProperty, __defProps = Object.defineProperties, __getOwnPropDescs = Object.getOwnPropertyDescriptors, __getOwnPropSymbols = Object.getOwnPropertySymbols, __hasOwnProp = Object.prototype.hasOwnProperty, __propIsEnum = Object.prototype.propertyIsEnumerable, __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    __hasOwnProp.call(b, prop) && __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b))\n      __propIsEnum.call(b, prop) && __defNormalProp(a, prop, b[prop]);\n  return a;\n}, __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nfunction createDataAttribute(props) {\n  function normalizePath(path) {\n    return path ? typeof path == \"string\" ? studioPath.fromString(path) : path : [];\n  }\n  function toString(props2) {\n    if (!props2.id) throw new Error(\"`id` is required to create a data attribute\");\n    if (!props2.type) throw new Error(\"`type` is required to create a data attribute\");\n    if (!props2.path || !props2.path.length)\n      throw new Error(\"`path` is required to create a data attribute\");\n    const attrs = {\n      baseUrl: props2.baseUrl || \"/\",\n      workspace: props2.workspace,\n      tool: props2.tool,\n      type: props2.type,\n      id: props2.id,\n      path: typeof props2.path == \"string\" ? props2.path : studioPath.toString(props2.path)\n    };\n    return encodeSanityNodeData(attrs);\n  }\n  const DataAttribute = (path) => toString(__spreadProps(__spreadValues({}, props), {\n    path: [...normalizePath(props.path), ...normalizePath(path)]\n  }));\n  return DataAttribute.toString = function() {\n    return toString(props);\n  }, DataAttribute.combine = function(attrs) {\n    return createDataAttribute(__spreadValues(__spreadValues({}, props), attrs));\n  }, DataAttribute.scope = function(path) {\n    return createDataAttribute(__spreadProps(__spreadValues({}, props), {\n      path: [...normalizePath(props.path), ...normalizePath(path)]\n    }));\n  }, DataAttribute;\n}\nfunction getQueryCacheKey(query, params) {\n  return `${query}-${typeof params == \"string\" ? params : JSON.stringify(params)}`;\n}\nconst IS_MAC = typeof window < \"u\" && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform), MODIFIERS = {\n  alt: \"altKey\",\n  ctrl: \"ctrlKey\",\n  mod: IS_MAC ? \"metaKey\" : \"ctrlKey\",\n  shift: \"shiftKey\"\n};\nfunction isHotkey(keys, event) {\n  return keys.every((key) => MODIFIERS[key] ? event[MODIFIERS[key]] : event.key === key.toUpperCase());\n}\nfunction isModKey(event) {\n  return event.key === (IS_MAC ? \"Meta\" : \"Ctrl\");\n}\nfunction isAltKey(event) {\n  return event.key === \"Alt\";\n}\nexport {\n  MSG_RESPONSE2 as MSG_RESPONSE,\n  createCompatibilityActors,\n  createDataAttribute,\n  getQueryCacheKey,\n  isAltKey,\n  isHotkey,\n  isModKey,\n  pathToUrlString,\n  urlStringToPath\n};\n//# sourceMappingURL=index.js.map\n","export function debounce<F extends (...args: Parameters<F>) => ReturnType<F>>(\n  fn: F,\n  timeout: number,\n): F {\n  let timer: ReturnType<typeof setTimeout>\n  return ((...args: Parameters<F>) => {\n    clearTimeout(timer)\n    timer = setTimeout(() => {\n      fn.apply(fn, args)\n    }, timeout)\n  }) as F\n}\n","import type {Serializable, SerializableObject} from '@repo/visual-editing-helpers'\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  type FunctionComponent,\n  type PropsWithChildren,\n} from 'react'\nimport type {VisualEditingConnection} from '../types'\nimport {SharedStateContext, type SharedStateContextValue} from './SharedStateContext'\n\nexport const SharedStateProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink: VisualEditingConnection | null\n  }>\n> = function (props) {\n  const {comlink, children} = props\n\n  const sharedState = useRef<SerializableObject>({})\n\n  useEffect(() => {\n    return comlink?.on('visual-editing/shared-state', () => {\n      return {state: sharedState.current}\n    })\n  }, [comlink])\n\n  const setValue = useCallback(\n    (key: string, value: Serializable) => {\n      sharedState.current[key] = value\n      comlink?.post('presentation/shared-state', {key, value})\n    },\n    [comlink],\n  )\n\n  const removeValue = useCallback(\n    (key: string) => {\n      comlink?.post('presentation/shared-state', {key})\n      delete sharedState.current[key]\n    },\n    [comlink],\n  )\n\n  const context = useMemo<SharedStateContextValue>(\n    () => ({removeValue, setValue}),\n    [removeValue, setValue],\n  )\n\n  return <SharedStateContext.Provider value={context}>{children}</SharedStateContext.Provider>\n}\n","import {createContext, type CSSProperties} from 'react'\nimport type {PanelElement, ResizerElement} from './types'\n\nexport const PanelsContext = createContext<{\n  activeResizer: string | null\n  drag: (id: string, event: MouseEvent) => void\n  getPanelStyle: (id: string) => CSSProperties\n  registerElement: (id: string, panel: PanelElement | ResizerElement) => void\n  startDragging: (id: string, event: MouseEvent) => void\n  stopDragging: () => void\n  unregisterElement: (id: string) => void\n} | null>(null)\n\nPanelsContext.displayName = 'PanelsContext'\n","import {useContext, useLayoutEffect, type FunctionComponent, type PropsWithChildren} from 'react'\nimport {styled} from 'styled-components'\nimport {PanelsContext} from './PanelsContext'\n\ninterface PanelProps extends PropsWithChildren {\n  defaultSize?: number | null\n  id: string\n  minWidth?: number\n  maxWidth?: number\n  order?: number\n}\n\nconst Root = styled.div`\n  overflow: hidden;\n  flex-basis: 0;\n  flex-shrink: 1;\n`\n\nexport const Panel: FunctionComponent<PanelProps> = function ({\n  children,\n  defaultSize = null,\n  id,\n  minWidth,\n  maxWidth,\n  order = 0,\n}) {\n  const context = useContext(PanelsContext)\n\n  if (context === null) {\n    throw Error(`Panel components must be rendered within a PanelGroup container`)\n  }\n\n  const {getPanelStyle, registerElement, unregisterElement} = context\n\n  const style = getPanelStyle(id)\n\n  useLayoutEffect(() => {\n    registerElement(id, {\n      id,\n      type: 'panel',\n      defaultSize,\n      maxWidth: maxWidth ?? null,\n      minWidth: minWidth ?? 0,\n      order,\n    })\n\n    return () => {\n      unregisterElement(id)\n    }\n  }, [id, defaultSize, order, maxWidth, minWidth, registerElement, unregisterElement])\n\n  return <Root style={style}>{children}</Root>\n}\n","import {useMemo} from 'react'\nimport {debounce} from '../lib/debounce'\nimport type {PanelElement} from './types'\n\nconst itemKey = 'presentation/panels'\n\ntype StoredPanelsState = Record<string, number[]>\n\nconst getStoredItem = () => {\n  // @todo Validate\n  return JSON.parse(localStorage.getItem(itemKey) || '{}') as StoredPanelsState\n}\nconst setStoredItem = (data: StoredPanelsState) => {\n  localStorage.setItem(itemKey, JSON.stringify(data))\n}\n\nconst getKeyForPanels = (panels: PanelElement[]) => {\n  return panels.map((panel) => [panel.id, panel.order].join(':')).join(',')\n}\n\nexport function usePanelsStorage(): {\n  get: (panels: PanelElement[]) => number[] | undefined\n  set: (panels: PanelElement[], widths: number[]) => void\n  setDebounced: (panels: PanelElement[], widths: number[]) => void\n} {\n  return useMemo(() => {\n    const get = (panels: PanelElement[]) => {\n      const stored = getStoredItem()\n      const key = getKeyForPanels(panels)\n      return Array.isArray(stored[key]) && stored[key].some((val) => val === null)\n        ? undefined\n        : stored[key]\n    }\n\n    const set = (panels: PanelElement[], widths: number[]) => {\n      const stored = getStoredItem()\n      const key = getKeyForPanels(panels)\n      const data = {\n        ...stored,\n        [key]: widths,\n      }\n      setStoredItem(data)\n    }\n\n    const setDebounced = debounce(set, 100)\n    return {\n      get,\n      set,\n      setDebounced,\n    }\n  }, [])\n}\n","import type {ElementMap, InitialDragState, PanelElement, PanelsState, ResizerElement} from './types'\n\nfunction getNextWidth(panel: PanelElement, nextWidth: number, containerWidth: number) {\n  const {maxWidth: maxWidthPx, minWidth: minWidthPx} = panel\n  const maxWidth = maxWidthPx == null ? 100 : (maxWidthPx / containerWidth) * 100\n  const minWidth = (minWidthPx / containerWidth) * 100\n  return Math.min(maxWidth, Math.max(minWidth, nextWidth))\n}\n\nexport function getNextWidths(\n  delta: number,\n  containerWidth: number,\n  panelBefore: PanelElement,\n  panelAfter: PanelElement,\n  panelsState: PanelsState,\n  initialDragState: InitialDragState,\n): number[] {\n  const {panels, widths: prevWidths} = panelsState\n  const {widths: initialWidths} = initialDragState\n\n  const widths = initialWidths || prevWidths\n  const nextWidths = [...widths]\n\n  {\n    const pivotPanel = delta < 0 ? panelAfter : panelBefore\n    const index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n    const width = widths[index]\n    const nextWidth = getNextWidth(pivotPanel, width + Math.abs(delta), containerWidth)\n    if (width === nextWidth) {\n      return widths\n    } else {\n      delta = delta < 0 ? width - nextWidth : nextWidth - width\n    }\n  }\n\n  let deltaApplied = 0\n  let pivotPanel = delta < 0 ? panelBefore : panelAfter\n  let index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const panel = panels[index]\n    const width = widths[index]\n\n    const deltaRemaining = Math.abs(delta) - Math.abs(deltaApplied)\n\n    const nextWidth = getNextWidth(panel, width - deltaRemaining, containerWidth)\n\n    if (width !== nextWidth) {\n      deltaApplied += width - nextWidth\n      nextWidths[index] = nextWidth\n\n      if (\n        deltaApplied.toPrecision(10).localeCompare(Math.abs(delta).toPrecision(10), undefined, {\n          numeric: true,\n        }) >= 0\n      ) {\n        break\n      }\n    }\n\n    if (delta < 0) {\n      if (--index < 0) {\n        break\n      }\n    } else {\n      if (++index >= panels.length) {\n        break\n      }\n    }\n  }\n\n  if (deltaApplied === 0) {\n    return widths\n  }\n\n  pivotPanel = delta < 0 ? panelAfter : panelBefore\n  index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n  nextWidths[index] = widths[index] + deltaApplied\n\n  return nextWidths\n}\n\nexport function getPanelWidth(panels: PanelElement[], id: string, widths: number[]): string {\n  if (panels.length === 1) return '100'\n\n  const index = panels.findIndex((panel) => panel.id === id)\n  const width = widths[index]\n\n  if (width == null) return '0'\n\n  return width.toPrecision(10)\n}\n\nexport function getOffset(\n  event: MouseEvent,\n  handleElement: HTMLDivElement,\n  initialOffset: number = 0,\n  initialHandleElementRect: DOMRect | null = null,\n): number {\n  const pointerOffset = event.clientX\n\n  const rect = initialHandleElementRect || handleElement.getBoundingClientRect()\n  const elementOffset = rect.left\n\n  return pointerOffset - elementOffset - initialOffset\n}\n\nexport function isPanel(element: PanelElement | ResizerElement): element is PanelElement {\n  return element.type === 'panel'\n}\n\nexport function isResizer(element: PanelElement | ResizerElement): element is ResizerElement {\n  return element.type === 'resizer'\n}\n\nexport function getSortedElements(elements: ElementMap): Array<PanelElement | ResizerElement> {\n  return Array.from(elements.values()).sort(({order: a}, {order: b}) => {\n    if (a == null && b == null) return 0\n    if (a == null) return -1\n    if (b == null) return 1\n    return a - b\n  })\n}\n\nexport function validateWidths(\n  panels: PanelElement[],\n  widthsToValidate: number[],\n  containerWidth: number,\n): number[] {\n  // Clamp widths proportionally to total 100\n  const total = widthsToValidate.reduce((total, width) => total + width, 0)\n  const widths = [...widthsToValidate].map((width) => (width / total) * 100)\n\n  let remainingWidth = 0\n\n  for (let index = 0; index < panels.length; index++) {\n    const panel = panels[index]\n    const width = widths[index]\n    const nextWidth = getNextWidth(panel, width, containerWidth)\n    if (width != nextWidth) {\n      remainingWidth += width - nextWidth\n      widths[index] = nextWidth\n    }\n  }\n\n  if (remainingWidth.toFixed(3) !== '0.000') {\n    for (let index = 0; index < panels.length; index++) {\n      const panel = panels[index]\n\n      let {maxWidth, minWidth} = panel\n\n      minWidth = (minWidth / containerWidth) * 100\n      if (maxWidth != null) {\n        maxWidth = (maxWidth / containerWidth) * 100\n      }\n\n      const width = Math.min(\n        maxWidth != null ? maxWidth : 100,\n        Math.max(minWidth, widths[index] + remainingWidth),\n      )\n\n      if (width !== widths[index]) {\n        remainingWidth -= width - widths[index]\n        widths[index] = width\n\n        if (Math.abs(remainingWidth).toFixed(3) === '0.000') {\n          break\n        }\n      }\n    }\n  }\n\n  return widths\n}\n\nexport function getDefaultWidths(panels: PanelElement[]): number[] {\n  let panelsWithoutWidth = panels.length\n  let remainingWidthTotal = 100\n\n  const widthsWithNulls = panels.map((panel) => {\n    if (panel.defaultSize) {\n      remainingWidthTotal = remainingWidthTotal - panel.defaultSize\n      panelsWithoutWidth = panelsWithoutWidth - 1\n      return panel.defaultSize\n    }\n    return null\n  })\n\n  const defaultWidth = remainingWidthTotal / panelsWithoutWidth\n  const widths = widthsWithNulls.map((width) => {\n    if (width === null) return defaultWidth\n    return width\n  })\n\n  return widths\n}\n","// Slightly modified version of react-resizable-panels\n// https://github.com/bvaughn/react-resizable-panels/tree/main/packages/react-resizable-panels\n\nimport {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n  type CSSProperties,\n  type FunctionComponent,\n  type PropsWithChildren,\n} from 'react'\nimport {styled} from 'styled-components'\nimport {PanelsContext} from './PanelsContext'\nimport type {ElementMap, InitialDragState, PanelElement, PanelsState, ResizerElement} from './types'\nimport {usePanelsStorage} from './usePanelsStorage'\nimport {\n  getDefaultWidths,\n  getNextWidths,\n  getOffset,\n  getPanelWidth,\n  getSortedElements,\n  isPanel,\n  isResizer,\n  validateWidths,\n} from './util'\n\nconst PanelsWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  overflow: hidden;\n  width: 100%;\n`\n\nexport const Panels: FunctionComponent<PropsWithChildren> = function ({children}) {\n  const panelsEl = useRef<HTMLDivElement | null>(null)\n\n  const [elements, setElements] = useState<ElementMap>(new Map())\n\n  const panels = useMemo(() => getSortedElements(elements).filter(isPanel), [elements])\n\n  const [widths, setWidths] = useState<number[]>([])\n  const [activeResizer, setActiveResizer] = useState<string | null>(null)\n\n  const panelsRef = useRef<PanelsState>({\n    elements,\n    panels,\n    widths,\n  })\n\n  const getPanelStyle = useCallback(\n    (id: string): CSSProperties => {\n      return {\n        flexGrow: getPanelWidth(panels, id, widths),\n        pointerEvents: activeResizer === null ? undefined : 'none',\n      }\n    },\n    [activeResizer, panels, widths],\n  )\n\n  const registerElement = useCallback((id: string, data: PanelElement | ResizerElement) => {\n    setElements((prev) => {\n      if (prev.has(id)) return prev\n      const next = new Map(prev)\n      next.set(id, data)\n      return next\n    })\n  }, [])\n  const unregisterElement = useCallback((id: string) => {\n    setElements((prev) => {\n      if (!prev.has(id)) return prev\n      const next = new Map(prev)\n      next.delete(id)\n      return next\n    })\n  }, [])\n\n  const dragRef = useRef<InitialDragState>({\n    containerWidth: window.innerWidth,\n    dragOffset: 0,\n    panelAfter: null,\n    panelBefore: null,\n    resizerIndex: -1,\n    resizerRect: null,\n    startX: 0,\n    widths: [],\n  })\n\n  const startDragging = useCallback(\n    (id: string, event: MouseEvent) => {\n      const elementsArr = getSortedElements(elements)\n      const index = elementsArr.findIndex((el) => el.id === id)\n\n      const resizer = elements.get(id)\n      if (!resizer || !isResizer(resizer)) return\n      const resizeElement = resizer.el.current\n      if (!resizeElement) return\n\n      dragRef.current = {\n        resizerIndex: index,\n        panelBefore: elementsArr.reduce(\n          (acc, el, i) => (isPanel(el) && i < index ? el : acc),\n          null as PanelElement | null,\n        ),\n        panelAfter: elementsArr.reduce(\n          (acc, el, i) => (acc === null && isPanel(el) && i > index ? el : acc),\n          null as PanelElement | null,\n        ),\n        containerWidth: window.innerWidth,\n        startX: event.pageX,\n        dragOffset: getOffset(event, resizeElement),\n        resizerRect: resizeElement.getBoundingClientRect(),\n        widths: panelsRef.current.widths,\n      }\n\n      setActiveResizer(id)\n    },\n    [elements],\n  )\n\n  const stopDragging = useCallback(() => {\n    setActiveResizer(null)\n  }, [])\n\n  const drag = useCallback(\n    (id: string, event: MouseEvent) => {\n      event.preventDefault()\n      event.stopPropagation()\n\n      const {containerWidth, dragOffset, panelBefore, panelAfter, resizerRect} = dragRef.current\n\n      if (panelBefore == null || panelAfter == null) {\n        return\n      }\n\n      const resizer = elements.get(id)\n      if (!resizer || !isResizer(resizer)) return\n      const resizeElement = resizer.el.current\n      if (!resizeElement) return\n\n      const offset = getOffset(event, resizeElement, dragOffset, resizerRect)\n\n      if (offset === 0) {\n        return\n      }\n\n      const {widths: prevWidths} = panelsRef.current\n      const rect = panelsEl.current!.getBoundingClientRect()\n      const delta = (offset / rect.width) * 100\n\n      const nextWidths = getNextWidths(\n        delta,\n        containerWidth,\n        panelBefore,\n        panelAfter,\n        panelsRef.current,\n        dragRef.current,\n      )\n\n      const widthsChanged = prevWidths.some((prevWidth, i) => prevWidth !== nextWidths[i])\n\n      if (widthsChanged) {\n        setWidths(nextWidths)\n      }\n    },\n    [elements],\n  )\n\n  // For setting the panels state\n  useLayoutEffect(() => {\n    panelsRef.current.elements = elements\n    panelsRef.current.panels = panels\n    panelsRef.current.widths = widths\n  }, [elements, panels, widths])\n\n  const storage = usePanelsStorage()\n\n  // For setting default sizing when panels are updated\n  useLayoutEffect(() => {\n    const {widths} = panelsRef.current\n\n    if (widths.length === panels.length) {\n      return\n    }\n\n    const storedWidths = storage.get(panels)\n\n    if (storedWidths) {\n      const validatedStoredWidths = validateWidths(panels, storedWidths, window.innerWidth)\n      setWidths(validatedStoredWidths)\n      return\n    }\n\n    const defaultWidths = getDefaultWidths(panels)\n    setWidths(defaultWidths)\n  }, [storage, panels])\n\n  // For storing current widths in localStorage\n  useEffect(() => {\n    if (!widths.length) return\n    storage.setDebounced(panels, widths)\n  }, [storage, panels, widths])\n\n  useLayoutEffect(() => {\n    const resizeObserver = new ResizeObserver(() => {\n      const {panels, widths: prevWidths} = panelsRef.current\n\n      const nextWidths = validateWidths(panels, prevWidths, window.innerWidth)\n\n      const widthsChanged = prevWidths.some((prevWidth, i) => prevWidth !== nextWidths[i])\n      if (widthsChanged) {\n        setWidths(nextWidths)\n      }\n    })\n\n    resizeObserver.observe(panelsEl.current!)\n\n    return () => {\n      resizeObserver.disconnect()\n    }\n  }, [])\n\n  const context = useMemo(\n    () => ({\n      activeResizer,\n      drag,\n      getPanelStyle,\n      registerElement,\n      startDragging,\n      stopDragging,\n      unregisterElement,\n    }),\n    [\n      activeResizer,\n      drag,\n      getPanelStyle,\n      registerElement,\n      startDragging,\n      stopDragging,\n      unregisterElement,\n    ],\n  )\n\n  return (\n    <PanelsContext.Provider value={context}>\n      <PanelsWrapper ref={panelsEl}>{children}</PanelsWrapper>\n    </PanelsContext.Provider>\n  )\n}\n","import {Box, Button, Card, Container, Flex, Inline, Stack, Text, type CardProps} from '@sanity/ui'\nimport type {ReactElement, ReactNode} from 'react'\nimport {useTranslation} from 'sanity'\nimport {presentationLocaleNamespace} from '../i18n'\n\nexport function ErrorCard(\n  props: {\n    children?: ReactNode\n    message: string\n    onRetry?: () => void\n    onContinueAnyway?: () => void\n  } & CardProps,\n): ReactElement {\n  const {children, message, onRetry, onContinueAnyway, ...restProps} = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n\n  const retryButton = (\n    <Button fontSize={1} mode=\"ghost\" onClick={onRetry} text={t('error-card.retry-button.text')} />\n  )\n  const continueAnywayButton = (\n    <Button\n      fontSize={1}\n      mode=\"ghost\"\n      tone=\"critical\"\n      onClick={onContinueAnyway}\n      text={t('error-card.continue-button.text')}\n    />\n  )\n\n  return (\n    <Card height=\"fill\" {...restProps}>\n      <Flex align=\"center\" height=\"fill\" justify=\"center\">\n        <Container padding={4} sizing=\"border\" width={0}>\n          <Stack space={4}>\n            <Stack space={3}>\n              <Text size={1} weight=\"semibold\">\n                {t('error-card.title')}\n              </Text>\n              <Text muted size={1}>\n                {message}\n              </Text>\n            </Stack>\n\n            {children}\n\n            {onRetry && onContinueAnyway ? (\n              <Inline space={2}>\n                {retryButton}\n                {continueAnywayButton}\n              </Inline>\n            ) : onRetry ? (\n              <Box>{retryButton}</Box>\n            ) : onContinueAnyway ? (\n              <Box>{continueAnywayButton}</Box>\n            ) : null}\n          </Stack>\n        </Container>\n      </Flex>\n    </Card>\n  )\n}\n","/* eslint-disable no-console */\n\nimport {forwardRef, useCallback, useMemo, type PropsWithChildren, type ReactElement} from 'react'\nimport {StateLink, useRouter} from 'sanity/router'\nimport {\n  getPublishedId,\n  PaneRouterContext,\n  useUnique,\n  type BackLinkProps,\n  type PaneRouterContextValue,\n  type ReferenceChildLinkProps,\n} from '../internals'\nimport type {\n  PresentationParams,\n  PresentationSearchParams,\n  StructureDocumentPaneParams,\n} from '../types'\n\nfunction encodeQueryString(params: Record<string, unknown> = {}): string {\n  const parts = Object.entries(params)\n    .map(([key, value]) => `${key}=${value}`)\n    .join('&')\n\n  return parts.length ? `?${parts}` : ''\n}\n\nfunction resolveQueryStringFromParams(nextParams: Record<string, string | undefined>) {\n  const allowed = [\n    'comment',\n    'inspect',\n    'instruction',\n    'pathKey',\n    'rev',\n    'since',\n    'template',\n    'view',\n  ] satisfies Array<keyof PresentationParams> as string[]\n\n  const safeNextParams = Object.entries(nextParams)\n    .filter(([key]) => allowed.includes(key))\n    .reduce((obj, [key, value]) => {\n      if (value == undefined) return obj\n      return {...obj, [key]: value}\n    }, {})\n\n  return encodeQueryString(safeNextParams)\n}\n\nconst BackLink = forwardRef(function BackLink(\n  props: BackLinkProps & {searchParams: PresentationSearchParams},\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const {searchParams, ...restProps} = props\n  return (\n    <StateLink\n      {...restProps}\n      ref={ref}\n      state={{\n        type: undefined,\n        _searchParams: Object.entries(searchParams),\n      }}\n      title={undefined}\n    />\n  )\n})\n\nconst ReferenceChildLink = forwardRef(function ReferenceChildLink(\n  props: ReferenceChildLinkProps & {searchParams: PresentationSearchParams},\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const {\n    documentId,\n    documentType,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    parentRefPath,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    template,\n    searchParams,\n    ...restProps\n  } = props\n\n  return (\n    <StateLink\n      {...restProps}\n      ref={ref}\n      state={{\n        id: documentId,\n        type: documentType,\n        _searchParams: Object.entries(searchParams),\n      }}\n      title={undefined}\n    />\n  )\n})\n\nexport function PresentationPaneRouterProvider(\n  props: PropsWithChildren<{\n    onStructureParams: (params: StructureDocumentPaneParams) => void\n    refs?: {_id: string; _type: string}[]\n    searchParams: PresentationSearchParams\n    structureParams: StructureDocumentPaneParams\n  }>,\n): ReactElement {\n  const {children, onStructureParams, structureParams, searchParams, refs} = props\n\n  const {state: routerState, resolvePathFromState} = useRouter()\n\n  const routerSearchParams = useUnique(Object.fromEntries(routerState._searchParams || []))\n\n  const createPathWithParams: PaneRouterContextValue['createPathWithParams'] = useCallback(\n    (nextParams) => {\n      const path = resolvePathFromState(routerState)\n      const qs = resolveQueryStringFromParams({\n        ...routerSearchParams,\n        ...nextParams,\n      })\n      return `${path}${qs}`\n    },\n    [resolvePathFromState, routerSearchParams, routerState],\n  )\n\n  const context: PaneRouterContextValue = useMemo(() => {\n    return {\n      index: 0,\n      groupIndex: 0,\n      siblingIndex: 0,\n      payload: {},\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      params: structureParams as any,\n      hasGroupSiblings: false,\n      groupLength: 1,\n      routerPanesState: [],\n      ChildLink: (childLinkProps) => {\n        const {childId, ...restProps} = childLinkProps\n        const ref = refs?.find((r) => r._id === childId || getPublishedId(r._id) === childId)\n        if (ref) {\n          return (\n            <StateLink\n              {...restProps}\n              state={{\n                id: childId,\n                type: ref._type,\n                _searchParams: Object.entries(searchParams),\n              }}\n            />\n          )\n        }\n\n        return <div {...restProps} />\n      },\n      BackLink: (backLinkProps) => <BackLink {...backLinkProps} searchParams={searchParams} />,\n      ReferenceChildLink: (childLinkProps) => (\n        <ReferenceChildLink {...childLinkProps} searchParams={searchParams} />\n      ),\n      ParameterizedLink: () => <>ParameterizedLink</>,\n      closeCurrentAndAfter: () => {\n        console.warn('closeCurrentAndAfter')\n      },\n      handleEditReference: (options) => {\n        console.warn('handleEditReference', options)\n      },\n      replaceCurrent: (pane) => {\n        console.warn('replaceCurrent', pane)\n      },\n      closeCurrent: () => {\n        console.warn('closeCurrent')\n      },\n      duplicateCurrent: (pane) => {\n        console.warn('duplicateCurrent', pane)\n      },\n      setView: (viewId) => {\n        console.warn('setView', viewId)\n      },\n      setParams: (nextParams) => {\n        // eslint-disable-next-line no-warning-comments\n        // @todo set inspect param to undefined manually as param is missing from object when closing inspector\n        onStructureParams({\n          ...nextParams,\n          inspect: nextParams['inspect'] ?? undefined,\n        } as StructureDocumentPaneParams)\n      },\n      setPayload: (payload) => {\n        console.warn('setPayload', payload)\n      },\n      navigateIntent: (intentName, intentParams, options) => {\n        console.warn('navigateIntent', intentName, intentParams, options)\n      },\n      createPathWithParams,\n    }\n  }, [createPathWithParams, onStructureParams, refs, searchParams, structureParams])\n\n  return <PaneRouterContext.Provider value={context}>{children}</PaneRouterContext.Provider>\n}\n","import {Card, Code, ErrorBoundary, Flex, Label, Stack} from '@sanity/ui'\nimport {useCallback, useEffect, useMemo, useState, type ErrorInfo, type ReactElement} from 'react'\nimport {useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\nimport {ErrorCard} from '../components/ErrorCard'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {\n  getPublishedId,\n  PaneLayout,\n  DocumentListPane as StructureDocumentListPane,\n  StructureToolProvider,\n  type PaneNode,\n} from '../internals'\nimport type {\n  MainDocumentState,\n  PresentationSearchParams,\n  StructureDocumentPaneParams,\n} from '../types'\nimport {usePresentationTool} from '../usePresentationTool'\nimport {PresentationPaneRouterProvider} from './PresentationPaneRouterProvider'\n\nconst RootLayout = styled(PaneLayout)`\n  height: 100%;\n`\n\nconst Root = styled(Flex)`\n  & > div {\n    min-width: none !important;\n    max-width: none !important;\n  }\n`\n\nconst WrappedCode = styled(Code)`\n  white-space: pre-wrap;\n`\n\nexport function DocumentListPane(props: {\n  mainDocumentState?: MainDocumentState\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  searchParams: PresentationSearchParams\n  refs: {_id: string; _type: string}[]\n}): ReactElement {\n  const {mainDocumentState, onStructureParams, searchParams, refs} = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {devMode} = usePresentationTool()\n\n  const ids = useMemo(\n    () =>\n      refs\n        .filter((r) => getPublishedId(r._id) !== mainDocumentState?.document?._id)\n        .map((r) => r._id),\n    [mainDocumentState, refs],\n  )\n\n  const pane: Extract<PaneNode, {type: 'documentList'}> = useMemo(\n    () => ({\n      id: '$root',\n      options: {\n        filter: '_id in $ids',\n        params: {ids},\n        // defaultOrdering: [{field: '_updatedAt', direction: 'desc'}],\n      },\n      schemaTypeName: '',\n      title: t('document-list-pane.document-list.title'),\n      type: 'documentList',\n    }),\n    [ids, t],\n  )\n\n  const [errorParams, setErrorParams] = useState<{\n    info: ErrorInfo\n    error: Error\n  } | null>(null)\n\n  const handleRetry = useCallback(() => setErrorParams(null), [])\n\n  const [structureParams] = useState(() => ({}))\n\n  // Reset error state when `refs` value schanges\n  useEffect(() => setErrorParams(null), [refs])\n\n  if (errorParams) {\n    return (\n      <ErrorCard flex={1} message={t('document-list-pane.error.text')} onRetry={handleRetry}>\n        {devMode && (\n          // show runtime error message in dev mode\n          <Card overflow=\"auto\" padding={3} radius={2} tone=\"critical\">\n            <Stack space={3}>\n              <Label muted size={0}>\n                {t('presentation-error.label')}\n              </Label>\n              <WrappedCode size={1}>{errorParams.error.message}</WrappedCode>\n            </Stack>\n          </Card>\n        )}\n      </ErrorCard>\n    )\n  }\n\n  return (\n    <ErrorBoundary onCatch={setErrorParams}>\n      <RootLayout>\n        <StructureToolProvider>\n          <PresentationPaneRouterProvider\n            onStructureParams={onStructureParams}\n            structureParams={structureParams}\n            searchParams={searchParams}\n            refs={refs}\n          >\n            <Root direction=\"column\" flex={1}>\n              <StructureDocumentListPane index={0} itemId=\"$root\" pane={pane} paneKey=\"$root\" />\n            </Root>\n          </PresentationPaneRouterProvider>\n        </StructureToolProvider>\n      </RootLayout>\n    </ErrorBoundary>\n  )\n}\n","import {Card, Code, ErrorBoundary, Label, Stack} from '@sanity/ui'\nimport {\n  Suspense,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n  type ErrorInfo,\n  type ReactElement,\n} from 'react'\nimport {useTranslation, type Path} from 'sanity'\nimport {styled} from 'styled-components'\nimport {ErrorCard} from '../components/ErrorCard'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {\n  decodeJsonParams,\n  PaneLayout,\n  DocumentPane as StructureDocumentPane,\n  type DocumentPaneNode,\n} from '../internals'\nimport {PresentationSpinner} from '../PresentationSpinner'\nimport type {PresentationSearchParams, StructureDocumentPaneParams} from '../types'\nimport {usePresentationTool} from '../usePresentationTool'\nimport {PresentationPaneRouterProvider} from './PresentationPaneRouterProvider'\n\nconst WrappedCode = styled(Code)`\n  white-space: pre-wrap;\n`\n\nexport function DocumentPane(props: {\n  documentId: string\n  documentType: string\n  onFocusPath: (path: Path) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  structureParams: StructureDocumentPaneParams\n  searchParams: PresentationSearchParams\n}): ReactElement {\n  const {documentId, documentType, onFocusPath, onStructureParams, searchParams, structureParams} =\n    props\n  const {template, templateParams} = structureParams\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {devMode} = usePresentationTool()\n\n  const paneDocumentNode: DocumentPaneNode = useMemo(\n    () => ({\n      id: documentId,\n      options: {\n        id: documentId,\n        type: documentType,\n        template,\n        templateParameters: decodeJsonParams(templateParams),\n      },\n      title: '',\n      type: 'document',\n    }),\n    [documentId, documentType, template, templateParams],\n  )\n\n  const [errorParams, setErrorParams] = useState<{\n    info: ErrorInfo\n    error: Error\n  } | null>(null)\n\n  const handleRetry = useCallback(() => setErrorParams(null), [])\n\n  // Reset error state when parameters change\n  useEffect(() => {\n    setErrorParams(null)\n  }, [documentId, documentType, structureParams])\n\n  if (errorParams) {\n    return (\n      <ErrorCard flex={1} message={t('document-pane.error.text')} onRetry={handleRetry}>\n        {devMode && (\n          // show runtime error message in dev mode\n          <Card overflow=\"auto\" padding={3} radius={2} tone=\"critical\">\n            <Stack space={3}>\n              <Label muted size={0}>\n                {t('presentation-error.label')}\n              </Label>\n              <WrappedCode size={1}>{errorParams.error.message}</WrappedCode>\n            </Stack>\n          </Card>\n        )}\n      </ErrorCard>\n    )\n  }\n\n  return (\n    <ErrorBoundary onCatch={setErrorParams}>\n      <PaneLayout style={{height: '100%'}}>\n        <PresentationPaneRouterProvider\n          searchParams={searchParams}\n          onStructureParams={onStructureParams}\n          structureParams={structureParams}\n        >\n          <Suspense fallback={<PresentationSpinner />}>\n            <StructureDocumentPane\n              paneKey=\"document\"\n              index={1}\n              itemId=\"document\"\n              pane={paneDocumentNode}\n              onFocusPath={onFocusPath}\n            />\n          </Suspense>\n        </PresentationPaneRouterProvider>\n      </PaneLayout>\n    </ErrorBoundary>\n  )\n}\n","import {type ReactElement} from 'react'\nimport {type Path} from 'sanity'\nimport {StructureToolProvider} from '../internals'\nimport type {PresentationSearchParams, StructureDocumentPaneParams} from '../types'\nimport {DocumentPane} from './DocumentPane'\n\nexport function DocumentPanel(props: {\n  documentId: string\n  documentType: string\n  onFocusPath: (path: Path) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  searchParams: PresentationSearchParams\n  structureParams: StructureDocumentPaneParams\n}): ReactElement {\n  const {documentId, documentType, onFocusPath, onStructureParams, searchParams, structureParams} =\n    props\n  return (\n    <StructureToolProvider>\n      <DocumentPane\n        documentId={documentId}\n        documentType={documentType}\n        onFocusPath={onFocusPath}\n        onStructureParams={onStructureParams}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      />\n    </StructureToolProvider>\n  )\n}\n","import {type SchemaType} from '@sanity/types'\nimport {useEffect, useState} from 'react'\nimport {\n  getPreviewStateObservable,\n  useDocumentPreviewStore,\n  type PreviewValue,\n  type SanityDocument,\n} from '../internals'\n\ninterface PreviewState {\n  isLoading?: boolean\n  draft?: PreviewValue | Partial<SanityDocument> | null\n  published?: PreviewValue | Partial<SanityDocument> | null\n}\n\nexport default function usePreviewState(documentId: string, schemaType?: SchemaType): PreviewState {\n  const documentPreviewStore = useDocumentPreviewStore()\n  const [preview, setPreview] = useState<PreviewState>({})\n\n  useEffect(() => {\n    if (!schemaType) {\n      return undefined\n    }\n    const subscription = getPreviewStateObservable(\n      documentPreviewStore,\n      schemaType,\n      documentId,\n      '',\n    ).subscribe((state) => {\n      setPreview(state)\n    })\n\n    return () => {\n      subscription?.unsubscribe()\n    }\n  }, [documentPreviewStore, schemaType, documentId])\n\n  return preview\n}\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {Box, Card, Flex, Text} from '@sanity/ui'\nimport {useCallback, useMemo, type HTMLProps, type ReactElement} from 'react'\nimport {StateLink} from 'sanity/router'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {\n  getPreviewValueWithFallback,\n  PreviewCard,\n  SanityDefaultPreview,\n  Translate,\n  useSchema,\n  useTranslation,\n  type Path,\n  type SanityDocument,\n} from '../internals'\nimport type {\n  MainDocumentState,\n  PresentationSearchParams,\n  StructureDocumentPaneParams,\n} from '../types'\nimport {DocumentListPane} from './DocumentListPane'\nimport {DocumentPanel} from './DocumentPanel'\nimport usePreviewState from './usePreviewState'\n\nexport function ContentEditor(props: {\n  documentId?: string\n  documentType?: string\n  mainDocumentState?: MainDocumentState\n  onFocusPath: (path: Path) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  refs: {_id: string; _type: string}[]\n  structureParams: StructureDocumentPaneParams\n  searchParams: PresentationSearchParams\n}): ReactElement {\n  const {\n    documentId,\n    documentType,\n    mainDocumentState,\n    onFocusPath,\n    onStructureParams,\n    refs,\n    searchParams,\n    structureParams,\n  } = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const schema = useSchema()\n\n  const MainDocumentLink = useCallback(\n    (props: HTMLProps<HTMLAnchorElement>) => {\n      return (\n        <StateLink\n          {...props}\n          state={{\n            id: mainDocumentState?.document?._id,\n            type: mainDocumentState?.document?._type,\n            _searchParams: Object.entries(searchParams),\n          }}\n        />\n      )\n    },\n    [mainDocumentState, searchParams],\n  )\n\n  const schemaType = useMemo(\n    () => schema.get(mainDocumentState?.document?._type || 'shoe')!,\n    [mainDocumentState, schema],\n  )\n\n  const previewState = usePreviewState(mainDocumentState?.document?._id || '', schemaType)\n\n  const preview = useMemo(() => {\n    if (!mainDocumentState?.document) return null\n\n    return (\n      <SanityDefaultPreview\n        {...getPreviewValueWithFallback({\n          value: mainDocumentState!.document! as SanityDocument,\n          published: previewState.published,\n          draft: previewState.draft,\n        })}\n        schemaType={schemaType}\n        status={\n          <Card padding={1} radius={2} shadow={1}>\n            <Text muted size={0} weight=\"medium\">\n              {t('main-document.label')}\n            </Text>\n          </Card>\n        }\n      />\n    )\n  }, [mainDocumentState, schemaType, t, previewState])\n\n  if (documentId && documentType) {\n    return (\n      <DocumentPanel\n        documentId={documentId}\n        documentType={documentType}\n        onFocusPath={onFocusPath}\n        onStructureParams={onStructureParams}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      />\n    )\n  }\n\n  return (\n    <Flex direction=\"column\" flex={1} height=\"fill\">\n      {mainDocumentState && (\n        <Card padding={3} tone={mainDocumentState.document ? 'inherit' : 'caution'}>\n          {mainDocumentState.document ? (\n            <PreviewCard\n              __unstable_focusRing\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              as={MainDocumentLink as any}\n              data-as=\"a\"\n              radius={2}\n              sizing=\"border\"\n              tone=\"inherit\"\n            >\n              {preview}\n            </PreviewCard>\n          ) : (\n            <Card padding={2} radius={2} tone=\"inherit\">\n              <Flex gap={3}>\n                <Box flex=\"none\">\n                  <Text size={1}>\n                    <WarningOutlineIcon />\n                  </Text>\n                </Box>\n                <Box flex={1}>\n                  <Text size={1}>\n                    <Translate\n                      t={t}\n                      i18nKey=\"main-document.missing.text\"\n                      components={{Code: 'code'}}\n                      values={{path: mainDocumentState.path}}\n                    />\n                  </Text>\n                </Box>\n              </Flex>\n            </Card>\n          )}\n        </Card>\n      )}\n\n      <DocumentListPane\n        mainDocumentState={mainDocumentState}\n        onStructureParams={onStructureParams}\n        searchParams={searchParams}\n        refs={refs}\n      />\n    </Flex>\n  )\n}\n","import validate from './validate.js';\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  //\n  // Note to future-self: No, you can't remove the `toLowerCase()` call.\n  // REF: https://github.com/uuidjs/uuid/pull/677#issuecomment-1757351351\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n  var uuid = unsafeStringify(arr, offset);\n  // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n  return uuid;\n}\nexport default stringify;","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n  return getRandomValues(rnds8);\n}","var randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    offset = offset || 0;\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n    return buf;\n  }\n  return unsafeStringify(rnds);\n}\nexport default v4;","import {useState} from 'react'\nimport {v4 as uuid} from 'uuid'\n\nexport function usePanelId(id?: string): string {\n  const [panelId] = useState(() => id || uuid())\n  return panelId\n}\n","import {\n  useCallback,\n  useContext,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  type FunctionComponent,\n  type MouseEvent as ReactMouseEvent,\n} from 'react'\nimport {styled} from 'styled-components'\nimport {PanelsContext} from './PanelsContext'\nimport {usePanelId} from './usePanelId'\n\nconst Resizer = styled.div`\n  position: relative;\n`\nconst ResizerInner = styled.div<{\n  $disabled: boolean\n}>`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: -5px;\n  width: 9px;\n  z-index: 10;\n  cursor: ${({$disabled}) => ($disabled ? 'auto' : 'ew-resize')};\n\n  /* Border */\n  & > span:nth-child(1) {\n    display: block;\n    border-left: 1px solid var(--card-border-color);\n    position: absolute;\n    top: 0;\n    left: 4px;\n    bottom: 0;\n    transition: opacity 200ms;\n  }\n\n  ${({$disabled}) =>\n    !$disabled &&\n    `\n    /* Hover effect */\n    & > span:nth-child(2) {\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 9px;\n      bottom: 0;\n      background-color: var(--card-border-color);\n      opacity: 0;\n      transition: opacity 150ms;\n    }\n\n    @media (hover: hover) {\n      &:hover > span:nth-child(2) {\n        opacity: 0.2;\n      }\n    }\n  `}\n`\n\nexport const PanelResizer: FunctionComponent<{\n  id?: string\n  order: number\n  disabled?: boolean\n}> = function ({id: propId, order, disabled = false}) {\n  const el = useRef<HTMLDivElement>(null)\n\n  const context = useContext(PanelsContext)\n\n  if (context === null) {\n    throw Error(`Panel components must be rendered within a PanelGroup container`)\n  }\n\n  const id = usePanelId(propId)\n\n  const {activeResizer, drag, startDragging, stopDragging, registerElement, unregisterElement} =\n    context\n\n  const isDragging = activeResizer === id\n\n  if (context === null) {\n    throw Error(`Panel components must be rendered within a PanelGroup container`)\n  }\n\n  const onMouseDown = useCallback(\n    (event: ReactMouseEvent) => {\n      startDragging(id, event.nativeEvent)\n    },\n    [id, startDragging],\n  )\n\n  const onDrag = useCallback(\n    (e: MouseEvent) => {\n      drag(id, e)\n    },\n    [id, drag],\n  )\n\n  const onDragStop = useCallback(() => {\n    el.current!.blur()\n    stopDragging()\n  }, [stopDragging])\n\n  useEffect(() => {\n    if (!isDragging || disabled) return\n\n    // Set styles to prevent text selection and force an ew-resize cursor whilst\n    // dragging. Return a reset callback so we can revert to any values that\n    // might have been present before dragging started.\n    function setDocumentStyles() {\n      const bodyStyle = document.body.style\n      const documentStyle = document.documentElement.style\n\n      const {cursor} = documentStyle\n      const {userSelect} = bodyStyle\n\n      documentStyle.cursor = 'ew-resize'\n      bodyStyle.userSelect = 'none'\n\n      return () => {\n        if (cursor) documentStyle.cursor = cursor\n        else documentStyle.removeProperty('cursor')\n\n        if (userSelect) bodyStyle.userSelect = userSelect\n        else bodyStyle.removeProperty('user-select')\n      }\n    }\n\n    const resetDocumentStyles = setDocumentStyles()\n    window.addEventListener('mousemove', onDrag)\n    window.addEventListener('mouseup', onDragStop)\n    window.addEventListener('contextmenu', onDragStop)\n\n    return () => {\n      resetDocumentStyles()\n      window.removeEventListener('mousemove', onDrag)\n      window.removeEventListener('mouseup', onDragStop)\n      window.removeEventListener('contextmenu', onDragStop)\n    }\n  }, [disabled, isDragging, onDrag, onDragStop])\n\n  useLayoutEffect(() => {\n    registerElement(id, {id, order, type: 'resizer', el})\n\n    return () => {\n      unregisterElement(id)\n    }\n  }, [id, order, registerElement, unregisterElement])\n\n  return (\n    <Resizer onMouseDown={onMouseDown} ref={el}>\n      <ResizerInner $disabled={disabled}>\n        <span />\n        <span />\n      </ResizerInner>\n    </Resizer>\n  )\n}\n","import {\n  type Dispatch,\n  type FunctionComponent,\n  type PropsWithChildren,\n  type SetStateAction,\n} from 'react'\nimport type {Path, SanityDocument} from 'sanity'\nimport {ContentEditor} from './editor/ContentEditor'\nimport {CommentsIntentProvider, type CommentIntentGetter} from './internals'\nimport {DisplayedDocumentBroadcasterProvider} from './loader/DisplayedDocumentBroadcaster'\nimport {Panel} from './panels/Panel'\nimport {PanelResizer} from './panels/PanelResizer'\nimport type {\n  MainDocumentState,\n  PresentationParams,\n  PresentationSearchParams,\n  StructureDocumentPaneParams,\n} from './types'\n\nexport interface PresentationContentProps {\n  documentId: PresentationParams['id']\n  documentsOnPage: {_id: string; _type: string}[]\n  documentType: PresentationParams['type']\n  getCommentIntent: CommentIntentGetter\n  mainDocumentState: MainDocumentState | undefined\n  onFocusPath: (path: Path) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  searchParams: PresentationSearchParams\n  setDisplayedDocument: Dispatch<SetStateAction<Partial<SanityDocument> | null | undefined>>\n  structureParams: StructureDocumentPaneParams\n}\n\nconst PresentationContentWrapper: FunctionComponent<\n  PropsWithChildren<{\n    documentId?: string\n    getCommentIntent: CommentIntentGetter\n    setDisplayedDocument: Dispatch<SetStateAction<Partial<SanityDocument> | null | undefined>>\n  }>\n> = (props) => {\n  const {documentId, setDisplayedDocument, getCommentIntent} = props\n  return (\n    <>\n      <PanelResizer order={4} />\n      <Panel id=\"content\" minWidth={325} order={5}>\n        <DisplayedDocumentBroadcasterProvider\n          documentId={documentId}\n          setDisplayedDocument={setDisplayedDocument}\n        >\n          <CommentsIntentProvider getIntent={getCommentIntent}>\n            {props.children}\n          </CommentsIntentProvider>\n        </DisplayedDocumentBroadcasterProvider>\n      </Panel>\n    </>\n  )\n}\n\nexport const PresentationContent: FunctionComponent<PresentationContentProps> = (props) => {\n  const {\n    documentId,\n    documentsOnPage,\n    documentType,\n    getCommentIntent,\n    mainDocumentState,\n    onFocusPath,\n    onStructureParams,\n    searchParams,\n    setDisplayedDocument,\n    structureParams,\n  } = props\n\n  return (\n    <PresentationContentWrapper\n      documentId={documentId}\n      getCommentIntent={getCommentIntent}\n      setDisplayedDocument={setDisplayedDocument}\n    >\n      <ContentEditor\n        documentId={documentId}\n        documentType={documentType}\n        mainDocumentState={mainDocumentState}\n        onFocusPath={onFocusPath}\n        onStructureParams={onStructureParams}\n        refs={documentsOnPage}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      />\n    </PresentationContentWrapper>\n  )\n}\n","import {useCallback, type FunctionComponent, type PropsWithChildren} from 'react'\nimport {\n  PresentationNavigateContext,\n  type PresentationNavigateContextValue,\n} from './PresentationNavigateContext'\nimport type {PresentationNavigate} from './types'\n\nexport const PresentationNavigateProvider: FunctionComponent<\n  PropsWithChildren<{\n    navigate: PresentationNavigate\n  }>\n> = function (props) {\n  const {children, navigate: _navigate} = props\n\n  const navigate = useCallback<PresentationNavigateContextValue>(\n    (preview, document = undefined) => {\n      _navigate(document || {}, preview ? {preview} : {})\n    },\n    [_navigate],\n  )\n\n  return (\n    <PresentationNavigateContext.Provider value={navigate}>\n      {children}\n    </PresentationNavigateContext.Provider>\n  )\n}\n","import {useEffect, useState, type Dispatch, type SetStateAction} from 'react'\n\nexport function useLocalState<T>(key: string, defaultValue: T): [T, Dispatch<SetStateAction<T>>] {\n  const [value, setValue] = useState<T>(() =>\n    JSON.parse(localStorage.getItem(key) ?? JSON.stringify(defaultValue)),\n  )\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value))\n  }, [key, value])\n\n  return [value, setValue]\n}\n","import {memo, useCallback, useMemo} from 'react'\nimport {Panel} from './panels/Panel'\nimport {PanelResizer} from './panels/PanelResizer'\nimport type {NavigatorOptions} from './types'\nimport {useLocalState} from './useLocalState'\n\n/** @internal */\nexport interface UsePresentationNavigatorProps {\n  unstable_navigator?: NavigatorOptions\n}\n\n/** @internal */\nexport interface UsePresentationNavigatorState {\n  navigatorEnabled: boolean\n  toggleNavigator: (() => void) | undefined\n}\n\n/** @internal */\nexport function usePresentationNavigator(\n  props: UsePresentationNavigatorProps,\n): [UsePresentationNavigatorState, () => JSX.Element] {\n  const {unstable_navigator} = props\n\n  const navigatorProvided = !!unstable_navigator?.component\n  const [_navigatorEnabled, setNavigatorEnabled] = useLocalState<boolean>(\n    'presentation/navigator',\n    navigatorProvided,\n  )\n  const navigatorEnabled = navigatorProvided ? _navigatorEnabled : false\n  const toggleNavigator = useMemo(() => {\n    if (!navigatorProvided) return undefined\n\n    return () => setNavigatorEnabled((enabled) => !enabled)\n  }, [navigatorProvided, setNavigatorEnabled])\n\n  const Component = useCallback(\n    function PresentationNavigator() {\n      return <>{navigatorEnabled && <Navigator {...unstable_navigator!} />}</>\n    },\n    [navigatorEnabled, unstable_navigator],\n  )\n\n  return [{navigatorEnabled, toggleNavigator}, Component]\n}\n\nfunction NavigatorComponent(props: NavigatorOptions) {\n  const {minWidth, maxWidth, component: NavigatorComponent} = props\n  const navigatorDisabled = minWidth != null && maxWidth != null && minWidth === maxWidth\n  return (\n    <>\n      <Panel id=\"navigator\" minWidth={minWidth} maxWidth={maxWidth} order={1}>\n        <NavigatorComponent />\n      </Panel>\n      <PanelResizer order={2} disabled={navigatorDisabled} />\n    </>\n  )\n}\nconst Navigator = memo(NavigatorComponent)\n","import {useMemo, type FunctionComponent, type PropsWithChildren} from 'react'\nimport {PresentationParamsContext} from './PresentationParamsContext'\nimport type {PresentationParams} from './types'\n\nexport const PresentationParamsProvider: FunctionComponent<\n  PropsWithChildren<{\n    params: PresentationParams\n  }>\n> = function (props) {\n  const {children, params} = props\n\n  const context = useMemo<PresentationParams>(() => params, [params])\n\n  return (\n    <PresentationParamsContext.Provider value={context}>\n      {children}\n    </PresentationParamsContext.Provider>\n  )\n}\n","import {useMemo, type FunctionComponent, type PropsWithChildren} from 'react'\nimport {PresentationContext, type PresentationContextValue} from './PresentationContext'\nimport type {\n  PresentationNavigate,\n  PresentationParams,\n  PresentationSearchParams,\n  StructureDocumentPaneParams,\n} from './types'\n\nexport const PresentationProvider: FunctionComponent<\n  PropsWithChildren<{\n    devMode: boolean\n    name: string\n    navigate: PresentationNavigate\n    params: PresentationParams\n    searchParams: PresentationSearchParams\n    structureParams: StructureDocumentPaneParams\n  }>\n> = function (props) {\n  const {children, devMode, name, navigate, params, searchParams, structureParams} = props\n\n  const context = useMemo<PresentationContextValue>(\n    () => ({\n      devMode,\n      name,\n      navigate,\n      params,\n      searchParams,\n      structureParams,\n    }),\n    [devMode, name, navigate, params, searchParams, structureParams],\n  )\n\n  return <PresentationContext.Provider value={context}>{children}</PresentationContext.Provider>\n}\n","import {Box} from '@sanity/ui'\nimport {motion, type VariantLabels, type Variants} from 'framer-motion'\nimport {forwardRef, useId, type ReactEventHandler} from 'react'\nimport {styled} from 'styled-components'\n\nconst IFrameElement = motion.create(styled.iframe`\n  box-shadow: 0 0 0 1px var(--card-border-color);\n  border: 0;\n  max-height: 100%;\n  width: 100%;\n  view-transition-class: presentation-tool-iframe;\n`)\n\nconst IFrameOverlay = styled(Box)`\n  position: absolute;\n  inset: 0;\n  background: transparent;\n`\n\ninterface IFrameProps {\n  animate: VariantLabels\n  initial: VariantLabels\n  onLoad: ReactEventHandler<HTMLIFrameElement>\n  preventClick: boolean\n  src: string\n  variants: Variants\n  style: React.CSSProperties\n}\n\nexport const IFrame = forwardRef<HTMLIFrameElement, IFrameProps>(function IFrame(props, ref) {\n  const {animate, initial, onLoad, preventClick, src, variants, style} = props\n  const id = useId()\n\n  return (\n    <>\n      <IFrameElement\n        style={{\n          ...style,\n          // useId() guarantees that the ID will be unique, even if we add support for multiple iframe instances,\n          // while `view-transition-class: presentation-tool-iframe` provides userland a way to customize the transition with CSS if they wish\n          viewTransitionName: `presentation-tool-iframe-${id.replace(/[^a-zA-Z0-9-_]/g, '_')}`,\n        }}\n        animate={animate}\n        initial={initial}\n        onLoad={onLoad}\n        ref={ref}\n        src={src}\n        variants={variants}\n      />\n      {preventClick && <IFrameOverlay />}\n    </>\n  )\n})\n","import {LaunchIcon} from '@sanity/icons'\nimport {Button, Text, Tooltip} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {useTranslation} from 'sanity'\nimport {presentationLocaleNamespace} from '../i18n'\nimport type {PreviewProps} from './Preview'\n\n/** @internal */\nexport function OpenPreviewButton(\n  props: Pick<PreviewProps, 'openPopup'> & {\n    previewLocationOrigin: string\n    previewLocationRoute: string\n  },\n): React.ReactNode {\n  const {openPopup, previewLocationOrigin, previewLocationRoute} = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n\n  const handleOpenPopup = useCallback(\n    (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n      event.preventDefault()\n      openPopup(event.currentTarget.href)\n    },\n    [openPopup],\n  )\n\n  return (\n    <Tooltip\n      animate\n      content={<Text size={1}>{t('share-url.menu-item.open.text')}</Text>}\n      fallbackPlacements={['bottom-start']}\n      padding={2}\n      placement=\"bottom\"\n      portal\n    >\n      <Button\n        as=\"a\"\n        aria-label={t('share-url.menu-item.open.text')}\n        fontSize={1}\n        icon={LaunchIcon}\n        mode=\"bleed\"\n        padding={2}\n        href={`${previewLocationOrigin}${previewLocationRoute}`}\n        // @ts-expect-error the `as=\"a\"` prop isn't enough to change the type of event.target from <div> to <a>\n        onClick={handleOpenPopup}\n        rel=\"opener\"\n        target=\"_blank\"\n      />\n    </Tooltip>\n  )\n}\n","import {ResetIcon} from '@sanity/icons'\nimport {TextInput, type TextInputClearButtonProps} from '@sanity/ui'\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  type ChangeEvent,\n  type FunctionComponent,\n  type KeyboardEvent,\n  type ReactNode,\n} from 'react'\nimport {useTranslation} from 'sanity'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {useActiveWorkspace} from '../internals'\n\nexport const PreviewLocationInput: FunctionComponent<{\n  fontSize?: number\n  onChange: (value: string) => void\n  origin: string\n  padding?: number\n  prefix?: ReactNode\n  suffix?: ReactNode\n  value: string\n}> = function (props) {\n  const {fontSize = 1, onChange, origin, padding = 3, prefix, suffix, value} = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {basePath = '/'} = useActiveWorkspace()?.activeWorkspace || {}\n\n  const inputRef = useRef<HTMLInputElement | null>(null)\n  const [sessionValue, setSessionValue] = useState<string | undefined>(undefined)\n  const [customValidity, setCustomValidity] = useState<string | undefined>(undefined)\n\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    setSessionValue(event.currentTarget.value)\n  }, [])\n\n  const handleKeyDown = useCallback(\n    (event: KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Enter') {\n        if (sessionValue === undefined) {\n          return\n        }\n\n        const absoluteValue =\n          sessionValue.startsWith('/') || sessionValue === ''\n            ? `${origin}${sessionValue}`\n            : sessionValue\n\n        if (!absoluteValue.startsWith(origin + '/') && absoluteValue !== origin) {\n          setCustomValidity(t('preview-location-input.error', {origin, context: 'missing-origin'}))\n          return\n        }\n        // `origin` is an empty string '' if the Studio is embedded, and that's when we need to protect against recursion\n        if (!origin && (absoluteValue.startsWith(`${basePath}/`) || absoluteValue === basePath)) {\n          setCustomValidity(\n            t('preview-location-input.error', {basePath, context: 'same-base-path'}),\n          )\n          return\n        }\n\n        const nextValue = absoluteValue === origin ? origin + '/' : absoluteValue\n\n        setCustomValidity(undefined)\n        setSessionValue(undefined)\n\n        onChange(nextValue.slice(origin.length))\n\n        inputRef.current?.blur()\n      }\n\n      if (event.key === 'Escape') {\n        setCustomValidity(undefined)\n        setSessionValue(undefined)\n      }\n    },\n    [basePath, onChange, origin, sessionValue, t],\n  )\n\n  const handleBlur = useCallback(() => {\n    setCustomValidity(undefined)\n    setSessionValue(undefined)\n  }, [])\n\n  useEffect(() => {\n    setCustomValidity(undefined)\n    setSessionValue(undefined)\n  }, [origin, value])\n\n  const resetButton: TextInputClearButtonProps = useMemo(() => ({icon: ResetIcon}), [])\n\n  return (\n    <>\n      <TextInput\n        clearButton={customValidity ? resetButton : undefined}\n        customValidity={customValidity}\n        fontSize={fontSize}\n        onBlur={handleBlur}\n        onClear={() => {\n          setCustomValidity(undefined)\n          setSessionValue(origin + value)\n        }}\n        onChange={handleChange}\n        onKeyDownCapture={handleKeyDown}\n        padding={padding}\n        prefix={prefix}\n        style={{zIndex: 1}}\n        radius={2}\n        ref={inputRef}\n        space={padding}\n        suffix={suffix}\n        value={sessionValue === undefined ? `${origin}${value}` : sessionValue}\n      />\n    </>\n  )\n}\n","import type {SyncTag} from '@sanity/client'\nimport {CopyIcon, ShareIcon} from '@sanity/icons'\nimport {SanityMonogram} from '@sanity/logos'\nimport {fetchSharedAccessQuery} from '@sanity/preview-url-secret/constants'\nimport {\n  disablePreviewAccessSharing,\n  enablePreviewAccessSharing,\n} from '@sanity/preview-url-secret/toggle-preview-access-sharing'\nimport {setSecretSearchParams} from '@sanity/preview-url-secret/without-secret-search-params'\nimport {\n  Box,\n  Button,\n  Card,\n  Grid,\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuItem,\n  Spinner,\n  Stack,\n  Switch,\n  Text,\n  Tooltip,\n  useToast,\n} from '@sanity/ui'\nimport {AnimatePresence, motion} from 'framer-motion'\nimport {lazy, memo, Suspense, useCallback, useEffect, useMemo, useState} from 'react'\nimport {useClient, useCurrentUser, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\nimport {API_VERSION} from '../constants'\nimport {presentationLocaleNamespace} from '../i18n'\nimport type {PreviewProps} from './Preview'\n\nconst QRCodeSVG = lazy(() => import('./QRCodeSVG'))\n\nexport interface SharePreviewMenuProps {\n  canToggleSharePreviewAccess: boolean\n  canUseSharedPreviewAccess: boolean\n  previewLocationRoute: string\n  initialUrl: PreviewProps['initialUrl']\n  perspective: string\n}\n\nconst QrCodeLogoSize = 24\nconst QrCodeLogoPadding = 16\nconst QrSize = 224\n\nconst StyledSanityMonogram = styled(SanityMonogram)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  height: ${QrCodeLogoSize}px;\n  width: ${QrCodeLogoSize}px;\n`\n\nconst MotionSpinner = motion.create(Spinner)\nconst MotionText = motion.create(Text)\nconst MotionMonogram = motion.create(StyledSanityMonogram)\n\nexport const SharePreviewMenu = memo(function SharePreviewMenuComponent(\n  props: SharePreviewMenuProps,\n) {\n  const {\n    canToggleSharePreviewAccess,\n    canUseSharedPreviewAccess,\n    initialUrl,\n    previewLocationRoute,\n    perspective,\n  } = props\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {push: pushToast} = useToast()\n  const client = useClient({apiVersion: API_VERSION})\n  const currentUser = useCurrentUser()\n  const [loading, setLoading] = useState(true)\n  const [enabling, setEnabling] = useState(false)\n  const [disabling, setDisabling] = useState(false)\n  const [secret, setSecret] = useState<string | null>(null)\n  const busy = enabling || disabling || loading\n  const url = useMemo(\n    () =>\n      secret ? setSecretSearchParams(initialUrl, secret, previewLocationRoute, perspective) : null,\n    [initialUrl, perspective, previewLocationRoute, secret],\n  )\n\n  const [error, setError] = useState<unknown>(null)\n  if (error) {\n    throw error\n  }\n\n  const handleUnableToToggle = useCallback(() => {\n    pushToast({\n      closable: true,\n      status: 'warning',\n      title: t('share-preview-menu.error_toggle-sharing', {context: 'toggle-sharing'}),\n    })\n  }, [pushToast, t])\n\n  const handleDisableSharing = useCallback(async () => {\n    try {\n      setDisabling(true)\n      await disablePreviewAccessSharing(\n        client,\n        '@sanity/presentation',\n        typeof window === 'undefined' ? '' : location.href,\n        currentUser?.id,\n      )\n      setSecret(null)\n    } catch (error) {\n      setError(error)\n    } finally {\n      setDisabling(false)\n    }\n  }, [client, currentUser?.id])\n  const handleEnableSharing = useCallback(async () => {\n    try {\n      setEnabling(true)\n\n      const previewUrlSecret = await enablePreviewAccessSharing(\n        client,\n        '@sanity/presentation',\n        typeof window === 'undefined' ? '' : location.href,\n        currentUser?.id,\n      )\n      setSecret(previewUrlSecret.secret)\n    } catch (error) {\n      setError(error)\n    } finally {\n      setEnabling(false)\n    }\n  }, [client, currentUser?.id])\n\n  const handleCopyUrl = useCallback(() => {\n    try {\n      if (!url) {\n        throw new Error('No URL to copy')\n      }\n      navigator.clipboard.writeText(url.toString())\n      pushToast({\n        closable: true,\n        status: 'success',\n        title: t('share-url.clipboard.status', {context: 'success'}),\n      })\n    } catch (error) {\n      setError(error)\n    }\n  }, [pushToast, t, url])\n\n  useEffect(() => {\n    let controller = new AbortController()\n    let usedTags: SyncTag[] = []\n    async function fetchShareSecret(lastLiveEventId: string | null, signal: AbortSignal) {\n      const {result, syncTags} = await client.fetch<string | null>(\n        fetchSharedAccessQuery,\n        {},\n        {filterResponse: false, lastLiveEventId, tag: 'presentation.fetch-shared-access-secret'},\n      )\n      if (Array.isArray(syncTags)) {\n        usedTags = syncTags\n      }\n      if (!signal.aborted) {\n        setSecret(result)\n      }\n    }\n    const subscription = client.live.events().subscribe({\n      next: (event) => {\n        if (event.type === 'message') {\n          controller.abort()\n          controller = new AbortController()\n          if (event.tags.some((tag) => usedTags.includes(tag))) {\n            fetchShareSecret(event.id, controller.signal)\n          }\n        }\n      },\n      error: setError,\n    })\n\n    fetchShareSecret(null, controller.signal).finally(() => setLoading(false))\n\n    return () => {\n      subscription.unsubscribe()\n      controller.abort()\n    }\n  }, [client])\n\n  return (\n    <MenuButton\n      button={\n        <Button\n          aria-label={t('preview-frame.share-button.aria-label')}\n          fontSize={1}\n          icon={ShareIcon}\n          mode=\"bleed\"\n          padding={2}\n        />\n      }\n      id=\"share-menu\"\n      menu={\n        <Menu style={{maxWidth: 248}} padding={canUseSharedPreviewAccess ? undefined : 0}>\n          {canUseSharedPreviewAccess ? (\n            <>\n              <label style={{cursor: 'pointer'}}>\n                <Grid\n                  columns={2}\n                  rows={2}\n                  gapX={3}\n                  gapY={1}\n                  style={{\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    gridTemplateColumns: 'min-content 1fr',\n                    gridTemplateRows: 'min-content',\n                  }}\n                  paddingTop={3}\n                  paddingX={3}\n                >\n                  <Tooltip\n                    animate\n                    content={\n                      <Text size={1}>\n                        {t('share-preview-menu.toggle-button.tooltip', {\n                          context: url ? 'disable' : 'enable',\n                        })}\n                      </Text>\n                    }\n                    fallbackPlacements={['bottom-start']}\n                    padding={1}\n                    placement=\"bottom\"\n                    portal\n                  >\n                    <Switch\n                      checked={enabling || (url !== null && !disabling)}\n                      readOnly={enabling || disabling}\n                      indeterminate={loading}\n                      onChange={\n                        !canToggleSharePreviewAccess\n                          ? handleUnableToToggle\n                          : url\n                            ? handleDisableSharing\n                            : handleEnableSharing\n                      }\n                    />\n                  </Tooltip>\n                  <Text size={1} weight=\"medium\">\n                    {t('share-preview-menu.toggle-button.label', {context: 'first-line'})}\n                  </Text>\n                  <span />\n                  <Text muted size={1}>\n                    {t('share-preview-menu.toggle-button.label', {context: 'second-line'})}\n                  </Text>\n                </Grid>\n              </label>\n              <Box padding={3} paddingTop={2}>\n                <Stack space={3}>\n                  <Card\n                    tone={busy || !url ? 'transparent' : undefined}\n                    style={{\n                      position: 'relative',\n                      aspectRatio: '1 / 1',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                    }}\n                  >\n                    <AnimatePresence>\n                      {busy ? (\n                        <MotionSpinner\n                          muted\n                          initial={{opacity: 0}}\n                          animate={{opacity: 1}}\n                          exit={{opacity: 0}}\n                        />\n                      ) : url ? (\n                        <>\n                          <Suspense fallback={<Spinner />}>\n                            <QRCodeSVG\n                              title={t('share-preview-menu.qr-code.title', {url: url.toString()})}\n                              value={url.toString()}\n                              size={QrSize}\n                              color=\"var(--card-fg-color)\"\n                              logoSize={QrCodeLogoSize + QrCodeLogoPadding}\n                            />\n                            <MotionMonogram\n                              initial={{opacity: -0.5}}\n                              animate={{opacity: 1.5}}\n                              exit={{opacity: 0}}\n                            />\n                          </Suspense>\n                        </>\n                      ) : (\n                        <MotionText\n                          muted\n                          size={1}\n                          style={{maxWidth: '100px', textWrap: 'pretty', textAlign: 'center'}}\n                          initial={{opacity: 0}}\n                          animate={{opacity: 1}}\n                          exit={{opacity: 0}}\n                        >\n                          {t('share-preview-menu.qr-code.placeholder')}\n                        </MotionText>\n                      )}\n                    </AnimatePresence>\n                  </Card>\n                  <Text muted size={1}>\n                    {t('share-preview-menu.qr-code.instructions')}\n                  </Text>\n                </Stack>\n              </Box>\n              <MenuDivider />\n              <MenuItem\n                disabled={!url || disabling}\n                icon={CopyIcon}\n                onClick={handleCopyUrl}\n                fontSize={1}\n                padding={3}\n                text={t('share-preview-menu.copy-url.text')}\n              />\n            </>\n          ) : (\n            <Card padding={2} tone=\"caution\" radius={3}>\n              <Text style={{textWrap: 'pretty'}}>\n                {t('share-preview-menu.error', {context: 'missing-grants'})}\n              </Text>\n            </Card>\n          )}\n        </Menu>\n      }\n      popover={{\n        animate: true,\n        constrainSize: true,\n        placement: 'bottom',\n        portal: true,\n      }}\n    />\n  )\n})\nSharePreviewMenu.displayName = 'Memo(SharePreviewMenu)'\n","import {\n  CheckmarkIcon,\n  ChevronDownIcon,\n  DesktopIcon,\n  EditIcon,\n  MobileDeviceIcon,\n  PanelLeftIcon,\n  PublishIcon,\n  RefreshIcon,\n} from '@sanity/icons'\nimport {withoutSecretSearchParams} from '@sanity/preview-url-secret/without-secret-search-params'\nimport {\n  Box,\n  Button,\n  Card,\n  Flex,\n  Hotkeys,\n  Menu,\n  MenuButton,\n  MenuItem,\n  Stack,\n  Switch,\n  Text,\n  Tooltip,\n  type ButtonTone,\n} from '@sanity/ui'\nimport {\n  createElement,\n  useCallback,\n  useMemo,\n  type ComponentType,\n  type FunctionComponent,\n  type ReactNode,\n  type RefObject,\n} from 'react'\nimport {useTranslation} from 'sanity'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {ACTION_IFRAME_RELOAD} from '../reducers/presentationReducer'\nimport type {HeaderOptions, PresentationPerspective} from '../types'\nimport {OpenPreviewButton} from './OpenPreviewButton'\nimport type {PreviewProps} from './Preview'\nimport {PreviewLocationInput} from './PreviewLocationInput'\nimport {SharePreviewMenu} from './SharePreviewMenu'\n\nconst PERSPECTIVE_TITLE_KEY: Record<PresentationPerspective, string> = {\n  previewDrafts: 'preview-frame.perspective.previewDrafts.title',\n  published: 'preview-frame.perspective.published.title',\n}\n\nconst PERSPECTIVE_TONES: Record<PresentationPerspective, ButtonTone> = {\n  previewDrafts: 'caution',\n  published: 'positive',\n}\n\nconst PERSPECTIVE_ICONS: Record<PresentationPerspective, ComponentType> = {\n  previewDrafts: EditIcon,\n  published: PublishIcon,\n}\n\nexport interface PreviewHeaderProps extends PreviewProps {\n  iframeRef: RefObject<HTMLIFrameElement>\n  renderDefault: (props: PreviewHeaderProps) => ReactNode\n}\n\nconst PreviewHeaderDefault: FunctionComponent<Omit<PreviewHeaderProps, 'renderDefault'>> = (\n  props,\n) => {\n  const {\n    canSharePreviewAccess,\n    canToggleSharePreviewAccess,\n    canUseSharedPreviewAccess,\n    dispatch,\n    iframe,\n    iframeRef,\n    initialUrl,\n    loadersConnection,\n    navigatorEnabled,\n    onPathChange,\n    onRefresh,\n    openPopup,\n    overlaysConnection,\n    perspective,\n    previewUrl,\n    setPerspective,\n    setViewport,\n    targetOrigin,\n    toggleNavigator,\n    toggleOverlay,\n    viewport,\n    visualEditing: {overlaysEnabled},\n  } = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n\n  const toggleViewportSize = useCallback(\n    () => setViewport(viewport === 'desktop' ? 'mobile' : 'desktop'),\n    [setViewport, viewport],\n  )\n\n  const previewLocationOrigin = useMemo(() => {\n    return targetOrigin === location.origin ? '' : targetOrigin\n  }, [targetOrigin])\n\n  const handleRefresh = () => {\n    onRefresh(() => {\n      if (!iframeRef.current) {\n        return\n      }\n      dispatch({type: ACTION_IFRAME_RELOAD})\n      // Funky way to reload an iframe without CORS issues\n      // eslint-disable-next-line no-self-assign\n      // ref.current.src = ref.current.src\n      Object.assign(iframeRef.current, {src: `${targetOrigin}${previewUrl || '/'}`})\n    })\n  }\n\n  const previewLocationRoute = useMemo(() => {\n    const previewURL = new URL(previewUrl || '/', targetOrigin)\n    const {pathname, search} = withoutSecretSearchParams(previewURL)\n\n    return `${pathname}${search}`\n  }, [previewUrl, targetOrigin])\n\n  return (\n    <>\n      {toggleNavigator && (\n        <Box flex=\"none\" marginRight={1} padding={1}>\n          <Tooltip\n            animate\n            content={<Text size={1}>{t('preview-frame.navigator.toggle-button.tooltip')}</Text>}\n            fallbackPlacements={['bottom-start']}\n            padding={2}\n            placement=\"bottom\"\n            portal\n          >\n            <Button\n              aria-label={t('preview-frame.navigator.toggle-button.aria-label')}\n              fontSize={1}\n              icon={PanelLeftIcon}\n              mode=\"bleed\"\n              onClick={toggleNavigator}\n              padding={2}\n              selected={navigatorEnabled}\n            />\n          </Tooltip>\n        </Box>\n      )}\n\n      <Tooltip\n        animate\n        content={\n          <Flex align=\"center\" style={{whiteSpace: 'nowrap'}}>\n            <Box padding={1}>\n              <Text size={1}>\n                {t('preview-frame.overlay.toggle-button.tooltip', {\n                  context: overlaysEnabled ? 'disable' : 'enable',\n                })}\n              </Text>\n            </Box>\n            <Box paddingY={1}>\n              <Hotkeys keys={['Alt']} style={{marginTop: -4, marginBottom: -4}} />\n            </Box>\n          </Flex>\n        }\n        fallbackPlacements={['bottom-start']}\n        padding={1}\n        placement=\"bottom\"\n        portal\n      >\n        <Card\n          as=\"label\"\n          flex=\"none\"\n          marginRight={1}\n          padding={3}\n          style={{\n            lineHeight: 0,\n            borderRadius: 999,\n            userSelect: 'none',\n          }}\n          tone={overlaysEnabled ? 'transparent' : undefined}\n        >\n          <Flex align=\"center\" gap={3}>\n            <div style={{margin: -4}}>\n              <Switch\n                checked={overlaysEnabled}\n                onChange={toggleOverlay}\n                disabled={iframe.status === 'loading' || overlaysConnection !== 'connected'}\n              />\n            </div>\n            <Box>\n              <Text muted={!overlaysEnabled} size={1} weight=\"medium\">\n                {t('preview-frame.overlay.toggle-button.text')}\n              </Text>\n            </Box>\n          </Flex>\n        </Card>\n      </Tooltip>\n\n      <Box flex={1} marginX={1}>\n        <PreviewLocationInput\n          prefix={\n            <Box padding={1}>\n              <Tooltip\n                animate\n                content={\n                  <Text size={1}>\n                    {iframe.status === 'loaded'\n                      ? t('preview-frame.refresh-button.tooltip')\n                      : t('preview-frame.status', {context: iframe.status})}\n                  </Text>\n                }\n                fallbackPlacements={['bottom-end']}\n                padding={2}\n                placement=\"bottom\"\n                portal\n              >\n                <Button\n                  aria-label={t('preview-frame.refresh-button.aria-label')}\n                  fontSize={1}\n                  icon={RefreshIcon}\n                  mode=\"bleed\"\n                  loading={iframe.status === 'reloading' || iframe.status === 'refreshing'}\n                  onClick={handleRefresh}\n                  padding={2}\n                />\n              </Tooltip>\n            </Box>\n          }\n          onChange={onPathChange}\n          origin={previewLocationOrigin}\n          suffix={\n            <Box padding={1}>\n              <OpenPreviewButton\n                openPopup={openPopup}\n                previewLocationOrigin={previewLocationOrigin}\n                previewLocationRoute={previewLocationRoute}\n              />\n            </Box>\n          }\n          value={previewLocationRoute}\n        />\n      </Box>\n\n      <Flex align=\"center\" flex=\"none\" gap={1} padding={1}>\n        <MenuButton\n          button={\n            <Button\n              fontSize={1}\n              iconRight={ChevronDownIcon}\n              mode=\"bleed\"\n              padding={2}\n              space={2}\n              text={t(\n                PERSPECTIVE_TITLE_KEY[\n                  loadersConnection === 'connected' ? perspective : 'previewDrafts'\n                ],\n              )}\n              loading={loadersConnection === 'reconnecting' && iframe.status !== 'loaded'}\n              disabled={loadersConnection !== 'connected'}\n            />\n          }\n          id=\"perspective-menu\"\n          menu={\n            <Menu style={{maxWidth: 240}}>\n              <MenuItem\n                fontSize={1}\n                onClick={() => setPerspective('previewDrafts')}\n                padding={3}\n                pressed={perspective === 'previewDrafts'}\n                tone={PERSPECTIVE_TONES.previewDrafts}\n              >\n                <Flex align=\"flex-start\" gap={3}>\n                  <Box flex=\"none\">\n                    <Text size={1}>{createElement(PERSPECTIVE_ICONS.previewDrafts)}</Text>\n                  </Box>\n                  <Stack flex={1} space={2}>\n                    <Text size={1} weight=\"medium\">\n                      {t(PERSPECTIVE_TITLE_KEY['previewDrafts'])}\n                    </Text>\n                    <Text muted size={1}>\n                      {t('preview-frame.perspective.previewDrafts.text')}\n                    </Text>\n                  </Stack>\n                  <Box flex=\"none\">\n                    <Text\n                      muted\n                      size={1}\n                      style={{\n                        opacity: perspective === 'previewDrafts' ? 1 : 0,\n                      }}\n                    >\n                      <CheckmarkIcon />\n                    </Text>\n                  </Box>\n                </Flex>\n              </MenuItem>\n              <MenuItem\n                fontSize={1}\n                onClick={() => setPerspective('published')}\n                padding={3}\n                pressed={perspective === 'published'}\n                tone={PERSPECTIVE_TONES.published}\n              >\n                <Flex align=\"flex-start\" gap={3}>\n                  <Box flex=\"none\">\n                    <Text size={1}>{createElement(PERSPECTIVE_ICONS.published)}</Text>\n                  </Box>\n                  <Stack flex={1} space={2}>\n                    <Text size={1} weight=\"medium\">\n                      {t(PERSPECTIVE_TITLE_KEY['published'])}\n                    </Text>\n                    <Text muted size={1}>\n                      {t('preview-frame.perspective.published.text')}\n                    </Text>\n                  </Stack>\n                  <Box flex=\"none\">\n                    <Text\n                      muted\n                      size={1}\n                      style={{\n                        opacity: perspective === 'published' ? 1 : 0,\n                      }}\n                    >\n                      <CheckmarkIcon />\n                    </Text>\n                  </Box>\n                </Flex>\n              </MenuItem>\n            </Menu>\n          }\n          popover={{\n            animate: true,\n            constrainSize: true,\n            placement: 'bottom',\n            portal: true,\n          }}\n        />\n      </Flex>\n\n      <Flex align=\"center\" flex=\"none\" gap={1}>\n        <Tooltip\n          animate\n          content={\n            <Text size={1}>\n              {t('preview-frame.viewport-button.tooltip', {\n                context: viewport === 'desktop' ? 'narrow' : 'full',\n              })}\n            </Text>\n          }\n          fallbackPlacements={['bottom-start']}\n          padding={2}\n          placement=\"bottom\"\n          portal\n        >\n          <Button\n            aria-label={t('preview-frame.viewport-button.aria-label')}\n            fontSize={1}\n            icon={viewport === 'desktop' ? MobileDeviceIcon : DesktopIcon}\n            mode=\"bleed\"\n            onClick={toggleViewportSize}\n            padding={2}\n          />\n        </Tooltip>\n      </Flex>\n\n      {canSharePreviewAccess && (\n        <Flex align=\"center\" flex=\"none\" gap={1} paddingX={1}>\n          <SharePreviewMenu\n            canToggleSharePreviewAccess={canToggleSharePreviewAccess}\n            canUseSharedPreviewAccess={canUseSharedPreviewAccess}\n            previewLocationRoute={previewLocationRoute}\n            initialUrl={initialUrl}\n            perspective={perspective}\n          />\n        </Flex>\n      )}\n    </>\n  )\n}\n\nconst PreviewHeader: FunctionComponent<\n  Omit<PreviewHeaderProps, 'renderDefault'> & {options?: HeaderOptions}\n> = (props) => {\n  const renderDefault = useCallback((props: Omit<PreviewHeaderProps, 'renderDefault'>) => {\n    return createElement(PreviewHeaderDefault, props)\n  }, [])\n\n  const header = props.options?.component\n    ? createElement(props.options.component, {...props, renderDefault})\n    : renderDefault(props)\n\n  return (\n    <Card flex=\"none\" padding={2} borderBottom style={{position: 'relative'}}>\n      <Flex align=\"center\" style={{minHeight: 0}}>\n        {header}\n      </Flex>\n    </Card>\n  )\n}\n\n/** @internal */\nexport function usePresentationPreviewHeader(\n  props: Omit<PreviewHeaderProps, 'renderDefault'> & {options?: HeaderOptions},\n): () => ReactNode {\n  const Component = useCallback(() => {\n    return <PreviewHeader {...props} />\n  }, [props])\n\n  return Component\n}\n","import {\n  Button,\n  Card,\n  Code,\n  Flex,\n  Label,\n  Spinner,\n  Stack,\n  Text,\n  TooltipDelayGroupProvider,\n  usePrefersReducedMotion,\n} from '@sanity/ui'\nimport {AnimatePresence, motion, MotionConfig} from 'framer-motion'\nimport {\n  forwardRef,\n  memo,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n  useSyncExternalStore,\n} from 'react'\nimport {flushSync} from 'react-dom'\nimport {useTranslation} from 'sanity'\nimport {ErrorCard} from '../components/ErrorCard'\nimport {MAX_TIME_TO_OVERLAYS_CONNECTION} from '../constants'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {\n  ACTION_IFRAME_LOADED,\n  ACTION_IFRAME_RELOAD,\n  type DispatchPresentationAction,\n  type PresentationState,\n} from '../reducers/presentationReducer'\nimport type {\n  ConnectionStatus,\n  HeaderOptions,\n  PresentationPerspective,\n  PresentationViewport,\n} from '../types'\nimport {usePresentationTool} from '../usePresentationTool'\nimport {IFrame} from './IFrame'\nimport {usePresentationPreviewHeader} from './PreviewHeader'\n\nconst MotionFlex = motion.create(Flex)\n\nexport interface PreviewProps extends Pick<PresentationState, 'iframe' | 'visualEditing'> {\n  canSharePreviewAccess: boolean\n  canToggleSharePreviewAccess: boolean\n  canUseSharedPreviewAccess: boolean\n  dispatch: DispatchPresentationAction\n  header?: HeaderOptions\n  initialUrl: URL\n  loadersConnection: ConnectionStatus\n  navigatorEnabled: boolean\n  onPathChange: (nextPath: string) => void\n  onRefresh: (fallback: () => void) => void\n  openPopup: (url: string) => void\n  overlaysConnection: ConnectionStatus\n  perspective: PresentationPerspective\n  previewUrl?: string\n  setPerspective: (perspective: 'previewDrafts' | 'published') => void\n  setViewport: (mode: 'desktop' | 'mobile') => void\n  targetOrigin: string\n  toggleNavigator?: () => void\n  toggleOverlay: () => void\n  viewport: PresentationViewport\n}\n\nexport const Preview = memo(\n  forwardRef<HTMLIFrameElement, PreviewProps>(function PreviewComponent(props, forwardedRef) {\n    const {dispatch, iframe, header, initialUrl, loadersConnection, overlaysConnection, viewport} =\n      props\n\n    const {t} = useTranslation(presentationLocaleNamespace)\n    const {devMode} = usePresentationTool()\n    const prefersReducedMotion = usePrefersReducedMotion()\n    const ref = useRef<HTMLIFrameElement | null>(null)\n\n    const PreviewHeader = usePresentationPreviewHeader({\n      ...props,\n      iframeRef: ref,\n      options: header,\n    })\n\n    // Forward the iframe ref to the parent component\n    useImperativeHandle<HTMLIFrameElement | null, HTMLIFrameElement | null>(\n      forwardedRef,\n      () => ref.current,\n    )\n\n    const loading = iframe.status === 'loading' || iframe.status === 'reloading'\n    const [timedOut, setTimedOut] = useState(false)\n    const refreshing = iframe.status === 'refreshing'\n    const [somethingIsWrong, setSomethingIsWrong] = useState(false)\n    const iframeIsBusy = loading || refreshing || overlaysConnection === 'connecting'\n\n    const handleRetry = useCallback(() => {\n      if (!ref.current) {\n        return\n      }\n\n      ref.current.src = initialUrl.toString()\n\n      dispatch({type: ACTION_IFRAME_RELOAD})\n    }, [dispatch, initialUrl])\n    const handleContinueAnyway = useCallback(() => {\n      setContinueAnyway(true)\n    }, [])\n\n    const [continueAnyway, setContinueAnyway] = useState(false)\n    const [showOverlaysConnectionStatus, setShowOverlaysConnectionState] = useState(false)\n    useEffect(() => {\n      if (loading || refreshing) {\n        return\n      }\n\n      if (overlaysConnection === 'connecting' || overlaysConnection === 'reconnecting') {\n        const timeout = setTimeout(() => {\n          setShowOverlaysConnectionState(true)\n        }, 5_000)\n        return () => clearTimeout(timeout)\n      }\n      return\n    }, [overlaysConnection, loading, refreshing])\n\n    useEffect(() => {\n      if (loading || refreshing || !showOverlaysConnectionStatus) {\n        return\n      }\n      if (overlaysConnection === 'connected') {\n        setSomethingIsWrong(false)\n        setShowOverlaysConnectionState(false)\n        setTimedOut(false)\n        setContinueAnyway(false)\n      }\n      if (overlaysConnection === 'connecting') {\n        const timeout = setTimeout(() => {\n          setTimedOut(true)\n          // eslint-disable-next-line no-console\n          console.error(\n            `Unable to connect to visual editing. Make sure you've setup '@sanity/visual-editing' correctly`,\n          )\n        }, MAX_TIME_TO_OVERLAYS_CONNECTION)\n        return () => clearTimeout(timeout)\n      }\n      if (overlaysConnection === 'reconnecting') {\n        const timeout = setTimeout(() => {\n          setTimedOut(true)\n          setSomethingIsWrong(true)\n        }, MAX_TIME_TO_OVERLAYS_CONNECTION)\n        return () => clearTimeout(timeout)\n      }\n      return\n    }, [loading, overlaysConnection, refreshing, showOverlaysConnectionStatus])\n\n    const onIFrameLoad = useCallback(() => {\n      dispatch({type: ACTION_IFRAME_LOADED})\n    }, [dispatch])\n\n    /**\n     * Ensure that clicking outside of menus and dialogs will close as focus shifts to the iframe\n     */\n    useEffect(() => {\n      if (!ref.current) {\n        return\n      }\n      const instance = ref.current\n      function handleBlur() {\n        if (instance !== document.activeElement) {\n          return\n        }\n\n        instance.dispatchEvent(new MouseEvent('mousedown', {bubbles: true, cancelable: true}))\n      }\n      window.addEventListener('blur', handleBlur)\n      return () => {\n        window.removeEventListener('blur', handleBlur)\n      }\n    }, [])\n\n    const preventIframeInteraction = useMemo(() => {\n      return (\n        (loading || (overlaysConnection === 'connecting' && iframe.status !== 'refreshing')) &&\n        !continueAnyway\n      )\n    }, [continueAnyway, iframe.status, loading, overlaysConnection])\n\n    const canUseViewTransition = useSyncExternalStore(\n      useCallback(() => () => {}, []),\n      () => CSS.supports(`(view-transition-name: test)`),\n    )\n    const iframeAnimations = useMemo(() => {\n      return [\n        preventIframeInteraction ? 'background' : 'active',\n        loading ? 'reloading' : 'idle',\n        // If CSS View Transitions are supported, then transition iframe viewport dimensions with that instead of Motion\n        canUseViewTransition ? '' : viewport,\n        showOverlaysConnectionStatus && !continueAnyway ? 'timedOut' : '',\n      ]\n    }, [\n      canUseViewTransition,\n      continueAnyway,\n      loading,\n      preventIframeInteraction,\n      showOverlaysConnectionStatus,\n      viewport,\n    ])\n\n    const [currentViewport, setCurrentViewport] = useState(viewport)\n    const [iframeStyle, setIframeStyle] = useState(iframeVariants[viewport])\n    useEffect(() => {\n      if (canUseViewTransition && viewport !== currentViewport) {\n        const update = () => {\n          setCurrentViewport(viewport)\n          setIframeStyle(iframeVariants[viewport])\n        }\n        if (\n          !prefersReducedMotion &&\n          'startViewTransition' in document &&\n          typeof document.startViewTransition === 'function'\n        ) {\n          document.startViewTransition(() => flushSync(() => update()))\n        } else {\n          update()\n        }\n      }\n    }, [canUseViewTransition, prefersReducedMotion, currentViewport, viewport])\n\n    return (\n      <MotionConfig transition={prefersReducedMotion ? {duration: 0} : undefined}>\n        <TooltipDelayGroupProvider delay={1000}>\n          <PreviewHeader />\n\n          {/* @TODO: Move this to <PreviewFrame /> */}\n          <Card flex={1} tone=\"transparent\">\n            <Flex\n              align=\"center\"\n              height=\"fill\"\n              justify=\"center\"\n              padding={(canUseViewTransition ? currentViewport : viewport) === 'desktop' ? 0 : 2}\n              sizing=\"border\"\n              style={{\n                position: 'relative',\n                cursor: iframeIsBusy ? 'wait' : undefined,\n              }}\n            >\n              <AnimatePresence>\n                {!somethingIsWrong &&\n                !loading &&\n                !refreshing &&\n                // viewport, // using CSS View Transitions instead of framer motion to drive this\n                showOverlaysConnectionStatus &&\n                !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={spinnerVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      inset: '0',\n                      position: 'absolute',\n                      backdropFilter: timedOut\n                        ? 'blur(16px) saturate(0.5) grayscale(0.5)'\n                        : 'blur(2px)',\n                      ['transition' as string]: 'backdrop-filter 0.2s ease-in-out',\n                      // @TODO Because of Safari we have to do this\n                      WebkitBackdropFilter: timedOut\n                        ? 'blur(16px) saturate(0.5) grayscale(0.5)'\n                        : 'blur(2px)',\n                      WebkitTransition: '-webkit-backdrop-filter 0.2s ease-in-out',\n                      zIndex: 1,\n                    }}\n                  >\n                    <Flex\n                      style={{...sizes[viewport]}}\n                      justify=\"center\"\n                      align=\"center\"\n                      direction=\"column\"\n                      gap={4}\n                    >\n                      {timedOut && (\n                        <Button\n                          disabled\n                          fontSize={1}\n                          mode=\"ghost\"\n                          text={t('preview-frame.continue-button.text')}\n                          style={{opacity: 0}}\n                        />\n                      )}\n                      <Card\n                        radius={2}\n                        tone={timedOut ? 'caution' : 'inherit'}\n                        padding={4}\n                        shadow={1}\n                      >\n                        <Flex justify=\"center\" align=\"center\" direction=\"column\" gap={4}>\n                          <Spinner muted />\n                          <Text muted size={1}>\n                            {timedOut\n                              ? t('preview-frame.status', {context: 'timeout'})\n                              : t('preview-frame.status', {context: 'connecting'})}\n                          </Text>\n                        </Flex>\n                      </Card>\n                      {timedOut && (\n                        <Button\n                          fontSize={1}\n                          // mode=\"ghost\"\n                          tone=\"critical\"\n                          onClick={handleContinueAnyway}\n                          text={t('preview-frame.continue-button.text')}\n                        />\n                      )}\n                    </Flex>\n                  </MotionFlex>\n                ) : (loading ||\n                    (overlaysConnection === 'connecting' && iframe.status !== 'refreshing')) &&\n                  !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={spinnerVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      inset: '0',\n                      position: 'absolute',\n                      // boxShadow: '0 0 0 1px var(--card-shadow-outline-color)',\n                    }}\n                  >\n                    <Flex\n                      style={{...sizes[viewport]}}\n                      justify=\"center\"\n                      align=\"center\"\n                      direction=\"column\"\n                      gap={4}\n                    >\n                      <Spinner muted />\n                      <Text muted size={1}>\n                        {t('preview-frame.status', {context: 'loading'})}\n                      </Text>\n                    </Flex>\n                  </MotionFlex>\n                ) : somethingIsWrong && !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={errorVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      background: 'var(--card-bg-color)',\n                      inset: '0',\n                      position: 'absolute',\n                    }}\n                  >\n                    <ErrorCard\n                      flex={1}\n                      message={t('preview-frame.connection.error.text')}\n                      onRetry={handleRetry}\n                      onContinueAnyway={handleContinueAnyway}\n                    >\n                      {devMode && (\n                        <>\n                          {overlaysConnection !== 'connected' && (\n                            <Card padding={3} radius={2} tone=\"critical\">\n                              <Stack space={3}>\n                                <Label muted size={0}>\n                                  {t('preview-frame.overlay.connection-status.label')}\n                                </Label>\n                                <Code size={1}>\n                                  {t('channel.status', {context: overlaysConnection})}\n                                </Code>\n                              </Stack>\n                            </Card>\n                          )}\n\n                          {loadersConnection !== 'connected' && (\n                            <Card padding={3} radius={2} tone=\"critical\">\n                              <Stack space={3}>\n                                <Label muted size={0}>\n                                  {t('preview-frame.loader.connection-status.label')}\n                                </Label>\n                                <Code size={1}>\n                                  {t('channel.status', {context: loadersConnection})}\n                                </Code>\n                              </Stack>\n                            </Card>\n                          )}\n                        </>\n                      )}\n                    </ErrorCard>\n                  </MotionFlex>\n                ) : null}\n              </AnimatePresence>\n              <IFrame\n                animate={iframeAnimations}\n                initial={['background']}\n                onLoad={onIFrameLoad}\n                preventClick={preventIframeInteraction}\n                ref={ref}\n                src={initialUrl.toString()}\n                style={iframeStyle}\n                variants={iframeVariants}\n              />\n            </Flex>\n          </Card>\n        </TooltipDelayGroupProvider>\n      </MotionConfig>\n    )\n  }),\n)\nPreview.displayName = 'Memo(ForwardRef(Preview))'\n\nconst sizes = {\n  desktop: {\n    width: '100%',\n    height: '100%',\n  },\n  mobile: {\n    width: 375,\n    height: 650,\n  },\n}\n\nconst spinnerVariants = {\n  initial: {opacity: 1},\n  animate: {opacity: [0, 0, 1]},\n  exit: {opacity: [1, 0, 0]},\n}\n\nconst errorVariants = {\n  initial: {opacity: 1},\n  animate: {opacity: [0, 0, 1]},\n  exit: {opacity: [1, 0, 0]},\n}\n\nconst iframeVariants = {\n  desktop: {\n    ...sizes.desktop,\n    boxShadow: '0 0 0 0px var(--card-border-color)',\n  },\n  mobile: {\n    ...sizes.mobile,\n    boxShadow: '0 0 0 1px var(--card-border-color)',\n  },\n  background: {\n    opacity: 0,\n    scale: 1,\n  },\n  idle: {\n    scale: 1,\n  },\n  reloading: {\n    scale: [1, 1, 1, 0.98],\n  },\n  active: {\n    opacity: [0, 0, 1],\n    scale: 1,\n  },\n  timedOut: {\n    opacity: [0, 0, 1],\n  },\n}\n","import {useEffect, useRef} from 'react'\nimport {useEffectEvent} from 'use-effect-event'\n\n/**\n * Similar to `useEffect`, but only execute the callback on value change.\n * @param value - The value to watch for changes.\n * @param callback - The callback to execute when the value changes.\n * @param initialValue - An optional initial value to compare against.\n * @param comparator - An optional comparator function for determining changes, useful if the value is non-primitive. Should return true if the callback should be executed.\n * @internal\n */\nexport function useEffectOnChange<T>(\n  value: T,\n  _callback: (value: T, prevValue: T | undefined) => void | (() => void),\n  initialValue?: T,\n  comparator?: (a: T, b?: T) => boolean | undefined,\n): void {\n  const previousValueRef = useRef<T | undefined>(initialValue)\n  const callback = useEffectEvent(_callback)\n\n  useEffect(() => {\n    const prev = previousValueRef.current\n    previousValueRef.current = value\n    if (comparator ? comparator(value, prev) : value !== prev) {\n      return callback(value, prev)\n    }\n  }, [callback, comparator, value])\n}\n","import {type FunctionComponent} from 'react'\nimport {useEditState} from './internals'\nimport type {PresentationNavigate} from './types'\nimport {useEffectOnChange} from './util/useEffectOnChange'\n\ninterface RevisionSwitcherProps {\n  documentId: string\n  documentRevision: string | undefined\n  documentType: string\n  navigate: PresentationNavigate\n  perspective: 'previewDrafts' | 'published'\n}\n\n/**\n * Renderless component to handle displaying the correct revision when the\n * perspective is switched. When the perspective changes to 'published', the\n * `rev` parameter correpsonding to the published document is resolved from the\n * published edit state. When the perspective changes to 'previewDrafts', the\n * `rev` parameter is removed, as the latest draft should be displayed.\n * @internal\n */\nexport const RevisionSwitcher: FunctionComponent<RevisionSwitcherProps> = function (props) {\n  const {documentId, documentType, navigate, perspective, documentRevision} = props\n\n  const editState = useEditState(documentId, documentType)\n\n  useEffectOnChange(perspective, (value) => {\n    let rev: string | undefined = undefined\n    if (value === 'published' && editState.published) {\n      const {_updatedAt, _rev} = editState.published\n      rev = `${_updatedAt}/${_rev}`\n    }\n    if (documentRevision !== rev) {\n      navigate({}, {rev}, true)\n    }\n  })\n\n  return null\n}\n","/** @internal */\nexport function defineWarnOnce() {\n  let warned = false\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return (...args: any[]): void => {\n    if (!warned) {\n      // eslint-disable-next-line no-console\n      console.warn(...args)\n      warned = true\n    }\n  }\n}\n","import type {ClientPerspective} from '@sanity/client'\nimport isEqual from 'fast-deep-equal'\nimport {useCallback, useMemo, useRef, useState, type MutableRefObject} from 'react'\nimport type {FrameState, PresentationPerspective} from './types'\nimport {defineWarnOnce} from './util/warnOnce'\n\nexport type DocumentOnPage = {\n  _id: string\n  _type: string\n}\n\ntype DocumentCache = Record<string, DocumentOnPage>\ntype KeyedDocumentCache = Record<string, DocumentCache>\n\nconst warnOnceAboutCrossDatasetReference = defineWarnOnce()\n\nexport function useDocumentsOnPage(\n  perspective: PresentationPerspective,\n  frameStateRef: MutableRefObject<FrameState>,\n): [\n  DocumentOnPage[],\n  (key: string, perspective: PresentationPerspective, state: DocumentOnPage[]) => void,\n] {\n  if (perspective !== 'published' && perspective !== 'previewDrafts') {\n    throw new Error(`Invalid perspective: ${perspective}`)\n  }\n\n  const [published, setPublished] = useState<KeyedDocumentCache>({})\n  const [previewDrafts, setPreviewDrafts] = useState<KeyedDocumentCache>({})\n\n  // Used to compare the frame url with its value when the cache was last updated\n  // If the url has changed, the entire cache is replaced\n  const urlRef = useRef<string | undefined>('')\n\n  const setDocumentsOnPage = useCallback(\n    (key: string, perspective: ClientPerspective, sourceDocuments: DocumentOnPage[] = []) => {\n      const documents = sourceDocuments.filter((sourceDocument) => {\n        if ('_projectId' in sourceDocument && sourceDocument._projectId) {\n          // eslint-disable-next-line no-warning-comments\n          // @TODO Handle cross dataset references\n\n          warnOnceAboutCrossDatasetReference(\n            'Cross dataset references are not supported yet, ignoring source document',\n            sourceDocument,\n          )\n          return false\n        }\n        return sourceDocument\n      })\n\n      const setCache = perspective === 'published' ? setPublished : setPreviewDrafts\n\n      setCache((cache) => {\n        // Create the `next` documents, dedupe by `_id`\n        const next: Record<string, DocumentOnPage> = {}\n        for (const document of documents) {\n          next[document._id] = document\n        }\n\n        // If the frame url has changed, replace the entire cache with the next documents\n        if (urlRef.current !== frameStateRef.current.url) {\n          urlRef.current = frameStateRef.current.url\n          return {[key]: next}\n        }\n\n        // If the keyed cache has changed, return the entire cache and replace the keyed part\n        const prev = cache[key]\n        if (!isEqual(prev, next)) {\n          return {...cache, [key]: next}\n        }\n\n        // Otherwise return the entire cache as is\n        return cache\n      })\n    },\n    [frameStateRef],\n  )\n\n  const documentsOnPage = useMemo(() => {\n    const keyedCache = perspective === 'published' ? published : previewDrafts\n    const uniqueDocuments = Object.values(keyedCache).reduce((acc, cache) => {\n      Object.values(cache).forEach((doc) => {\n        acc[doc._id] = doc\n      })\n      return acc\n    }, {})\n\n    return Object.values(uniqueDocuments)\n  }, [perspective, previewDrafts, published])\n\n  return [documentsOnPage, setDocumentsOnPage]\n}\n","import type {ResponseQueryOptions} from '@sanity/client'\nimport {match, type Path} from 'path-to-regexp'\nimport {useEffect, useRef, useState} from 'react'\nimport {useClient} from 'sanity'\nimport {useRouter, type RouterState} from 'sanity/router'\nimport {useEffectEvent} from 'use-effect-event'\nimport {API_VERSION} from './constants'\nimport type {\n  DocumentResolver,\n  DocumentResolverContext,\n  MainDocument,\n  MainDocumentState,\n  PresentationNavigate,\n  PreviewUrlOption,\n} from './types'\n\n// Helper function to \"unwrap\" a result when it is either explicitly provided or\n// returned as the result of a passed function\nfunction fnOrObj<T, U>(arg: T | ((ctx: U) => T), context: U): T {\n  return arg instanceof Function ? arg(context) : arg\n}\n\nfunction getQueryFromResult(\n  resolver: DocumentResolver,\n  context: DocumentResolverContext,\n): string | undefined {\n  if (resolver.resolve) {\n    const filter = resolver.resolve(context)?.filter\n    return filter\n      ? `// groq\n*[${filter}][0]{_id, _type}`\n      : undefined\n  }\n\n  if ('type' in resolver) {\n    return `// groq\n*[_type == \"${resolver.type}\"][0]{_id, _type}`\n  }\n\n  return `// groq\n*[${fnOrObj(resolver.filter, context)}][0]{_id, _type}`\n}\n\nfunction getParamsFromResult(\n  resolver: DocumentResolver,\n  context: DocumentResolverContext,\n): Record<string, string> {\n  if (resolver.resolve) {\n    return resolver.resolve(context)?.params ?? context.params\n  }\n\n  if ('type' in resolver) {\n    return {}\n  }\n\n  return fnOrObj(resolver.params, context) ?? context.params\n}\n\nexport function getRouteContext(route: Path, url: URL): DocumentResolverContext | undefined {\n  const routes = Array.isArray(route) ? route : [route]\n\n  for (route of routes) {\n    let origin: DocumentResolverContext['origin'] = undefined\n    let path = route\n\n    // Handle absolute URLs\n    if (typeof route === 'string') {\n      try {\n        const absolute = new URL(route)\n        origin = absolute.origin\n        path = absolute.pathname\n      } catch {\n        // Ignore, as we assume a relative path\n      }\n    }\n\n    // If an origin has been explicitly provided, check that it matches\n    if (origin && url.origin !== origin) continue\n\n    try {\n      const matcher = match<Record<string, string>>(path, {decode: decodeURIComponent})\n      const result = matcher(url.pathname)\n      if (result) {\n        const {params, path} = result\n        return {origin, params, path}\n      }\n    } catch (e) {\n      throw new Error(`\"${route}\" is not a valid route pattern`)\n    }\n  }\n  return undefined\n}\n\nexport function useMainDocument(props: {\n  navigate?: PresentationNavigate\n  navigationHistory: RouterState[]\n  path?: string\n  previewUrl?: PreviewUrlOption\n  resolvers?: DocumentResolver[]\n}): MainDocumentState | undefined {\n  const {navigate, navigationHistory, path, previewUrl, resolvers = []} = props\n  const {state: routerState} = useRouter()\n  const client = useClient({apiVersion: API_VERSION})\n  const relativeUrl =\n    path || routerState._searchParams?.find(([key]) => key === 'preview')?.[1] || ''\n\n  const [mainDocumentState, setMainDocumentState] = useState<MainDocumentState | undefined>(\n    undefined,\n  )\n  const mainDocumentIdRef = useRef<string | undefined>(undefined)\n\n  const handleResponse = useEffectEvent((doc: MainDocument | undefined, url: URL) => {\n    if (!doc || mainDocumentIdRef.current !== doc._id) {\n      setMainDocumentState({\n        document: doc,\n        path: url.pathname,\n      })\n      mainDocumentIdRef.current = doc?._id\n\n      // We only want to force a navigation to the main document if\n      // the path changed but the document ID did not. An explicit\n      // document navigation should take precedence over displaying\n      // the main document. We determine if an explicit document\n      // navigation has occured by comparing the IDs of the last two\n      // resultant navigation states.\n      if (navigationHistory.at(-1)?.['id'] === navigationHistory.at(-2)?.['id']) {\n        navigate?.({\n          id: doc?._id,\n          type: doc?._type,\n        })\n      }\n    }\n  })\n\n  useEffect(() => {\n    const base =\n      typeof previewUrl === 'string'\n        ? previewUrl\n        : typeof previewUrl === 'object'\n          ? previewUrl?.origin || location.origin\n          : location.origin\n    const url = new URL(relativeUrl, base)\n\n    if (resolvers.length) {\n      let result:\n        | {\n            context: DocumentResolverContext\n            resolver: DocumentResolver\n          }\n        | undefined\n\n      for (const resolver of resolvers) {\n        const context = getRouteContext(resolver.route, url)\n        if (context) {\n          result = {context, resolver}\n          break\n        }\n      }\n\n      if (result) {\n        const query = getQueryFromResult(result.resolver, result.context)\n        const params = getParamsFromResult(result.resolver, result.context)\n\n        if (query) {\n          const controller = new AbortController()\n          const options: ResponseQueryOptions = {\n            perspective: 'previewDrafts',\n            signal: controller.signal,\n          }\n\n          client\n            .fetch<MainDocument | undefined>(query, params, options)\n            .then((doc) => handleResponse(doc, url))\n            .catch((e) => {\n              if (e instanceof Error && e.name === 'AbortError') return\n              setMainDocumentState({document: undefined, path: url.pathname})\n              mainDocumentIdRef.current = undefined\n            })\n          return () => {\n            controller.abort()\n          }\n        }\n      }\n    }\n    setMainDocumentState(undefined)\n    mainDocumentIdRef.current = undefined\n    return undefined\n  }, [client, handleResponse, previewUrl, relativeUrl, resolvers])\n\n  return mainDocumentState\n}\n","import {urlStringToPath} from '@repo/visual-editing-helpers'\nimport {studioPath} from '@sanity/client/csm'\nimport type {PresentationStateParams} from '../types'\n\nexport function parseId(rawId: string | undefined): string | undefined {\n  if (rawId === undefined) {\n    return undefined\n  }\n\n  const segments = decodeURIComponent(rawId)?.split('.')\n\n  if (segments[0] === 'drafts') {\n    segments.shift()\n  }\n\n  return segments.join('.')\n}\n\nexport function parsePath(rawPath: string | undefined): string | undefined {\n  if (rawPath === undefined) {\n    return undefined\n  }\n\n  return studioPath.toString(urlStringToPath(decodeURIComponent(rawPath)))\n}\n\nexport function parseRouterState(state: PresentationStateParams): PresentationStateParams {\n  return {\n    id: parseId(state.id),\n    path: parsePath(state.path),\n    type: state.type,\n  }\n}\n","import {useCallback, useEffect, useMemo, useRef, useState, type MutableRefObject} from 'react'\nimport type {RouterContextValue, RouterState, SearchParam} from 'sanity/router'\nimport {getPublishedId} from './internals'\nimport {parseRouterState} from './lib/parse'\nimport type {\n  CombinedSearchParams,\n  FrameState,\n  PresentationNavigate,\n  PresentationParams,\n  PresentationSearchParams,\n  PresentationStateParams,\n  StructureDocumentPaneParams,\n} from './types'\n\nfunction pruneObject<T extends RouterState | PresentationParams>(obj: T): T {\n  return Object.fromEntries(\n    Object.entries(obj).filter(\n      ([, value]) => value !== undefined && value !== '' && value !== null,\n    ),\n  ) as T\n}\n\nexport function useParams({\n  initialPreviewUrl,\n  routerNavigate,\n  routerState,\n  routerSearchParams,\n  frameStateRef,\n}: {\n  initialPreviewUrl: URL\n  routerNavigate: RouterContextValue['navigate']\n  routerState: RouterState & PresentationStateParams\n  routerSearchParams: {\n    [k: string]: string\n  }\n  frameStateRef: MutableRefObject<FrameState>\n}): {\n  navigate: PresentationNavigate\n  navigationHistory: RouterState[]\n  params: PresentationParams\n  searchParams: PresentationSearchParams\n  structureParams: StructureDocumentPaneParams\n} {\n  const params = useMemo<PresentationParams>(() => {\n    const {id, path, type} = parseRouterState(routerState)\n\n    return {\n      id,\n      type,\n      path,\n      preview:\n        routerSearchParams['preview'] || `${initialPreviewUrl.pathname}${initialPreviewUrl.search}`,\n      perspective: routerSearchParams['perspective'],\n      viewport: routerSearchParams['viewport'],\n      inspect: routerSearchParams['inspect'],\n      rev: routerSearchParams['rev'],\n      since: routerSearchParams['since'],\n      template: routerSearchParams['template'],\n      templateParams: routerSearchParams['templateParams'],\n      view: routerSearchParams['view'],\n      // assist\n      pathKey: routerSearchParams['pathKey'],\n      instruction: routerSearchParams['instruction'],\n      // comments\n      comment: routerSearchParams['comment'],\n      changesInspectorTab: routerSearchParams['changesInspectorTab'] as 'history' | 'review',\n    }\n  }, [routerState, routerSearchParams, initialPreviewUrl])\n\n  const structureParams = useMemo<StructureDocumentPaneParams>(() => {\n    const pruned = pruneObject({\n      inspect: params.inspect,\n      path: params.path,\n      rev: params.rev,\n      since: params.since,\n      template: params.template,\n      templateParams: params.templateParams,\n      view: params.view,\n      // assist\n      pathKey: params.pathKey,\n      instruction: params.instruction,\n      // comments\n      comment: params.comment,\n      changesInspectorTab: params.changesInspectorTab,\n    })\n    return pruned\n  }, [\n    params.changesInspectorTab,\n    params.comment,\n    params.inspect,\n    params.instruction,\n    params.path,\n    params.pathKey,\n    params.rev,\n    params.since,\n    params.template,\n    params.templateParams,\n    params.view,\n  ])\n\n  const searchParams = useMemo<PresentationSearchParams>(() => {\n    const pruned = pruneObject({\n      perspective: params.perspective,\n      preview: params.preview,\n      viewport: params.viewport,\n    })\n    return pruned\n  }, [params.perspective, params.preview, params.viewport])\n\n  const routerStateRef = useRef(routerState)\n\n  useEffect(() => {\n    routerStateRef.current = routerState\n  }, [routerState])\n\n  const [navigationHistory, setNavigationHistory] = useState<RouterState[]>([routerState])\n\n  const navigate = useCallback<PresentationNavigate>(\n    (nextState, nextSearchState = {}, forceReplace) => {\n      // Force navigation to use published IDs only\n      if (nextState.id) nextState.id = getPublishedId(nextState.id)\n\n      // Extract type, id and path as 'routerState'\n      const {_searchParams: routerSearchParams, ...routerState} = routerStateRef.current\n\n      // Convert array of search params to an object\n      const routerSearchState = (routerSearchParams || []).reduce((acc, [key, value]) => {\n        acc[key as keyof CombinedSearchParams] = value as undefined | 'history' | 'review'\n        return acc\n      }, {} as CombinedSearchParams)\n\n      // Merge routerState and incoming state\n      const state: RouterState = pruneObject({\n        ...routerState,\n        ...nextState,\n      })\n\n      // Merge routerSearchState and incoming searchState\n      const searchState = pruneObject({\n        ...routerSearchState,\n        ...nextSearchState,\n      })\n\n      // If the document has changed, clear the template and templateParams\n      if (routerState.id !== state['id']) {\n        delete searchState.template\n        delete searchState.templateParams\n      }\n\n      state._searchParams = Object.entries(searchState).reduce(\n        (acc, [key, value]) => [...acc, [key, value] as SearchParam],\n        [] as SearchParam[],\n      )\n\n      const replace = forceReplace ?? searchState.preview === frameStateRef.current.url\n\n      setNavigationHistory((prev) => [...prev, state])\n      routerNavigate(state, {replace})\n    },\n    [routerNavigate, frameStateRef],\n  )\n\n  return {\n    navigate,\n    navigationHistory,\n    params,\n    searchParams,\n    structureParams,\n  }\n}\n","import type {Controller} from '@sanity/comlink'\nimport {useCallback, useEffect, useState} from 'react'\nimport {POPUP_CHECK_INTERVAL} from './constants'\n\n/**\n * A hook for managing popup Window contexts\n *\n * This hook handles:\n * - Opening new popup Windows, and adding them as targets to the controller\n * - Tracking existing popup windows, and cleaning up closed popups\n *\n * @param controller - Comlink controller instance that manages communication\n * between Window contexts\n *\n * @returns An object containing:\n * - popups: A Set of currently open popup Window objects\n * - open: Function to open a new popup Window with the specified URL\n *\n */\nexport const usePopups = (\n  controller?: Controller,\n): {\n  popups: Set<Window>\n  open: (url: string) => void\n} => {\n  // State to keep track of open popup windows\n  const [popups, setPopups] = useState<Set<Window>>(() => new Set())\n\n  // Function to open a new popup window\n  const open = useCallback((url: string) => {\n    const source = window.open(url, '_blank')\n    if (source) {\n      setPopups((prev) => new Set(prev).add(source))\n    }\n  }, [])\n\n  // Handles syncing the existing popups with the controller\n  useEffect(() => {\n    const unsubs: Array<() => void> = []\n    if (popups.size && controller) {\n      // loop popups and add targets\n      for (const source of popups) {\n        if (source && 'closed' in source && !source.closed) {\n          unsubs.push(controller.addTarget(source))\n        }\n      }\n    }\n    return () => {\n      unsubs.forEach((unsub) => unsub())\n    }\n  }, [controller, popups])\n\n  // Checks for closed popups and removes them from the tracked Set\n  useEffect(() => {\n    if (popups.size) {\n      const interval = setInterval(() => {\n        const closed = new Set<Window>()\n        for (const source of popups) {\n          if (source && 'closed' in source && source.closed) {\n            closed.add(source)\n          }\n        }\n        if (closed.size) {\n          setPopups((prev) => {\n            const next = new Set(prev)\n            for (const source of closed) {\n              next.delete(source)\n            }\n            return next\n          })\n        }\n      }, POPUP_CHECK_INTERVAL)\n\n      return () => {\n        clearInterval(interval)\n      }\n    }\n\n    return\n  }, [popups])\n\n  return {popups, open}\n}\n","import {createPreviewSecret} from '@sanity/preview-url-secret/create-secret'\nimport {definePreviewUrl} from '@sanity/preview-url-secret/define-preview-url'\nimport {startTransition, useEffect, useMemo, useRef, useState} from 'react'\nimport {useClient, useCurrentUser, type SanityClient} from 'sanity'\nimport {suspend} from 'suspend-react'\nimport {API_VERSION} from './constants'\nimport {useActiveWorkspace} from './internals'\nimport type {PreviewUrlOption} from './types'\n\nexport function usePreviewUrl(\n  previewUrl: PreviewUrlOption,\n  toolName: string,\n  studioPreviewPerspective: 'published' | 'previewDrafts',\n  previewSearchParam: string | null,\n  canCreateUrlPreviewSecrets: boolean,\n): URL {\n  const client = useClient({apiVersion: API_VERSION})\n  const workspace = useActiveWorkspace()\n  const basePath = workspace?.activeWorkspace?.basePath || '/'\n  const workspaceName = workspace?.activeWorkspace?.name || 'default'\n  const deps = useSuspendCacheKeys(toolName, basePath, workspaceName, previewSearchParam)\n  const previewUrlSecret = usePreviewUrlSecret(\n    (canCreateUrlPreviewSecrets && typeof previewUrl === 'object') ||\n      typeof previewUrl === 'function',\n    deps,\n  )\n\n  return suspend(async () => {\n    if (typeof previewUrl === 'string') {\n      const resolvedUrl = new URL(previewUrl, location.origin)\n      let resultUrl = resolvedUrl\n      try {\n        if (previewSearchParam) {\n          const restoredUrl = new URL(previewSearchParam, resolvedUrl)\n          if (restoredUrl.origin === resolvedUrl.origin) {\n            resultUrl = restoredUrl\n          }\n        }\n      } catch {\n        // ignore\n      }\n      // Prevent infinite recursion\n      if (\n        location.origin === resultUrl.origin &&\n        (resultUrl.pathname.startsWith(`${basePath}/`) || resultUrl.pathname === basePath)\n      ) {\n        return resolvedUrl\n      }\n      return resultUrl\n    }\n    const resolvePreviewUrl =\n      typeof previewUrl === 'object' ? definePreviewUrl<SanityClient>(previewUrl) : previewUrl\n    const resolvedUrl = await resolvePreviewUrl({\n      client,\n      previewUrlSecret: previewUrlSecret!,\n      studioPreviewPerspective,\n      previewSearchParam,\n      studioBasePath: basePath,\n    })\n    return new URL(resolvedUrl, location.origin)\n  }, [...deps, previewUrlSecret]) satisfies URL\n}\n\n// https://github.com/pmndrs/suspend-react?tab=readme-ov-file#making-cache-keys-unique\nconst resolveUUID = Symbol()\n\nfunction useSuspendCacheKeys(\n  toolName: string,\n  basePath: string,\n  workspaceName: string,\n  previewSearchParam: string | null,\n) {\n  // Allow busting the cache when the Presentation Tool is reloaded, without causing it to suspend on every render that changes the `preview` parameter\n  const [cachedPreviewSearchParam, setCachedPreviewSearchParam] = useState(\n    () => previewSearchParam || '',\n  )\n  const timeoutRef = useRef(0)\n  useEffect(() => {\n    if (cachedPreviewSearchParam && previewSearchParam) {\n      // Handle resets, like when the Presentation Tool is clicked in the navbar\n      window.clearTimeout(timeoutRef.current)\n      return () => {\n        timeoutRef.current = window.setTimeout(() => {\n          setCachedPreviewSearchParam('')\n        }, 100)\n      }\n    }\n    return\n  }, [cachedPreviewSearchParam, previewSearchParam])\n\n  const currentUser = useCurrentUser()\n  return useMemo(\n    () => [\n      // Cache based on a few specific conditions\n      '@sanity/presentation',\n      basePath,\n      workspaceName,\n      toolName,\n      currentUser?.id,\n      resolveUUID,\n      cachedPreviewSearchParam,\n    ],\n    [basePath, currentUser?.id, toolName, workspaceName, cachedPreviewSearchParam],\n  )\n}\n\nfunction usePreviewUrlSecret(enabled: boolean, deps: (string | symbol | undefined)[]) {\n  const client = useClient({apiVersion: API_VERSION})\n  const currentUser = useCurrentUser()\n  const [secretLastExpiredAt, setSecretLastExpiredAt] = useState<string>('')\n\n  const previewUrlSecret = enabled\n    ? suspend(async () => {\n        return await createPreviewSecret(\n          client,\n          '@sanity/presentation',\n          typeof window === 'undefined' ? '' : location.href,\n          currentUser?.id,\n        )\n      }, [...deps, secretLastExpiredAt])\n    : null\n\n  useEffect(() => {\n    if (!previewUrlSecret) return\n    const timeout = setTimeout(() => {\n      startTransition(() => setSecretLastExpiredAt(previewUrlSecret.expiresAt.toString()))\n    }, previewUrlSecret.expiresAt.getTime() - Date.now())\n    return () => clearTimeout(timeout)\n  }, [previewUrlSecret])\n\n  return previewUrlSecret?.secret || null\n}\n","import type {StatusEvent} from '@sanity/comlink'\nimport {useCallback, useMemo, useState} from 'react'\nimport type {ConnectionStatus} from './types'\n\n/**\n * A hook that manages and returns the connection status of multiple channels\n *\n * @returns {[string, (event: StatusEvent) => void]} - An array containing the\n * current status and a function to update the status based on incoming events\n *\n * The status can be one of the following:\n * - 'connected': If any channel is connected\n * - 'connecting': If the first connection is being established\n * - 'reconnecting': If a reconnection is in progress\n * - 'idle': If no connections have been made yet\n *\n * The function to update the status takes a `StatusEvent` object which includes\n * the channel and the status\n */\nexport function useStatus(): [ConnectionStatus, (event: StatusEvent) => void] {\n  // State to keep track of the status of each channel\n  const [statusMap, setStatusMap] = useState(\n    new Map<string, {status: ConnectionStatus; hasConnected: boolean}>(),\n  )\n\n  // Memoized computation of the overall status based on the status of individual channels\n  const status = useMemo(() => {\n    const values = Array.from(statusMap.values())\n    // If any channel is connected, return the `connected` status\n    if (values.find(({status}) => status === 'connected')) {\n      return 'connected'\n    }\n    // If the initial connection is being established, return `connecting` status\n    const handshaking = values.filter(({status}) => status === 'connecting')\n    if (handshaking.length) {\n      return handshaking.some(({hasConnected}) => !hasConnected) ? 'connecting' : 'reconnecting'\n    }\n    // If nothing has happened yet, return `idle` status\n    return 'idle'\n  }, [statusMap])\n\n  // Callback to update the status map based on the received event\n  const setStatusFromEvent = useCallback((event: StatusEvent) => {\n    setStatusMap((prev) => {\n      const next = new Map(prev)\n      if (event.status === 'disconnected') {\n        // Remove the channel from the map if a disconnect event is received\n        next.delete(event.connection)\n      } else {\n        // Update the status and connection flag for the channel\n        const hasConnected =\n          next.get(event.connection)?.hasConnected || event.status === 'connected'\n        const status = event.status === 'handshaking' ? 'connecting' : event.status\n        next.set(event.connection, {status, hasConnected})\n      }\n      return next\n    })\n  }, [])\n\n  // Return the overall status and the function to update the status\n  return [status, setStatusFromEvent]\n}\n","import {\n  createCompatibilityActors,\n  isAltKey,\n  isHotkey,\n  type PreviewKitNodeMsg,\n  type VisualEditingControllerMsg,\n  type VisualEditingNodeMsg,\n} from '@repo/visual-editing-helpers'\nimport {studioPath} from '@sanity/client/csm'\nimport {\n  createConnectionMachine,\n  createController,\n  type Controller,\n  type Message,\n} from '@sanity/comlink'\nimport {BoundaryElementProvider, Flex} from '@sanity/ui'\nimport {\n  lazy,\n  Suspense,\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n  type ReactElement,\n} from 'react'\nimport {useDataset, useProjectId, type Path, type SanityDocument, type Tool} from 'sanity'\nimport {useRouter, type RouterContextValue} from 'sanity/router'\nimport {styled} from 'styled-components'\nimport {useEffectEvent} from 'use-effect-event'\nimport {\n  COMMENTS_INSPECTOR_NAME,\n  DEFAULT_TOOL_NAME,\n  EDIT_INTENT_MODE,\n  LIVE_DRAFT_EVENTS_ENABLED,\n} from './constants'\nimport {useUnique, useWorkspace, type CommentIntentGetter} from './internals'\nimport {debounce} from './lib/debounce'\nimport {SharedStateProvider} from './overlays/SharedStateProvider'\nimport {Panel} from './panels/Panel'\nimport {Panels} from './panels/Panels'\nimport {PresentationContent} from './PresentationContent'\nimport {PresentationNavigateProvider} from './PresentationNavigateProvider'\nimport {usePresentationNavigator} from './PresentationNavigator'\nimport {PresentationParamsProvider} from './PresentationParamsProvider'\nimport {PresentationProvider} from './PresentationProvider'\nimport {Preview} from './preview/Preview'\nimport {\n  ACTION_IFRAME_LOADED,\n  ACTION_IFRAME_REFRESH,\n  ACTION_VISUAL_EDITING_OVERLAYS_TOGGLE,\n  presentationReducer,\n  presentationReducerInit,\n} from './reducers/presentationReducer'\nimport {RevisionSwitcher} from './RevisionSwitcher'\nimport type {\n  FrameState,\n  PresentationNavigate,\n  PresentationPerspective,\n  PresentationPluginOptions,\n  PresentationStateParams,\n  PresentationViewport,\n  StructureDocumentPaneParams,\n  VisualEditingConnection,\n} from './types'\nimport {useDocumentsOnPage} from './useDocumentsOnPage'\nimport {useMainDocument} from './useMainDocument'\nimport {useParams} from './useParams'\nimport {usePopups} from './usePopups'\nimport {usePreviewUrl} from './usePreviewUrl'\nimport {useStatus} from './useStatus'\n\nconst LoaderQueries = lazy(() => import('./loader/LoaderQueries'))\nconst LiveQueries = lazy(() => import('./loader/LiveQueries'))\nconst PostMessageDocuments = lazy(() => import('./overlays/PostMessageDocuments'))\nconst PostMessageFeatures = lazy(() => import('./features/PostMessageFeatures'))\nconst PostMessageRefreshMutations = lazy(() => import('./editor/PostMessageRefreshMutations'))\nconst PostMessagePerspective = lazy(() => import('./PostMessagePerspective'))\nconst PostMessagePreviewSnapshots = lazy(() => import('./editor/PostMessagePreviewSnapshots'))\nconst PostMessageSchema = lazy(() => import('./overlays/schema/PostMessageSchema'))\nconst PostMessageTelemetry = lazy(() => import('./PostMessageTelemetry'))\n\nconst Container = styled(Flex)`\n  overflow-x: auto;\n`\n\nexport default function PresentationTool(props: {\n  tool: Tool<PresentationPluginOptions>\n  canCreateUrlPreviewSecrets: boolean\n  canToggleSharePreviewAccess: boolean\n  canUseSharedPreviewAccess: boolean\n}): ReactElement {\n  const {canCreateUrlPreviewSecrets, canToggleSharePreviewAccess, canUseSharedPreviewAccess, tool} =\n    props\n  const components = tool.options?.components\n  const _previewUrl = tool.options?.previewUrl\n  const name = tool.name || DEFAULT_TOOL_NAME\n  const {unstable_navigator, unstable_header} = components || {}\n\n  const {navigate: routerNavigate, state: routerState} = useRouter() as RouterContextValue & {\n    state: PresentationStateParams\n  }\n  const routerSearchParams = useUnique(Object.fromEntries(routerState._searchParams || []))\n\n  const initialPreviewUrl = usePreviewUrl(\n    _previewUrl || '/',\n    name,\n    routerSearchParams['perspective'] === 'published' ? 'published' : 'previewDrafts',\n    routerSearchParams['preview'] || null,\n    canCreateUrlPreviewSecrets,\n  )\n  const canSharePreviewAccess = useMemo<boolean>(() => {\n    if (\n      _previewUrl &&\n      typeof _previewUrl === 'object' &&\n      'draftMode' in _previewUrl &&\n      _previewUrl.draftMode\n    ) {\n      // eslint-disable-next-line no-console\n      console.warn('previewUrl.draftMode is deprecated, use previewUrl.previewMode instead')\n      return _previewUrl.draftMode.shareAccess !== false\n    }\n    if (\n      _previewUrl &&\n      typeof _previewUrl === 'object' &&\n      'previewMode' in _previewUrl &&\n      _previewUrl.previewMode\n    ) {\n      return _previewUrl.previewMode.shareAccess !== false\n    }\n    return false\n  }, [_previewUrl])\n\n  const [devMode] = useState(() => {\n    const option = tool.options?.devMode\n\n    if (typeof option === 'function') return option()\n    if (typeof option === 'boolean') return option\n\n    return typeof window !== 'undefined' && window.location.hostname === 'localhost'\n  })\n\n  const targetOrigin = useMemo(() => {\n    return initialPreviewUrl.origin\n  }, [initialPreviewUrl.origin])\n\n  const iframeRef = useRef<HTMLIFrameElement>(null)\n\n  const [controller, setController] = useState<Controller>()\n  const [visualEditingComlink, setVisualEditingComlink] = useState<VisualEditingConnection | null>(\n    null,\n  )\n\n  const frameStateRef = useRef<FrameState>({\n    title: undefined,\n    url: undefined,\n  })\n\n  const {\n    navigate: _navigate,\n    navigationHistory,\n    params,\n    searchParams,\n    structureParams,\n  } = useParams({\n    initialPreviewUrl,\n    routerNavigate,\n    routerState,\n    routerSearchParams,\n    frameStateRef,\n  })\n\n  // Most navigation events should be debounced, so use this unless explicitly needed\n  const navigate = useMemo(() => debounce<PresentationNavigate>(_navigate, 50), [_navigate])\n\n  const [state, dispatch] = useReducer(presentationReducer, {}, presentationReducerInit)\n\n  const perspective = useMemo(\n    () => (params.perspective ? 'published' : 'previewDrafts'),\n    [params.perspective],\n  )\n\n  const viewport = useMemo(() => (params.viewport ? 'mobile' : 'desktop'), [params.viewport])\n\n  const [documentsOnPage, setDocumentsOnPage] = useDocumentsOnPage(perspective, frameStateRef)\n\n  const projectId = useProjectId()\n  const dataset = useDataset()\n\n  const mainDocumentState = useMainDocument({\n    // Prevent flash of content by using immediate navigation\n    navigate: _navigate,\n    navigationHistory,\n    path: params.preview,\n    previewUrl: tool.options?.previewUrl,\n    resolvers: tool.options?.resolve?.mainDocuments,\n  })\n\n  const [overlaysConnection, setOverlaysConnection] = useStatus()\n  const [loadersConnection, setLoadersConnection] = useStatus()\n  const [previewKitConnection, setPreviewKitConnection] = useStatus()\n\n  const {open: handleOpenPopup} = usePopups(controller)\n\n  const isLoading = state.iframe.status === 'loading'\n\n  useEffect(() => {\n    const target = iframeRef.current?.contentWindow\n\n    if (!target || isLoading) return\n\n    const controller = createController({targetOrigin})\n    controller.addTarget(target)\n    setController(controller)\n\n    return () => {\n      controller.destroy()\n      setController(undefined)\n    }\n  }, [targetOrigin, isLoading])\n\n  const handleNavigate = useEffectEvent<typeof navigate>(\n    (nextState, nextSearchState, forceReplace) =>\n      navigate(nextState, nextSearchState, forceReplace),\n  )\n  useEffect(() => {\n    if (!controller) return\n\n    const comlink = controller.createChannel<VisualEditingControllerMsg, VisualEditingNodeMsg>(\n      {\n        name: 'presentation',\n        heartbeat: true,\n        connectTo: 'visual-editing',\n      },\n      createConnectionMachine<VisualEditingControllerMsg, VisualEditingNodeMsg>().provide({\n        actors: createCompatibilityActors<VisualEditingControllerMsg>(),\n      }),\n    )\n\n    comlink.on('visual-editing/focus', (data) => {\n      if (!('id' in data)) return\n      handleNavigate({\n        type: data.type,\n        id: data.id,\n        path: data.path,\n      })\n    })\n\n    comlink.on('visual-editing/navigate', (data) => {\n      const {title, url} = data\n      if (frameStateRef.current.url !== url) {\n        handleNavigate({}, {preview: url})\n      }\n      frameStateRef.current = {title, url}\n    })\n\n    comlink.on('visual-editing/meta', (data) => {\n      frameStateRef.current.title = data.title\n    })\n\n    comlink.on('visual-editing/toggle', (data) => {\n      dispatch({\n        type: ACTION_VISUAL_EDITING_OVERLAYS_TOGGLE,\n        enabled: data.enabled,\n      })\n    })\n\n    comlink.on('visual-editing/documents', (data) => {\n      setDocumentsOnPage(\n        'visual-editing',\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        data.perspective as unknown as any,\n        data.documents,\n      )\n    })\n\n    // @todo This won't work for multiple window contexts?\n    comlink.on('visual-editing/refreshing', (data) => {\n      if (data.source === 'manual') {\n        clearTimeout(refreshRef.current)\n      } else if (data.source === 'mutation') {\n        dispatch({type: ACTION_IFRAME_REFRESH})\n      }\n    })\n\n    comlink.on('visual-editing/refreshed', () => {\n      dispatch({type: ACTION_IFRAME_LOADED})\n    })\n\n    comlink.onStatus(setOverlaysConnection)\n\n    const stop = comlink.start()\n    setVisualEditingComlink(comlink)\n\n    return () => {\n      stop()\n      setVisualEditingComlink(null)\n    }\n  }, [controller, handleNavigate, setDocumentsOnPage, setOverlaysConnection, targetOrigin])\n\n  useEffect(() => {\n    if (!controller) return\n    const comlink = controller.createChannel<Message, PreviewKitNodeMsg>(\n      {\n        name: 'presentation',\n        connectTo: 'preview-kit',\n        heartbeat: true,\n      },\n      createConnectionMachine<Message, PreviewKitNodeMsg>().provide({\n        actors: createCompatibilityActors(),\n      }),\n    )\n\n    comlink.onStatus(setPreviewKitConnection)\n\n    comlink.on('preview-kit/documents', (data) => {\n      if (data.projectId === projectId && data.dataset === dataset) {\n        setDocumentsOnPage(\n          'preview-kit',\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          data.perspective as unknown as any,\n          data.documents,\n        )\n      }\n    })\n\n    return comlink.start()\n  }, [controller, dataset, projectId, setDocumentsOnPage, setPreviewKitConnection, targetOrigin])\n\n  const handleFocusPath = useCallback(\n    (nextPath: Path) => {\n      // Don’t need to explicitly set the id here because it was either already set via postMessage or is the same if navigating in the document pane\n      navigate({path: studioPath.toString(nextPath)}, {}, true)\n    },\n    [navigate],\n  )\n\n  const handlePreviewPath = useCallback(\n    (nextPath: string) => {\n      const url = new URL(nextPath, initialPreviewUrl.origin)\n      const preview = url.pathname + url.search\n      if (url.origin === initialPreviewUrl.origin && preview !== params.preview) {\n        navigate({}, {preview})\n      }\n    },\n    [initialPreviewUrl, params, navigate],\n  )\n\n  const handleStructureParams = useCallback(\n    (structureParams: StructureDocumentPaneParams) => {\n      navigate({}, structureParams)\n    },\n    [navigate],\n  )\n\n  // Dispatch a focus or blur message when the id or path change\n  useEffect(() => {\n    if (params.id && params.path) {\n      visualEditingComlink?.post('presentation/focus', {id: params.id, path: params.path})\n    } else {\n      visualEditingComlink?.post('presentation/blur')\n    }\n  }, [params.id, params.path, visualEditingComlink])\n\n  // Dispatch a navigation message when the preview param changes\n  useEffect(() => {\n    if (\n      frameStateRef.current.url &&\n      params.preview &&\n      frameStateRef.current.url !== params.preview\n    ) {\n      frameStateRef.current.url = params.preview\n      if (overlaysConnection !== 'connected' && iframeRef.current) {\n        iframeRef.current.src = `${targetOrigin}${params.preview}`\n      } else {\n        visualEditingComlink?.post('presentation/navigate', {\n          url: params.preview,\n          type: 'replace',\n        })\n      }\n    }\n  }, [overlaysConnection, targetOrigin, params.preview, visualEditingComlink])\n\n  const toggleOverlay = useCallback(\n    () => visualEditingComlink?.post('presentation/toggle-overlay'),\n    [visualEditingComlink],\n  )\n\n  const [displayedDocument, setDisplayedDocument] = useState<\n    Partial<SanityDocument> | null | undefined\n  >(null)\n\n  useEffect(() => {\n    const handleKeyUp = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        toggleOverlay()\n      }\n    }\n    const handleKeydown = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        toggleOverlay()\n      }\n\n      if (isHotkey(['mod', '\\\\'], e)) {\n        toggleOverlay()\n      }\n    }\n    window.addEventListener('keydown', handleKeydown)\n    window.addEventListener('keyup', handleKeyUp)\n    return () => {\n      window.removeEventListener('keydown', handleKeydown)\n      window.removeEventListener('keyup', handleKeyUp)\n    }\n  }, [toggleOverlay])\n\n  const [boundaryElement, setBoundaryElement] = useState<HTMLDivElement | null>(null)\n\n  const [{navigatorEnabled, toggleNavigator}, PresentationNavigator] = usePresentationNavigator({\n    unstable_navigator,\n  })\n\n  // Handle edge case where the `&rev=` parameter gets \"stuck\"\n  const idRef = useRef<string | undefined>(params.id)\n  useEffect(() => {\n    if (params.rev && idRef.current && params.id !== idRef.current) {\n      navigate({}, {rev: undefined})\n    }\n    idRef.current = params.id\n  })\n\n  const refreshRef = useRef<number>()\n  const handleRefresh = useCallback(\n    (fallback: () => void) => {\n      dispatch({type: ACTION_IFRAME_REFRESH})\n      if (visualEditingComlink) {\n        // We only wait 300ms for the iframe to ack the refresh request before running the fallback logic\n        refreshRef.current = window.setTimeout(fallback, 300)\n        visualEditingComlink.post('presentation/refresh', {\n          source: 'manual',\n          livePreviewEnabled:\n            previewKitConnection === 'connected' || loadersConnection === 'connected',\n        })\n        return\n      }\n      fallback()\n    },\n    [loadersConnection, previewKitConnection, visualEditingComlink],\n  )\n\n  const workspace = useWorkspace()\n\n  const getCommentIntent = useCallback<CommentIntentGetter>(\n    ({id, type, path}) => {\n      if (frameStateRef.current.url) {\n        return {\n          title: frameStateRef.current.title || frameStateRef.current.url,\n          name: 'edit',\n          params: {\n            id,\n            path,\n            type,\n            inspect: COMMENTS_INSPECTOR_NAME,\n            workspace: workspace.name,\n            mode: EDIT_INTENT_MODE,\n            preview: params.preview,\n          },\n        }\n      }\n      return undefined\n    },\n    [params.preview, workspace.name],\n  )\n\n  const setViewport = useCallback(\n    (next: PresentationViewport) => {\n      // Omit the viewport URL search param if the next viewport state is the\n      // default: 'desktop'\n      const viewport = next === 'desktop' ? undefined : 'mobile'\n      navigate({}, {viewport}, true)\n    },\n    [navigate],\n  )\n\n  const setPerspective = useCallback(\n    (next: PresentationPerspective) => {\n      // Omit the perspective URL search param if the next perspective state is\n      // the default: 'previewDrafts'\n      const perspective = next === 'previewDrafts' ? undefined : next\n      navigate({}, {perspective})\n    },\n    [navigate],\n  )\n\n  return (\n    <>\n      <PresentationProvider\n        devMode={devMode}\n        name={name}\n        navigate={navigate}\n        params={params}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      >\n        <PresentationNavigateProvider navigate={navigate}>\n          <PresentationParamsProvider params={params}>\n            <SharedStateProvider comlink={visualEditingComlink}>\n              <Container height=\"fill\">\n                <Panels>\n                  <PresentationNavigator />\n                  <Panel\n                    id=\"preview\"\n                    minWidth={325}\n                    defaultSize={navigatorEnabled ? 50 : 75}\n                    order={3}\n                  >\n                    <Flex direction=\"column\" flex={1} height=\"fill\" ref={setBoundaryElement}>\n                      <BoundaryElementProvider element={boundaryElement}>\n                        <Preview\n                          canSharePreviewAccess={canSharePreviewAccess}\n                          canToggleSharePreviewAccess={canToggleSharePreviewAccess}\n                          canUseSharedPreviewAccess={canUseSharedPreviewAccess}\n                          dispatch={dispatch}\n                          header={unstable_header}\n                          iframe={state.iframe}\n                          initialUrl={initialPreviewUrl}\n                          loadersConnection={loadersConnection}\n                          navigatorEnabled={navigatorEnabled}\n                          onPathChange={handlePreviewPath}\n                          onRefresh={handleRefresh}\n                          openPopup={handleOpenPopup}\n                          overlaysConnection={overlaysConnection}\n                          previewUrl={params.preview}\n                          perspective={perspective}\n                          ref={iframeRef}\n                          setPerspective={setPerspective}\n                          setViewport={setViewport}\n                          targetOrigin={targetOrigin}\n                          toggleNavigator={toggleNavigator}\n                          toggleOverlay={toggleOverlay}\n                          viewport={viewport}\n                          visualEditing={state.visualEditing}\n                        />\n                      </BoundaryElementProvider>\n                    </Flex>\n                  </Panel>\n                  <PresentationContent\n                    documentId={params.id}\n                    documentsOnPage={documentsOnPage}\n                    documentType={params.type}\n                    getCommentIntent={getCommentIntent}\n                    mainDocumentState={mainDocumentState}\n                    onFocusPath={handleFocusPath}\n                    onStructureParams={handleStructureParams}\n                    searchParams={searchParams}\n                    setDisplayedDocument={setDisplayedDocument}\n                    structureParams={structureParams}\n                  />\n                </Panels>\n              </Container>\n            </SharedStateProvider>\n          </PresentationParamsProvider>\n        </PresentationNavigateProvider>\n      </PresentationProvider>\n      <Suspense>\n        {controller &&\n          (LIVE_DRAFT_EVENTS_ENABLED ? (\n            <LiveQueries\n              controller={controller}\n              perspective={perspective}\n              liveDocument={displayedDocument}\n              onDocumentsOnPage={setDocumentsOnPage}\n              onLoadersConnection={setLoadersConnection}\n            />\n          ) : (\n            <LoaderQueries\n              controller={controller}\n              perspective={perspective}\n              liveDocument={displayedDocument}\n              onDocumentsOnPage={setDocumentsOnPage}\n              onLoadersConnection={setLoadersConnection}\n              documentsOnPage={documentsOnPage}\n            />\n          ))}\n        {visualEditingComlink && params.id && params.type && (\n          <PostMessageRefreshMutations\n            comlink={visualEditingComlink}\n            id={params.id}\n            type={params.type}\n            loadersConnection={loadersConnection}\n            previewKitConnection={previewKitConnection}\n          />\n        )}\n        {visualEditingComlink && (\n          <PostMessageSchema comlink={visualEditingComlink} perspective={perspective} />\n        )}\n        {visualEditingComlink && documentsOnPage.length > 0 && (\n          <PostMessagePreviewSnapshots\n            comlink={visualEditingComlink}\n            perspective={perspective}\n            refs={documentsOnPage}\n          />\n        )}\n        {visualEditingComlink && <PostMessageDocuments comlink={visualEditingComlink} />}\n        {visualEditingComlink && <PostMessageFeatures comlink={visualEditingComlink} />}\n        {visualEditingComlink && (\n          <PostMessagePerspective comlink={visualEditingComlink} perspective={perspective} />\n        )}\n        {visualEditingComlink && <PostMessageTelemetry comlink={visualEditingComlink} />}\n        {params.id && params.type && (\n          <RevisionSwitcher\n            documentId={params.id}\n            documentRevision={params.rev}\n            documentType={params.type}\n            navigate={navigate}\n            perspective={perspective}\n          />\n        )}\n      </Suspense>\n    </>\n  )\n}\n","import {\n  schemaIdSingleton,\n  schemaType,\n  schemaTypeSingleton,\n} from '@sanity/preview-url-secret/constants'\nimport {useToast} from '@sanity/ui'\nimport {uuid} from '@sanity/uuid'\nimport {useEffect, useState, type ReactElement} from 'react'\nimport {useGrantsStore, useTranslation, type PermissionCheckResult, type Tool} from 'sanity'\nimport {presentationLocaleNamespace} from './i18n'\nimport {PresentationSpinner} from './PresentationSpinner'\nimport PresentationTool from './PresentationTool'\nimport type {PresentationPluginOptions} from './types'\n\nexport default function PresentationToolGrantsCheck(props: {\n  tool: Tool<PresentationPluginOptions>\n}): ReactElement {\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {previewUrl} = props.tool.options ?? {}\n  const {push: pushToast} = useToast()\n  const willGeneratePreviewUrlSecret =\n    typeof previewUrl === 'object' || typeof previewUrl === 'function'\n  const grantsStore = useGrantsStore()\n  const [previewAccessSharingCreatePermission, setCreateAccessSharingPermission] =\n    useState<PermissionCheckResult | null>(null)\n  const [previewAccessSharingUpdatePermission, setUpdateAccessSharingPermission] =\n    useState<PermissionCheckResult | null>(null)\n  const [previewAccessSharingReadPermission, setReadAccessSharingPermission] =\n    useState<PermissionCheckResult | null>(null)\n  const [previewUrlSecretPermission, setPreviewUrlSecretPermission] =\n    useState<PermissionCheckResult | null>(null)\n\n  useEffect(() => {\n    if (!willGeneratePreviewUrlSecret) return undefined\n\n    const previewCreateAccessSharingPermissionSubscription = grantsStore\n      .checkDocumentPermission('create', {_id: schemaIdSingleton, _type: schemaTypeSingleton})\n      .subscribe(setCreateAccessSharingPermission)\n    const previewUpdateAccessSharingPermissionSubscription = grantsStore\n      .checkDocumentPermission('update', {_id: schemaIdSingleton, _type: schemaTypeSingleton})\n      .subscribe(setUpdateAccessSharingPermission)\n    const previewReadAccessSharingPermissionSubscription = grantsStore\n      .checkDocumentPermission('read', {_id: schemaIdSingleton, _type: schemaTypeSingleton})\n      .subscribe(setReadAccessSharingPermission)\n    const previewUrlSecretPermissionSubscription = grantsStore\n      .checkDocumentPermission('create', {_id: `drafts.${uuid()}`, _type: schemaType})\n      .subscribe(setPreviewUrlSecretPermission)\n\n    return () => {\n      previewCreateAccessSharingPermissionSubscription.unsubscribe()\n      previewUpdateAccessSharingPermissionSubscription.unsubscribe()\n      previewReadAccessSharingPermissionSubscription.unsubscribe()\n      previewUrlSecretPermissionSubscription.unsubscribe()\n    }\n  }, [grantsStore, willGeneratePreviewUrlSecret])\n\n  const canCreateUrlPreviewSecrets = previewUrlSecretPermission?.granted\n\n  useEffect(() => {\n    if (!willGeneratePreviewUrlSecret || canCreateUrlPreviewSecrets !== false) return undefined\n    const raf = requestAnimationFrame(() =>\n      pushToast({\n        closable: true,\n        status: 'error',\n        duration: 30_000,\n        title: t('preview-url-secret.missing-grants'),\n      }),\n    )\n    return () => cancelAnimationFrame(raf)\n  }, [canCreateUrlPreviewSecrets, pushToast, t, willGeneratePreviewUrlSecret])\n\n  if (\n    willGeneratePreviewUrlSecret &&\n    (!previewAccessSharingCreatePermission ||\n      typeof previewAccessSharingCreatePermission.granted === 'undefined' ||\n      !previewAccessSharingUpdatePermission ||\n      typeof previewAccessSharingUpdatePermission.granted === 'undefined' ||\n      !previewUrlSecretPermission ||\n      !previewAccessSharingReadPermission ||\n      typeof previewAccessSharingReadPermission.granted === 'undefined' ||\n      typeof previewUrlSecretPermission.granted === 'undefined')\n  ) {\n    return <PresentationSpinner />\n  }\n\n  return (\n    <PresentationTool\n      {...props}\n      canCreateUrlPreviewSecrets={canCreateUrlPreviewSecrets === true}\n      canToggleSharePreviewAccess={\n        previewAccessSharingCreatePermission?.granted === true &&\n        previewAccessSharingUpdatePermission?.granted === true\n      }\n      canUseSharedPreviewAccess={previewAccessSharingReadPermission?.granted === true}\n    />\n  )\n}\n"],"names":["channelsToComlinkMap","MSG_HANDSHAKE_SYN","MSG_HANDSHAKE_SYN_ACK","MSG_HANDSHAKE_ACK","MSG_RESPONSE","MSG_HEARTBEAT","MSG_DISCONNECT","comlinkToChannelsMap","convertToComlinkEvent","event","_a","data","domain","DOMAIN","to","from","channelId","connectionId","type","convertToChannelsMessage","comlinkMessage","_b","rest","__objRest","message","__spreadProps$1","__spreadValues$1","responseTo","id","sendAsChannelsMessage","context","params","sources","targetOrigin","forEach","source","postMessage","createCompatibilityActors","listen","createListenLogic","requestMachine","createRequestMachine","provide","actions","debounce","fn","timeout","timer","args","clearTimeout","setTimeout","apply","SharedStateProvider","props","$","_c","comlink","children","t0","Symbol","for","sharedState","useRef","t1","t2","on","state","current","useEffect","t3","key","value","post","setValue","t4","key_0","removeValue","t5","t6","t7","jsx","SharedStateContext","PanelsContext","createContext","displayName","Root","styled","div","Panel","defaultSize","minWidth","maxWidth","order","undefined","useContext","Error","getPanelStyle","registerElement","unregisterElement","style","useLayoutEffect","itemKey","getStoredItem","JSON","parse","localStorage","getItem","setStoredItem","setItem","stringify","getKeyForPanels","panels","map","panel","join","usePanelsStorage","get","_temp2","set","_temp3","setDebounced","panels_0","widths","stored_0","__spreadProps","__spreadValues","stored","Array","isArray","some","_temp","val","getNextWidth","nextWidth","containerWidth","maxWidthPx","minWidthPx","Math","min","max","getNextWidths","delta","panelBefore","panelAfter","panelsState","initialDragState","prevWidths","initialWidths","nextWidths","pivotPanel","index","findIndex","width","abs","deltaApplied","deltaRemaining","toPrecision","localeCompare","numeric","length","getPanelWidth","getOffset","handleElement","initialOffset","initialHandleElementRect","pointerOffset","clientX","elementOffset","getBoundingClientRect","left","isPanel","element","isResizer","getSortedElements","elements","values","sort","a","b","validateWidths","widthsToValidate","total","reduce","remainingWidth","toFixed","getDefaultWidths","panelsWithoutWidth","remainingWidthTotal","widthsWithNulls","defaultWidth","PanelsWrapper","Panels","panelsEl","Map","setElements","useState","filter","setWidths","activeResizer","setActiveResizer","panelsRef","flexGrow","pointerEvents","id_0","prev","has","next","t8","id_1","prev_0","next_0","delete","t9","window","innerWidth","dragOffset","resizerIndex","resizerRect","startX","dragRef","t10","id_2","elementsArr","el","resizer","resizeElement","acc","el_0","i","acc_0","el_1","i_0","pageX","startDragging","t11","stopDragging","t12","id_3","event_0","preventDefault","stopPropagation","resizer_0","resizeElement_0","offset","rect","prevWidth","i_1","drag","t13","t14","storage","t15","t16","widths_0","storedWidths","validatedStoredWidths","defaultWidths","t17","t18","t19","t20","resizeObserver","ResizeObserver","prevWidths_0","nextWidths_0","prevWidth_0","i_2","observe","disconnect","t21","t22","t23","t24","ErrorCard","onContinueAnyway","onRetry","restProps","t","useTranslation","presentationLocaleNamespace","Button","retryButton","continueAnywayButton","Text","jsxs","Stack","Inline","Box","Flex","Container","Card","encodeQueryString","parts","Object","entries","resolveQueryStringFromParams","nextParams","allowed","safeNextParams","includes","obj","BackLink","forwardRef","ref","searchParams","_searchParams","StateLink","ReferenceChildLink","documentId","documentType","parentRefPath","template","PresentationPaneRouterProvider","onStructureParams","structureParams","refs","routerState","resolvePathFromState","useRouter","fromEntries","routerSearchParams","useUnique","path","qs","createPathWithParams","childLinkProps","childId","find","r","_id","getPublishedId","_type","backLinkProps","childLinkProps_0","nextParams_0","inspect","groupIndex","siblingIndex","payload","hasGroupSiblings","groupLength","routerPanesState","ChildLink","ParameterizedLink","closeCurrentAndAfter","handleEditReference","replaceCurrent","_temp4","closeCurrent","_temp5","duplicateCurrent","_temp6","setView","_temp7","setParams","setPayload","_temp8","navigateIntent","_temp9","PaneRouterContext","intentName","intentParams","options_0","console","warn","options","viewId","pane_0","pane","RootLayout","PaneLayout","WrappedCode","Code","DocumentListPane","mainDocumentState","devMode","usePresentationTool","document","ids","schemaTypeName","title","errorParams","setErrorParams","handleRetry","Label","error","StructureDocumentListPane","ErrorBoundary","StructureToolProvider","r_0","DocumentPane","onFocusPath","templateParams","decodeJsonParams","templateParameters","paneDocumentNode","height","PresentationSpinner","Suspense","StructureDocumentPane","DocumentPanel","usePreviewState","schemaType","documentPreviewStore","useDocumentPreviewStore","preview","setPreview","subscription","getPreviewStateObservable","subscribe","unsubscribe","ContentEditor","schema","useSchema","props_0","MainDocumentLink","previewState","bb0","draft","published","getPreviewValueWithFallback","SanityDefaultPreview","PreviewCard","WarningOutlineIcon","Translate","byteToHex","push","toString","slice","unsafeStringify","arr","toLowerCase","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","randomUUID","v4","buf","native","rnds","random","usePanelId","uuid","panelId","Resizer","ResizerInner","$disabled","PanelResizer","propId","disabled","isDragging","nativeEvent","onMouseDown","e","onDrag","blur","onDragStop","resetDocumentStyles","bodyStyle","body","documentStyle","documentElement","cursor","userSelect","removeProperty","addEventListener","removeEventListener","PresentationContentWrapper","setDisplayedDocument","getCommentIntent","CommentsIntentProvider","DisplayedDocumentBroadcasterProvider","PresentationContent","documentsOnPage","PresentationNavigateProvider","navigate","_navigate","PresentationNavigateContext","useLocalState","defaultValue","usePresentationNavigator","unstable_navigator","navigatorProvided","component","_navigatorEnabled","setNavigatorEnabled","navigatorEnabled","toggleNavigator","Component","enabled","NavigatorComponent","navigatorDisabled","Navigator","memo","PresentationParamsProvider","PresentationParamsContext","PresentationProvider","name","PresentationContext","IFrameElement","motion","create","iframe","IFrameOverlay","IFrame","animate","initial","onLoad","preventClick","src","variants","useId","replace","viewTransitionName","OpenPreviewButton","openPopup","previewLocationOrigin","previewLocationRoute","currentTarget","href","handleOpenPopup","LaunchIcon","Tooltip","PreviewLocationInput","fontSize","onChange","origin","padding","prefix","suffix","basePath","useActiveWorkspace","activeWorkspace","inputRef","sessionValue","setSessionValue","customValidity","setCustomValidity","handleChange","absoluteValue","startsWith","nextValue","handleKeyDown","handleBlur","icon","ResetIcon","zIndex","TextInput","QRCodeSVG","lazy","QrCodeLogoSize","QrCodeLogoPadding","QrSize","StyledSanityMonogram","SanityMonogram","MotionSpinner","Spinner","MotionText","MotionMonogram","SharePreviewMenu","canToggleSharePreviewAccess","canUseSharedPreviewAccess","initialUrl","perspective","pushToast","useToast","client","useClient","apiVersion","API_VERSION","currentUser","useCurrentUser","loading","setLoading","enabling","setEnabling","disabling","setDisabling","secret","setSecret","busy","url","useMemo","setSecretSearchParams","setError","handleUnableToToggle","useCallback","closable","status","handleDisableSharing","disablePreviewAccessSharing","location","handleEnableSharing","previewUrlSecret","enablePreviewAccessSharing","handleCopyUrl","navigator","clipboard","writeText","controller","AbortController","usedTags","fetchShareSecret","lastLiveEventId","signal","result","syncTags","fetch","fetchSharedAccessQuery","filterResponse","tag","aborted","live","events","abort","tags","finally","MenuButton","ShareIcon","Menu","Fragment","Grid","justifyContent","alignItems","gridTemplateColumns","gridTemplateRows","Switch","position","aspectRatio","display","AnimatePresence","opacity","textWrap","textAlign","MenuDivider","MenuItem","CopyIcon","constrainSize","placement","portal","PERSPECTIVE_TITLE_KEY","previewDrafts","PERSPECTIVE_TONES","PERSPECTIVE_ICONS","EditIcon","PublishIcon","PreviewHeaderDefault","canSharePreviewAccess","dispatch","iframeRef","loadersConnection","onPathChange","onRefresh","overlaysConnection","previewUrl","setPerspective","setViewport","toggleOverlay","viewport","visualEditing","overlaysEnabled","toggleViewportSize","ACTION_IFRAME_RELOAD","assign","handleRefresh","previewURL","URL","pathname","search","withoutSecretSearchParams","PanelLeftIcon","whiteSpace","Hotkeys","marginTop","marginBottom","lineHeight","borderRadius","margin","t25","t26","t27","t28","t29","RefreshIcon","t30","t31","t32","t33","t34","t35","t36","t37","ChevronDownIcon","t38","t39","t40","t41","createElement","t42","t43","t44","t45","t46","t47","t48","t49","CheckmarkIcon","t50","t51","t52","t53","t54","t55","t56","t57","t58","t59","t60","t61","t62","t63","t64","t65","t66","t67","t68","t69","t70","t71","t72","t73","t74","t75","MobileDeviceIcon","DesktopIcon","t76","t77","t78","t79","PreviewHeader","renderDefault","header","minHeight","usePresentationPreviewHeader","MotionFlex","Preview","forwardedRef","prefersReducedMotion","usePrefersReducedMotion","timedOut","setTimedOut","refreshing","somethingIsWrong","setSomethingIsWrong","iframeIsBusy","handleContinueAnyway","setContinueAnyway","continueAnyway","showOverlaysConnectionStatus","setShowOverlaysConnectionState","MAX_TIME_TO_OVERLAYS_CONNECTION","onIFrameLoad","ACTION_IFRAME_LOADED","instance","activeElement","dispatchEvent","MouseEvent","bubbles","cancelable","preventIframeInteraction","canUseViewTransition","useSyncExternalStore","CSS","supports","iframeAnimations","currentViewport","setCurrentViewport","iframeStyle","setIframeStyle","iframeVariants","update","startViewTransition","flushSync","MotionConfig","duration","TooltipDelayGroupProvider","spinnerVariants","inset","backdropFilter","WebkitBackdropFilter","WebkitTransition","sizes","errorVariants","background","desktop","mobile","exit","boxShadow","scale","idle","reloading","active","useEffectOnChange","_callback","initialValue","comparator","previousValueRef","callback","useEffectEvent","RevisionSwitcher","documentRevision","editState","useEditState","rev","_updatedAt","_rev","defineWarnOnce","warned","warnOnceAboutCrossDatasetReference","useDocumentsOnPage","frameStateRef","setPublished","setPreviewDrafts","urlRef","setDocumentsOnPage","sourceDocuments","documents","sourceDocument","_projectId","setCache","cache","isEqual","uniqueDocuments","doc","fnOrObj","arg","Function","getQueryFromResult","resolver","resolve","getParamsFromResult","getRouteContext","route","routes","absolute","match","decode","decodeURIComponent","useMainDocument","navigationHistory","resolvers","relativeUrl","setMainDocumentState","mainDocumentIdRef","at","handleResponse","base","url_0","query","then","doc_0","catch","parseId","rawId","segments","split","shift","parsePath","rawPath","studioPath","urlStringToPath","parseRouterState","pruneObject","useParams","initialPreviewUrl","routerNavigate","since","view","pathKey","instruction","comment","changesInspectorTab","routerStateRef","setNavigationHistory","nextState","nextSearchState","forceReplace","routerSearchState","searchState","usePopups","popups","setPopups","open","Set","add","unsubs","size","source_0","closed","addTarget","interval","setInterval","source_1","source_2","POPUP_CHECK_INTERVAL","clearInterval","unsub","usePreviewUrl","toolName","studioPreviewPerspective","previewSearchParam","canCreateUrlPreviewSecrets","workspace","workspaceName","deps","useSuspendCacheKeys","usePreviewUrlSecret","suspend","resolvedUrl","resultUrl","restoredUrl","definePreviewUrl","studioBasePath","resolveUUID","cachedPreviewSearchParam","setCachedPreviewSearchParam","timeoutRef","secretLastExpiredAt","setSecretLastExpiredAt","createPreviewSecret","startTransition","expiresAt","getTime","Date","now","useStatus","statusMap","setStatusMap","handshaking","status_1","connection","hasConnected_0","hasConnected","status_2","setStatusFromEvent","status_0","LoaderQueries","PostMessageDocuments","PostMessageFeatures","PostMessageRefreshMutations","PostMessagePerspective","PostMessagePreviewSnapshots","PostMessageSchema","PostMessageTelemetry","PresentationTool","tool","components","_previewUrl","DEFAULT_TOOL_NAME","unstable_header","draftMode","shareAccess","previewMode","option","hostname","setController","visualEditingComlink","setVisualEditingComlink","useReducer","presentationReducer","presentationReducerInit","projectId","useProjectId","dataset","useDataset","mainDocuments","setOverlaysConnection","setLoadersConnection","previewKitConnection","setPreviewKitConnection","isLoading","target","contentWindow","createController","destroy","handleNavigate","createChannel","heartbeat","connectTo","createConnectionMachine","actors","ACTION_VISUAL_EDITING_OVERLAYS_TOGGLE","refreshRef","ACTION_IFRAME_REFRESH","onStatus","stop","start","handleFocusPath","nextPath","handlePreviewPath","handleStructureParams","displayedDocument","handleKeyUp","isAltKey","handleKeydown","isHotkey","boundaryElement","setBoundaryElement","PresentationNavigator","idRef","fallback","livePreviewEnabled","useWorkspace","COMMENTS_INSPECTOR_NAME","mode","EDIT_INTENT_MODE","BoundaryElementProvider","LIVE_DRAFT_EVENTS_ENABLED","PresentationToolGrantsCheck","willGeneratePreviewUrlSecret","grantsStore","useGrantsStore","previewAccessSharingCreatePermission","setCreateAccessSharingPermission","previewAccessSharingUpdatePermission","setUpdateAccessSharingPermission","previewAccessSharingReadPermission","setReadAccessSharingPermission","previewUrlSecretPermission","setPreviewUrlSecretPermission","previewCreateAccessSharingPermissionSubscription","checkDocumentPermission","schemaIdSingleton","schemaTypeSingleton","previewUpdateAccessSharingPermissionSubscription","previewReadAccessSharingPermissionSubscription","previewUrlSecretPermissionSubscription","granted","raf","requestAnimationFrame","cancelAnimationFrame"],"mappings":"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","x_google_ignoreList":[15,16,17,18]}