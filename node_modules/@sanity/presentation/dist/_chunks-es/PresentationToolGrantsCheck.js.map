{"version":3,"file":"PresentationToolGrantsCheck.js","sources":["../../../visual-editing-helpers/dist/index.js","../../src/lib/debounce.ts","../../src/overlays/SharedStateProvider.tsx","../../src/panels/PanelsContext.tsx","../../src/panels/Panel.tsx","../../src/panels/usePanelsStorage.ts","../../src/panels/util.ts","../../src/panels/Panels.tsx","../../src/components/ErrorCard.tsx","../../src/editor/PresentationPaneRouterProvider.tsx","../../src/editor/DocumentListPane.tsx","../../src/editor/DocumentPane.tsx","../../src/editor/DocumentPanel.tsx","../../src/editor/usePreviewState.ts","../../src/editor/ContentEditor.tsx","../../../../node_modules/.pnpm/uuid@10.0.0/node_modules/uuid/dist/esm-browser/stringify.js","../../../../node_modules/.pnpm/uuid@10.0.0/node_modules/uuid/dist/esm-browser/rng.js","../../../../node_modules/.pnpm/uuid@10.0.0/node_modules/uuid/dist/esm-browser/native.js","../../../../node_modules/.pnpm/uuid@10.0.0/node_modules/uuid/dist/esm-browser/v4.js","../../src/panels/usePanelId.ts","../../src/panels/PanelResizer.tsx","../../src/PresentationContent.tsx","../../src/PresentationNavigateProvider.tsx","../../src/useLocalState.ts","../../src/PresentationNavigator.tsx","../../src/PresentationParamsProvider.tsx","../../src/PresentationProvider.tsx","../../src/preview/IFrame.tsx","../../src/preview/OpenPreviewButton.tsx","../../src/preview/PreviewLocationInput.tsx","../../src/preview/SharePreviewMenu.tsx","../../src/preview/PreviewHeader.tsx","../../src/preview/Preview.tsx","../../src/util/useEffectOnChange.ts","../../src/RevisionSwitcher.tsx","../../src/util/warnOnce.ts","../../src/useDocumentsOnPage.ts","../../src/useMainDocument.ts","../../src/lib/parse.ts","../../src/useParams.ts","../../src/usePopups.ts","../../src/usePreviewUrl.ts","../../src/useStatus.ts","../../src/PresentationTool.tsx","../../src/PresentationToolGrantsCheck.tsx"],"sourcesContent":["import { createListenLogic, createRequestMachine, DOMAIN, MSG_HANDSHAKE_SYN, MSG_HANDSHAKE_SYN_ACK, MSG_HANDSHAKE_ACK, MSG_RESPONSE, MSG_HEARTBEAT, MSG_DISCONNECT } from \"@sanity/comlink\";\nimport { MSG_RESPONSE as MSG_RESPONSE2 } from \"@sanity/comlink\";\nimport { studioPath } from \"@sanity/client/csm\";\nimport { encodeSanityNodeData } from \"./_chunks-es/transformSanityNodeData.js\";\nimport { pathToUrlString, urlStringToPath } from \"./_chunks-es/transformSanityNodeData.js\";\nvar __defProp$1 = Object.defineProperty, __defProps$1 = Object.defineProperties, __getOwnPropDescs$1 = Object.getOwnPropertyDescriptors, __getOwnPropSymbols$1 = Object.getOwnPropertySymbols, __hasOwnProp$1 = Object.prototype.hasOwnProperty, __propIsEnum$1 = Object.prototype.propertyIsEnumerable, __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __spreadValues$1 = (a, b) => {\n  for (var prop in b || (b = {}))\n    __hasOwnProp$1.call(b, prop) && __defNormalProp$1(a, prop, b[prop]);\n  if (__getOwnPropSymbols$1)\n    for (var prop of __getOwnPropSymbols$1(b))\n      __propIsEnum$1.call(b, prop) && __defNormalProp$1(a, prop, b[prop]);\n  return a;\n}, __spreadProps$1 = (a, b) => __defProps$1(a, __getOwnPropDescs$1(b)), __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    __hasOwnProp$1.call(source, prop) && exclude.indexOf(prop) < 0 && (target[prop] = source[prop]);\n  if (source != null && __getOwnPropSymbols$1)\n    for (var prop of __getOwnPropSymbols$1(source))\n      exclude.indexOf(prop) < 0 && __propIsEnum$1.call(source, prop) && (target[prop] = source[prop]);\n  return target;\n};\nconst channelsToComlinkMap = {\n  \"handshake/syn\": MSG_HANDSHAKE_SYN,\n  \"handshake/syn-ack\": MSG_HANDSHAKE_SYN_ACK,\n  \"handshake/ack\": MSG_HANDSHAKE_ACK,\n  \"channel/response\": MSG_RESPONSE,\n  \"channel/heartbeat\": MSG_HEARTBEAT,\n  \"channel/disconnect\": MSG_DISCONNECT,\n  \"overlay/focus\": \"visual-editing/focus\",\n  \"overlay/navigate\": \"visual-editing/navigate\",\n  \"overlay/toggle\": \"visual-editing/toggle\",\n  \"presentation/toggleOverlay\": \"presentation/toggle-overlay\"\n}, comlinkToChannelsMap = {\n  [MSG_HANDSHAKE_SYN]: \"handshake/syn\",\n  [MSG_HANDSHAKE_SYN_ACK]: \"handshake/syn-ack\",\n  [MSG_HANDSHAKE_ACK]: \"handshake/ack\",\n  [MSG_RESPONSE]: \"channel/response\",\n  [MSG_HEARTBEAT]: \"channel/heartbeat\",\n  [MSG_DISCONNECT]: \"channel/disconnect\",\n  \"visual-editing/focus\": \"overlay/focus\",\n  \"visual-editing/navigate\": \"overlay/navigate\",\n  \"visual-editing/toggle\": \"overlay/toggle\",\n  \"presentation/toggle-overlay\": \"presentation/toggleOverlay\"\n}, convertToComlinkEvent = (event) => {\n  var _a;\n  const { data } = event;\n  return data && typeof data == \"object\" && \"domain\" in data && \"type\" in data && \"from\" in data && \"to\" in data && (data.domain === \"sanity/channels\" && (data.domain = DOMAIN), data.to === \"overlays\" && (data.to = \"visual-editing\"), data.from === \"overlays\" && (data.from = \"visual-editing\"), data.channelId = data.connectionId, delete data.connectionId, data.type = (_a = channelsToComlinkMap[data.type]) != null ? _a : data.type), event;\n}, convertToChannelsMessage = (comlinkMessage) => {\n  var _b;\n  const _a = comlinkMessage, { channelId } = _a, rest = __objRest(_a, [\"channelId\"]), message = __spreadProps$1(__spreadValues$1({}, rest), { connectionId: channelId });\n  return message.domain === DOMAIN && (message.domain = \"sanity/channels\"), message.to === \"visual-editing\" && (message.to = \"overlays\"), message.from === \"visual-editing\" && (message.from = \"overlays\"), message.type = (_b = comlinkToChannelsMap[message.type]) != null ? _b : message.type, message.type === \"channel/response\" && message.responseTo && !message.data && (message.data = { responseTo: message.responseTo }), (message.type === \"handshake/syn\" || message.type === \"handshake/syn-ack\" || message.type === \"handshake/ack\") && (message.data = { id: message.connectionId }), message;\n}, sendAsChannelsMessage = ({ context }, params) => {\n  const { sources, targetOrigin } = context, message = convertToChannelsMessage(params.message);\n  sources.forEach((source) => {\n    source.postMessage(message, { targetOrigin });\n  });\n}, createCompatibilityActors = () => ({\n  listen: createListenLogic(convertToComlinkEvent),\n  requestMachine: createRequestMachine().provide({\n    actions: {\n      \"send message\": sendAsChannelsMessage\n    }\n  })\n});\nvar __defProp = Object.defineProperty, __defProps = Object.defineProperties, __getOwnPropDescs = Object.getOwnPropertyDescriptors, __getOwnPropSymbols = Object.getOwnPropertySymbols, __hasOwnProp = Object.prototype.hasOwnProperty, __propIsEnum = Object.prototype.propertyIsEnumerable, __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    __hasOwnProp.call(b, prop) && __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b))\n      __propIsEnum.call(b, prop) && __defNormalProp(a, prop, b[prop]);\n  return a;\n}, __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nfunction createDataAttribute(props) {\n  function normalizePath(path) {\n    return path ? typeof path == \"string\" ? studioPath.fromString(path) : path : [];\n  }\n  function toString(props2) {\n    if (!props2.id) throw new Error(\"`id` is required to create a data attribute\");\n    if (!props2.type) throw new Error(\"`type` is required to create a data attribute\");\n    if (!props2.path || !props2.path.length)\n      throw new Error(\"`path` is required to create a data attribute\");\n    const attrs = {\n      baseUrl: props2.baseUrl || \"/\",\n      workspace: props2.workspace,\n      tool: props2.tool,\n      type: props2.type,\n      id: props2.id,\n      path: typeof props2.path == \"string\" ? props2.path : studioPath.toString(props2.path)\n    };\n    return encodeSanityNodeData(attrs);\n  }\n  const DataAttribute = (path) => toString(__spreadProps(__spreadValues({}, props), {\n    path: [...normalizePath(props.path), ...normalizePath(path)]\n  }));\n  return DataAttribute.toString = function() {\n    return toString(props);\n  }, DataAttribute.combine = function(attrs) {\n    return createDataAttribute(__spreadValues(__spreadValues({}, props), attrs));\n  }, DataAttribute.scope = function(path) {\n    return createDataAttribute(__spreadProps(__spreadValues({}, props), {\n      path: [...normalizePath(props.path), ...normalizePath(path)]\n    }));\n  }, DataAttribute;\n}\nfunction getQueryCacheKey(query, params) {\n  return `${query}-${typeof params == \"string\" ? params : JSON.stringify(params)}`;\n}\nconst IS_MAC = typeof window < \"u\" && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform), MODIFIERS = {\n  alt: \"altKey\",\n  ctrl: \"ctrlKey\",\n  mod: IS_MAC ? \"metaKey\" : \"ctrlKey\",\n  shift: \"shiftKey\"\n};\nfunction isHotkey(keys, event) {\n  return keys.every((key) => MODIFIERS[key] ? event[MODIFIERS[key]] : event.key === key.toUpperCase());\n}\nfunction isModKey(event) {\n  return event.key === (IS_MAC ? \"Meta\" : \"Ctrl\");\n}\nfunction isAltKey(event) {\n  return event.key === \"Alt\";\n}\nexport {\n  MSG_RESPONSE2 as MSG_RESPONSE,\n  createCompatibilityActors,\n  createDataAttribute,\n  getQueryCacheKey,\n  isAltKey,\n  isHotkey,\n  isModKey,\n  pathToUrlString,\n  urlStringToPath\n};\n//# sourceMappingURL=index.js.map\n","export function debounce<F extends (...args: Parameters<F>) => ReturnType<F>>(\n  fn: F,\n  timeout: number,\n): F {\n  let timer: ReturnType<typeof setTimeout>\n  return ((...args: Parameters<F>) => {\n    clearTimeout(timer)\n    timer = setTimeout(() => {\n      fn.apply(fn, args)\n    }, timeout)\n  }) as F\n}\n","import type {Serializable, SerializableObject} from '@repo/visual-editing-helpers'\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  type FunctionComponent,\n  type PropsWithChildren,\n} from 'react'\nimport type {VisualEditingConnection} from '../types'\nimport {SharedStateContext, type SharedStateContextValue} from './SharedStateContext'\n\nexport const SharedStateProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink: VisualEditingConnection | null\n  }>\n> = function (props) {\n  const {comlink, children} = props\n\n  const sharedState = useRef<SerializableObject>({})\n\n  useEffect(() => {\n    return comlink?.on('visual-editing/shared-state', () => {\n      return {state: sharedState.current}\n    })\n  }, [comlink])\n\n  const setValue = useCallback(\n    (key: string, value: Serializable) => {\n      sharedState.current[key] = value\n      comlink?.post('presentation/shared-state', {key, value})\n    },\n    [comlink],\n  )\n\n  const removeValue = useCallback(\n    (key: string) => {\n      comlink?.post('presentation/shared-state', {key})\n      delete sharedState.current[key]\n    },\n    [comlink],\n  )\n\n  const context = useMemo<SharedStateContextValue>(\n    () => ({removeValue, setValue}),\n    [removeValue, setValue],\n  )\n\n  return <SharedStateContext.Provider value={context}>{children}</SharedStateContext.Provider>\n}\n","import {createContext, type CSSProperties} from 'react'\nimport type {PanelElement, ResizerElement} from './types'\n\nexport const PanelsContext = createContext<{\n  activeResizer: string | null\n  drag: (id: string, event: MouseEvent) => void\n  getPanelStyle: (id: string) => CSSProperties\n  registerElement: (id: string, panel: PanelElement | ResizerElement) => void\n  startDragging: (id: string, event: MouseEvent) => void\n  stopDragging: () => void\n  unregisterElement: (id: string) => void\n} | null>(null)\n\nPanelsContext.displayName = 'PanelsContext'\n","import {useContext, useLayoutEffect, type FunctionComponent, type PropsWithChildren} from 'react'\nimport {styled} from 'styled-components'\nimport {PanelsContext} from './PanelsContext'\n\ninterface PanelProps extends PropsWithChildren {\n  defaultSize?: number | null\n  id: string\n  minWidth?: number\n  maxWidth?: number\n  order?: number\n}\n\nconst Root = styled.div`\n  overflow: hidden;\n  flex-basis: 0;\n  flex-shrink: 1;\n`\n\nexport const Panel: FunctionComponent<PanelProps> = function ({\n  children,\n  defaultSize = null,\n  id,\n  minWidth,\n  maxWidth,\n  order = 0,\n}) {\n  const context = useContext(PanelsContext)\n\n  if (context === null) {\n    throw Error(`Panel components must be rendered within a PanelGroup container`)\n  }\n\n  const {getPanelStyle, registerElement, unregisterElement} = context\n\n  const style = getPanelStyle(id)\n\n  useLayoutEffect(() => {\n    registerElement(id, {\n      id,\n      type: 'panel',\n      defaultSize,\n      maxWidth: maxWidth ?? null,\n      minWidth: minWidth ?? 0,\n      order,\n    })\n\n    return () => {\n      unregisterElement(id)\n    }\n  }, [id, defaultSize, order, maxWidth, minWidth, registerElement, unregisterElement])\n\n  return <Root style={style}>{children}</Root>\n}\n","import {useMemo} from 'react'\nimport {debounce} from '../lib/debounce'\nimport type {PanelElement} from './types'\n\nconst itemKey = 'presentation/panels'\n\ntype StoredPanelsState = Record<string, number[]>\n\nconst getStoredItem = () => {\n  // @todo Validate\n  return JSON.parse(localStorage.getItem(itemKey) || '{}') as StoredPanelsState\n}\nconst setStoredItem = (data: StoredPanelsState) => {\n  localStorage.setItem(itemKey, JSON.stringify(data))\n}\n\nconst getKeyForPanels = (panels: PanelElement[]) => {\n  return panels.map((panel) => [panel.id, panel.order].join(':')).join(',')\n}\n\nexport function usePanelsStorage(): {\n  get: (panels: PanelElement[]) => number[] | undefined\n  set: (panels: PanelElement[], widths: number[]) => void\n  setDebounced: (panels: PanelElement[], widths: number[]) => void\n} {\n  return useMemo(() => {\n    const get = (panels: PanelElement[]) => {\n      const stored = getStoredItem()\n      const key = getKeyForPanels(panels)\n      return Array.isArray(stored[key]) && stored[key].some((val) => val === null)\n        ? undefined\n        : stored[key]\n    }\n\n    const set = (panels: PanelElement[], widths: number[]) => {\n      const stored = getStoredItem()\n      const key = getKeyForPanels(panels)\n      const data = {\n        ...stored,\n        [key]: widths,\n      }\n      setStoredItem(data)\n    }\n\n    const setDebounced = debounce(set, 100)\n    return {\n      get,\n      set,\n      setDebounced,\n    }\n  }, [])\n}\n","import type {ElementMap, InitialDragState, PanelElement, PanelsState, ResizerElement} from './types'\n\nfunction getNextWidth(panel: PanelElement, nextWidth: number, containerWidth: number) {\n  const {maxWidth: maxWidthPx, minWidth: minWidthPx} = panel\n  const maxWidth = maxWidthPx == null ? 100 : (maxWidthPx / containerWidth) * 100\n  const minWidth = (minWidthPx / containerWidth) * 100\n  return Math.min(maxWidth, Math.max(minWidth, nextWidth))\n}\n\nexport function getNextWidths(\n  delta: number,\n  containerWidth: number,\n  panelBefore: PanelElement,\n  panelAfter: PanelElement,\n  panelsState: PanelsState,\n  initialDragState: InitialDragState,\n): number[] {\n  const {panels, widths: prevWidths} = panelsState\n  const {widths: initialWidths} = initialDragState\n\n  const widths = initialWidths || prevWidths\n  const nextWidths = [...widths]\n\n  {\n    const pivotPanel = delta < 0 ? panelAfter : panelBefore\n    const index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n    const width = widths[index]\n    const nextWidth = getNextWidth(pivotPanel, width + Math.abs(delta), containerWidth)\n    if (width === nextWidth) {\n      return widths\n    } else {\n      delta = delta < 0 ? width - nextWidth : nextWidth - width\n    }\n  }\n\n  let deltaApplied = 0\n  let pivotPanel = delta < 0 ? panelBefore : panelAfter\n  let index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const panel = panels[index]\n    const width = widths[index]\n\n    const deltaRemaining = Math.abs(delta) - Math.abs(deltaApplied)\n\n    const nextWidth = getNextWidth(panel, width - deltaRemaining, containerWidth)\n\n    if (width !== nextWidth) {\n      deltaApplied += width - nextWidth\n      nextWidths[index] = nextWidth\n\n      if (\n        deltaApplied.toPrecision(10).localeCompare(Math.abs(delta).toPrecision(10), undefined, {\n          numeric: true,\n        }) >= 0\n      ) {\n        break\n      }\n    }\n\n    if (delta < 0) {\n      if (--index < 0) {\n        break\n      }\n    } else {\n      if (++index >= panels.length) {\n        break\n      }\n    }\n  }\n\n  if (deltaApplied === 0) {\n    return widths\n  }\n\n  pivotPanel = delta < 0 ? panelAfter : panelBefore\n  index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n  nextWidths[index] = widths[index] + deltaApplied\n\n  return nextWidths\n}\n\nexport function getPanelWidth(panels: PanelElement[], id: string, widths: number[]): string {\n  if (panels.length === 1) return '100'\n\n  const index = panels.findIndex((panel) => panel.id === id)\n  const width = widths[index]\n\n  if (width == null) return '0'\n\n  return width.toPrecision(10)\n}\n\nexport function getOffset(\n  event: MouseEvent,\n  handleElement: HTMLDivElement,\n  initialOffset: number = 0,\n  initialHandleElementRect: DOMRect | null = null,\n): number {\n  const pointerOffset = event.clientX\n\n  const rect = initialHandleElementRect || handleElement.getBoundingClientRect()\n  const elementOffset = rect.left\n\n  return pointerOffset - elementOffset - initialOffset\n}\n\nexport function isPanel(element: PanelElement | ResizerElement): element is PanelElement {\n  return element.type === 'panel'\n}\n\nexport function isResizer(element: PanelElement | ResizerElement): element is ResizerElement {\n  return element.type === 'resizer'\n}\n\nexport function getSortedElements(elements: ElementMap): Array<PanelElement | ResizerElement> {\n  return Array.from(elements.values()).sort(({order: a}, {order: b}) => {\n    if (a == null && b == null) return 0\n    if (a == null) return -1\n    if (b == null) return 1\n    return a - b\n  })\n}\n\nexport function validateWidths(\n  panels: PanelElement[],\n  widthsToValidate: number[],\n  containerWidth: number,\n): number[] {\n  // Clamp widths proportionally to total 100\n  const total = widthsToValidate.reduce((total, width) => total + width, 0)\n  const widths = [...widthsToValidate].map((width) => (width / total) * 100)\n\n  let remainingWidth = 0\n\n  for (let index = 0; index < panels.length; index++) {\n    const panel = panels[index]\n    const width = widths[index]\n    const nextWidth = getNextWidth(panel, width, containerWidth)\n    if (width != nextWidth) {\n      remainingWidth += width - nextWidth\n      widths[index] = nextWidth\n    }\n  }\n\n  if (remainingWidth.toFixed(3) !== '0.000') {\n    for (let index = 0; index < panels.length; index++) {\n      const panel = panels[index]\n\n      let {maxWidth, minWidth} = panel\n\n      minWidth = (minWidth / containerWidth) * 100\n      if (maxWidth != null) {\n        maxWidth = (maxWidth / containerWidth) * 100\n      }\n\n      const width = Math.min(\n        maxWidth != null ? maxWidth : 100,\n        Math.max(minWidth, widths[index] + remainingWidth),\n      )\n\n      if (width !== widths[index]) {\n        remainingWidth -= width - widths[index]\n        widths[index] = width\n\n        if (Math.abs(remainingWidth).toFixed(3) === '0.000') {\n          break\n        }\n      }\n    }\n  }\n\n  return widths\n}\n\nexport function getDefaultWidths(panels: PanelElement[]): number[] {\n  let panelsWithoutWidth = panels.length\n  let remainingWidthTotal = 100\n\n  const widthsWithNulls = panels.map((panel) => {\n    if (panel.defaultSize) {\n      remainingWidthTotal = remainingWidthTotal - panel.defaultSize\n      panelsWithoutWidth = panelsWithoutWidth - 1\n      return panel.defaultSize\n    }\n    return null\n  })\n\n  const defaultWidth = remainingWidthTotal / panelsWithoutWidth\n  const widths = widthsWithNulls.map((width) => {\n    if (width === null) return defaultWidth\n    return width\n  })\n\n  return widths\n}\n","// Slightly modified version of react-resizable-panels\n// https://github.com/bvaughn/react-resizable-panels/tree/main/packages/react-resizable-panels\n\nimport {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n  type CSSProperties,\n  type FunctionComponent,\n  type PropsWithChildren,\n} from 'react'\nimport {styled} from 'styled-components'\nimport {PanelsContext} from './PanelsContext'\nimport type {ElementMap, InitialDragState, PanelElement, PanelsState, ResizerElement} from './types'\nimport {usePanelsStorage} from './usePanelsStorage'\nimport {\n  getDefaultWidths,\n  getNextWidths,\n  getOffset,\n  getPanelWidth,\n  getSortedElements,\n  isPanel,\n  isResizer,\n  validateWidths,\n} from './util'\n\nconst PanelsWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  overflow: hidden;\n  width: 100%;\n`\n\nexport const Panels: FunctionComponent<PropsWithChildren> = function ({children}) {\n  const panelsEl = useRef<HTMLDivElement | null>(null)\n\n  const [elements, setElements] = useState<ElementMap>(new Map())\n\n  const panels = useMemo(() => getSortedElements(elements).filter(isPanel), [elements])\n\n  const [widths, setWidths] = useState<number[]>([])\n  const [activeResizer, setActiveResizer] = useState<string | null>(null)\n\n  const panelsRef = useRef<PanelsState>({\n    elements,\n    panels,\n    widths,\n  })\n\n  const getPanelStyle = useCallback(\n    (id: string): CSSProperties => {\n      return {\n        flexGrow: getPanelWidth(panels, id, widths),\n        pointerEvents: activeResizer === null ? undefined : 'none',\n      }\n    },\n    [activeResizer, panels, widths],\n  )\n\n  const registerElement = useCallback((id: string, data: PanelElement | ResizerElement) => {\n    setElements((prev) => {\n      if (prev.has(id)) return prev\n      const next = new Map(prev)\n      next.set(id, data)\n      return next\n    })\n  }, [])\n  const unregisterElement = useCallback((id: string) => {\n    setElements((prev) => {\n      if (!prev.has(id)) return prev\n      const next = new Map(prev)\n      next.delete(id)\n      return next\n    })\n  }, [])\n\n  const dragRef = useRef<InitialDragState>({\n    containerWidth: window.innerWidth,\n    dragOffset: 0,\n    panelAfter: null,\n    panelBefore: null,\n    resizerIndex: -1,\n    resizerRect: null,\n    startX: 0,\n    widths: [],\n  })\n\n  const startDragging = useCallback(\n    (id: string, event: MouseEvent) => {\n      const elementsArr = getSortedElements(elements)\n      const index = elementsArr.findIndex((el) => el.id === id)\n\n      const resizer = elements.get(id)\n      if (!resizer || !isResizer(resizer)) return\n      const resizeElement = resizer.el.current\n      if (!resizeElement) return\n\n      dragRef.current = {\n        resizerIndex: index,\n        panelBefore: elementsArr.reduce(\n          (acc, el, i) => (isPanel(el) && i < index ? el : acc),\n          null as PanelElement | null,\n        ),\n        panelAfter: elementsArr.reduce(\n          (acc, el, i) => (acc === null && isPanel(el) && i > index ? el : acc),\n          null as PanelElement | null,\n        ),\n        containerWidth: window.innerWidth,\n        startX: event.pageX,\n        dragOffset: getOffset(event, resizeElement),\n        resizerRect: resizeElement.getBoundingClientRect(),\n        widths: panelsRef.current.widths,\n      }\n\n      setActiveResizer(id)\n    },\n    [elements],\n  )\n\n  const stopDragging = useCallback(() => {\n    setActiveResizer(null)\n  }, [])\n\n  const drag = useCallback(\n    (id: string, event: MouseEvent) => {\n      event.preventDefault()\n      event.stopPropagation()\n\n      const {containerWidth, dragOffset, panelBefore, panelAfter, resizerRect} = dragRef.current\n\n      if (panelBefore == null || panelAfter == null) {\n        return\n      }\n\n      const resizer = elements.get(id)\n      if (!resizer || !isResizer(resizer)) return\n      const resizeElement = resizer.el.current\n      if (!resizeElement) return\n\n      const offset = getOffset(event, resizeElement, dragOffset, resizerRect)\n\n      if (offset === 0) {\n        return\n      }\n\n      const {widths: prevWidths} = panelsRef.current\n      const rect = panelsEl.current!.getBoundingClientRect()\n      const delta = (offset / rect.width) * 100\n\n      const nextWidths = getNextWidths(\n        delta,\n        containerWidth,\n        panelBefore,\n        panelAfter,\n        panelsRef.current,\n        dragRef.current,\n      )\n\n      const widthsChanged = prevWidths.some((prevWidth, i) => prevWidth !== nextWidths[i])\n\n      if (widthsChanged) {\n        setWidths(nextWidths)\n      }\n    },\n    [elements],\n  )\n\n  // For setting the panels state\n  useLayoutEffect(() => {\n    panelsRef.current.elements = elements\n    panelsRef.current.panels = panels\n    panelsRef.current.widths = widths\n  }, [elements, panels, widths])\n\n  const storage = usePanelsStorage()\n\n  // For setting default sizing when panels are updated\n  useLayoutEffect(() => {\n    const {widths} = panelsRef.current\n\n    if (widths.length === panels.length) {\n      return\n    }\n\n    const storedWidths = storage.get(panels)\n\n    if (storedWidths) {\n      const validatedStoredWidths = validateWidths(panels, storedWidths, window.innerWidth)\n      setWidths(validatedStoredWidths)\n      return\n    }\n\n    const defaultWidths = getDefaultWidths(panels)\n    setWidths(defaultWidths)\n  }, [storage, panels])\n\n  // For storing current widths in localStorage\n  useEffect(() => {\n    if (!widths.length) return\n    storage.setDebounced(panels, widths)\n  }, [storage, panels, widths])\n\n  useLayoutEffect(() => {\n    const resizeObserver = new ResizeObserver(() => {\n      const {panels, widths: prevWidths} = panelsRef.current\n\n      const nextWidths = validateWidths(panels, prevWidths, window.innerWidth)\n\n      const widthsChanged = prevWidths.some((prevWidth, i) => prevWidth !== nextWidths[i])\n      if (widthsChanged) {\n        setWidths(nextWidths)\n      }\n    })\n\n    resizeObserver.observe(panelsEl.current!)\n\n    return () => {\n      resizeObserver.disconnect()\n    }\n  }, [])\n\n  const context = useMemo(\n    () => ({\n      activeResizer,\n      drag,\n      getPanelStyle,\n      registerElement,\n      startDragging,\n      stopDragging,\n      unregisterElement,\n    }),\n    [\n      activeResizer,\n      drag,\n      getPanelStyle,\n      registerElement,\n      startDragging,\n      stopDragging,\n      unregisterElement,\n    ],\n  )\n\n  return (\n    <PanelsContext.Provider value={context}>\n      <PanelsWrapper ref={panelsEl}>{children}</PanelsWrapper>\n    </PanelsContext.Provider>\n  )\n}\n","import {Box, Button, Card, Container, Flex, Inline, Stack, Text, type CardProps} from '@sanity/ui'\nimport type {ReactElement, ReactNode} from 'react'\nimport {useTranslation} from 'sanity'\nimport {presentationLocaleNamespace} from '../i18n'\n\nexport function ErrorCard(\n  props: {\n    children?: ReactNode\n    message: string\n    onRetry?: () => void\n    onContinueAnyway?: () => void\n  } & CardProps,\n): ReactElement {\n  const {children, message, onRetry, onContinueAnyway, ...restProps} = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n\n  const retryButton = (\n    <Button fontSize={1} mode=\"ghost\" onClick={onRetry} text={t('error-card.retry-button.text')} />\n  )\n  const continueAnywayButton = (\n    <Button\n      fontSize={1}\n      mode=\"ghost\"\n      tone=\"critical\"\n      onClick={onContinueAnyway}\n      text={t('error-card.continue-button.text')}\n    />\n  )\n\n  return (\n    <Card height=\"fill\" {...restProps}>\n      <Flex align=\"center\" height=\"fill\" justify=\"center\">\n        <Container padding={4} sizing=\"border\" width={0}>\n          <Stack space={4}>\n            <Stack space={3}>\n              <Text size={1} weight=\"semibold\">\n                {t('error-card.title')}\n              </Text>\n              <Text muted size={1}>\n                {message}\n              </Text>\n            </Stack>\n\n            {children}\n\n            {onRetry && onContinueAnyway ? (\n              <Inline space={2}>\n                {retryButton}\n                {continueAnywayButton}\n              </Inline>\n            ) : onRetry ? (\n              <Box>{retryButton}</Box>\n            ) : onContinueAnyway ? (\n              <Box>{continueAnywayButton}</Box>\n            ) : null}\n          </Stack>\n        </Container>\n      </Flex>\n    </Card>\n  )\n}\n","/* eslint-disable no-console */\n\nimport {forwardRef, useCallback, useMemo, type PropsWithChildren, type ReactElement} from 'react'\nimport {StateLink, useRouter} from 'sanity/router'\nimport {\n  getPublishedId,\n  PaneRouterContext,\n  useUnique,\n  type BackLinkProps,\n  type PaneRouterContextValue,\n  type ReferenceChildLinkProps,\n} from '../internals'\nimport type {\n  PresentationParams,\n  PresentationSearchParams,\n  StructureDocumentPaneParams,\n} from '../types'\n\nfunction encodeQueryString(params: Record<string, unknown> = {}): string {\n  const parts = Object.entries(params)\n    .map(([key, value]) => `${key}=${value}`)\n    .join('&')\n\n  return parts.length ? `?${parts}` : ''\n}\n\nfunction resolveQueryStringFromParams(nextParams: Record<string, string | undefined>) {\n  const allowed = [\n    'comment',\n    'inspect',\n    'instruction',\n    'pathKey',\n    'rev',\n    'since',\n    'template',\n    'view',\n  ] satisfies Array<keyof PresentationParams> as string[]\n\n  const safeNextParams = Object.entries(nextParams)\n    .filter(([key]) => allowed.includes(key))\n    .reduce((obj, [key, value]) => {\n      if (value == undefined) return obj\n      return {...obj, [key]: value}\n    }, {})\n\n  return encodeQueryString(safeNextParams)\n}\n\nconst BackLink = forwardRef(function BackLink(\n  props: BackLinkProps & {searchParams: PresentationSearchParams},\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const {searchParams, ...restProps} = props\n  return (\n    <StateLink\n      {...restProps}\n      ref={ref}\n      state={{\n        type: undefined,\n        _searchParams: Object.entries(searchParams),\n      }}\n      title={undefined}\n    />\n  )\n})\n\nconst ReferenceChildLink = forwardRef(function ReferenceChildLink(\n  props: ReferenceChildLinkProps & {searchParams: PresentationSearchParams},\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const {\n    documentId,\n    documentType,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    parentRefPath,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    template,\n    searchParams,\n    ...restProps\n  } = props\n\n  return (\n    <StateLink\n      {...restProps}\n      ref={ref}\n      state={{\n        id: documentId,\n        type: documentType,\n        _searchParams: Object.entries(searchParams),\n      }}\n      title={undefined}\n    />\n  )\n})\n\nexport function PresentationPaneRouterProvider(\n  props: PropsWithChildren<{\n    onStructureParams: (params: StructureDocumentPaneParams) => void\n    refs?: {_id: string; _type: string}[]\n    searchParams: PresentationSearchParams\n    structureParams: StructureDocumentPaneParams\n  }>,\n): ReactElement {\n  const {children, onStructureParams, structureParams, searchParams, refs} = props\n\n  const {state: routerState, resolvePathFromState} = useRouter()\n\n  const routerSearchParams = useUnique(Object.fromEntries(routerState._searchParams || []))\n\n  const createPathWithParams: PaneRouterContextValue['createPathWithParams'] = useCallback(\n    (nextParams) => {\n      const path = resolvePathFromState(routerState)\n      const qs = resolveQueryStringFromParams({\n        ...routerSearchParams,\n        ...nextParams,\n      })\n      return `${path}${qs}`\n    },\n    [resolvePathFromState, routerSearchParams, routerState],\n  )\n\n  const context: PaneRouterContextValue = useMemo(() => {\n    return {\n      index: 0,\n      groupIndex: 0,\n      siblingIndex: 0,\n      payload: {},\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      params: structureParams as any,\n      hasGroupSiblings: false,\n      groupLength: 1,\n      routerPanesState: [],\n      ChildLink: (childLinkProps) => {\n        const {childId, ...restProps} = childLinkProps\n        const ref = refs?.find((r) => r._id === childId || getPublishedId(r._id) === childId)\n        if (ref) {\n          return (\n            <StateLink\n              {...restProps}\n              state={{\n                id: childId,\n                type: ref._type,\n                _searchParams: Object.entries(searchParams),\n              }}\n            />\n          )\n        }\n\n        return <div {...restProps} />\n      },\n      BackLink: (backLinkProps) => <BackLink {...backLinkProps} searchParams={searchParams} />,\n      ReferenceChildLink: (childLinkProps) => (\n        <ReferenceChildLink {...childLinkProps} searchParams={searchParams} />\n      ),\n      ParameterizedLink: () => <>ParameterizedLink</>,\n      closeCurrentAndAfter: () => {\n        console.warn('closeCurrentAndAfter')\n      },\n      handleEditReference: (options) => {\n        console.warn('handleEditReference', options)\n      },\n      replaceCurrent: (pane) => {\n        console.warn('replaceCurrent', pane)\n      },\n      closeCurrent: () => {\n        console.warn('closeCurrent')\n      },\n      duplicateCurrent: (pane) => {\n        console.warn('duplicateCurrent', pane)\n      },\n      setView: (viewId) => {\n        console.warn('setView', viewId)\n      },\n      setParams: (nextParams) => {\n        // eslint-disable-next-line no-warning-comments\n        // @todo set inspect param to undefined manually as param is missing from object when closing inspector\n        onStructureParams({\n          ...nextParams,\n          inspect: nextParams['inspect'] ?? undefined,\n        } as StructureDocumentPaneParams)\n      },\n      setPayload: (payload) => {\n        console.warn('setPayload', payload)\n      },\n      navigateIntent: (intentName, intentParams, options) => {\n        console.warn('navigateIntent', intentName, intentParams, options)\n      },\n      createPathWithParams,\n    }\n  }, [createPathWithParams, onStructureParams, refs, searchParams, structureParams])\n\n  return <PaneRouterContext.Provider value={context}>{children}</PaneRouterContext.Provider>\n}\n","import {Card, Code, ErrorBoundary, Flex, Label, Stack} from '@sanity/ui'\nimport {useCallback, useEffect, useMemo, useState, type ErrorInfo, type ReactElement} from 'react'\nimport {useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\nimport {ErrorCard} from '../components/ErrorCard'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {\n  getPublishedId,\n  PaneLayout,\n  DocumentListPane as StructureDocumentListPane,\n  StructureToolProvider,\n  type PaneNode,\n} from '../internals'\nimport type {\n  MainDocumentState,\n  PresentationSearchParams,\n  StructureDocumentPaneParams,\n} from '../types'\nimport {usePresentationTool} from '../usePresentationTool'\nimport {PresentationPaneRouterProvider} from './PresentationPaneRouterProvider'\n\nconst RootLayout = styled(PaneLayout)`\n  height: 100%;\n`\n\nconst Root = styled(Flex)`\n  & > div {\n    min-width: none !important;\n    max-width: none !important;\n  }\n`\n\nconst WrappedCode = styled(Code)`\n  white-space: pre-wrap;\n`\n\nexport function DocumentListPane(props: {\n  mainDocumentState?: MainDocumentState\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  searchParams: PresentationSearchParams\n  refs: {_id: string; _type: string}[]\n}): ReactElement {\n  const {mainDocumentState, onStructureParams, searchParams, refs} = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {devMode} = usePresentationTool()\n\n  const ids = useMemo(\n    () =>\n      refs\n        .filter((r) => getPublishedId(r._id) !== mainDocumentState?.document?._id)\n        .map((r) => r._id),\n    [mainDocumentState, refs],\n  )\n\n  const pane: Extract<PaneNode, {type: 'documentList'}> = useMemo(\n    () => ({\n      id: '$root',\n      options: {\n        filter: '_id in $ids',\n        params: {ids},\n        // defaultOrdering: [{field: '_updatedAt', direction: 'desc'}],\n      },\n      schemaTypeName: '',\n      title: t('document-list-pane.document-list.title'),\n      type: 'documentList',\n    }),\n    [ids, t],\n  )\n\n  const [errorParams, setErrorParams] = useState<{\n    info: ErrorInfo\n    error: Error\n  } | null>(null)\n\n  const handleRetry = useCallback(() => setErrorParams(null), [])\n\n  const [structureParams] = useState(() => ({}))\n\n  // Reset error state when `refs` value schanges\n  useEffect(() => setErrorParams(null), [refs])\n\n  if (errorParams) {\n    return (\n      <ErrorCard flex={1} message={t('document-list-pane.error.text')} onRetry={handleRetry}>\n        {devMode && (\n          // show runtime error message in dev mode\n          <Card overflow=\"auto\" padding={3} radius={2} tone=\"critical\">\n            <Stack space={3}>\n              <Label muted size={0}>\n                {t('presentation-error.label')}\n              </Label>\n              <WrappedCode size={1}>{errorParams.error.message}</WrappedCode>\n            </Stack>\n          </Card>\n        )}\n      </ErrorCard>\n    )\n  }\n\n  return (\n    <ErrorBoundary onCatch={setErrorParams}>\n      <RootLayout>\n        <StructureToolProvider>\n          <PresentationPaneRouterProvider\n            onStructureParams={onStructureParams}\n            structureParams={structureParams}\n            searchParams={searchParams}\n            refs={refs}\n          >\n            <Root direction=\"column\" flex={1}>\n              <StructureDocumentListPane index={0} itemId=\"$root\" pane={pane} paneKey=\"$root\" />\n            </Root>\n          </PresentationPaneRouterProvider>\n        </StructureToolProvider>\n      </RootLayout>\n    </ErrorBoundary>\n  )\n}\n","import {Card, Code, ErrorBoundary, Label, Stack} from '@sanity/ui'\nimport {\n  Suspense,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n  type ErrorInfo,\n  type ReactElement,\n} from 'react'\nimport {useTranslation, type Path} from 'sanity'\nimport {styled} from 'styled-components'\nimport {ErrorCard} from '../components/ErrorCard'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {\n  decodeJsonParams,\n  PaneLayout,\n  DocumentPane as StructureDocumentPane,\n  type DocumentPaneNode,\n} from '../internals'\nimport {PresentationSpinner} from '../PresentationSpinner'\nimport type {PresentationSearchParams, StructureDocumentPaneParams} from '../types'\nimport {usePresentationTool} from '../usePresentationTool'\nimport {PresentationPaneRouterProvider} from './PresentationPaneRouterProvider'\n\nconst WrappedCode = styled(Code)`\n  white-space: pre-wrap;\n`\n\nexport function DocumentPane(props: {\n  documentId: string\n  documentType: string\n  onFocusPath: (path: Path) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  structureParams: StructureDocumentPaneParams\n  searchParams: PresentationSearchParams\n}): ReactElement {\n  const {documentId, documentType, onFocusPath, onStructureParams, searchParams, structureParams} =\n    props\n  const {template, templateParams} = structureParams\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {devMode} = usePresentationTool()\n\n  const paneDocumentNode: DocumentPaneNode = useMemo(\n    () => ({\n      id: documentId,\n      options: {\n        id: documentId,\n        type: documentType,\n        template,\n        templateParameters: decodeJsonParams(templateParams),\n      },\n      title: '',\n      type: 'document',\n    }),\n    [documentId, documentType, template, templateParams],\n  )\n\n  const [errorParams, setErrorParams] = useState<{\n    info: ErrorInfo\n    error: Error\n  } | null>(null)\n\n  const handleRetry = useCallback(() => setErrorParams(null), [])\n\n  // Reset error state when parameters change\n  useEffect(() => {\n    setErrorParams(null)\n  }, [documentId, documentType, structureParams])\n\n  if (errorParams) {\n    return (\n      <ErrorCard flex={1} message={t('document-pane.error.text')} onRetry={handleRetry}>\n        {devMode && (\n          // show runtime error message in dev mode\n          <Card overflow=\"auto\" padding={3} radius={2} tone=\"critical\">\n            <Stack space={3}>\n              <Label muted size={0}>\n                {t('presentation-error.label')}\n              </Label>\n              <WrappedCode size={1}>{errorParams.error.message}</WrappedCode>\n            </Stack>\n          </Card>\n        )}\n      </ErrorCard>\n    )\n  }\n\n  return (\n    <ErrorBoundary onCatch={setErrorParams}>\n      <PaneLayout style={{height: '100%'}}>\n        <PresentationPaneRouterProvider\n          searchParams={searchParams}\n          onStructureParams={onStructureParams}\n          structureParams={structureParams}\n        >\n          <Suspense fallback={<PresentationSpinner />}>\n            <StructureDocumentPane\n              paneKey=\"document\"\n              index={1}\n              itemId=\"document\"\n              pane={paneDocumentNode}\n              onFocusPath={onFocusPath}\n            />\n          </Suspense>\n        </PresentationPaneRouterProvider>\n      </PaneLayout>\n    </ErrorBoundary>\n  )\n}\n","import {type ReactElement} from 'react'\nimport {type Path} from 'sanity'\nimport {StructureToolProvider} from '../internals'\nimport type {PresentationSearchParams, StructureDocumentPaneParams} from '../types'\nimport {DocumentPane} from './DocumentPane'\n\nexport function DocumentPanel(props: {\n  documentId: string\n  documentType: string\n  onFocusPath: (path: Path) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  searchParams: PresentationSearchParams\n  structureParams: StructureDocumentPaneParams\n}): ReactElement {\n  const {documentId, documentType, onFocusPath, onStructureParams, searchParams, structureParams} =\n    props\n  return (\n    <StructureToolProvider>\n      <DocumentPane\n        documentId={documentId}\n        documentType={documentType}\n        onFocusPath={onFocusPath}\n        onStructureParams={onStructureParams}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      />\n    </StructureToolProvider>\n  )\n}\n","import {type SchemaType} from '@sanity/types'\nimport {useEffect, useState} from 'react'\nimport {\n  getPreviewStateObservable,\n  useDocumentPreviewStore,\n  type PreviewValue,\n  type SanityDocument,\n} from '../internals'\n\ninterface PreviewState {\n  isLoading?: boolean\n  draft?: PreviewValue | Partial<SanityDocument> | null\n  published?: PreviewValue | Partial<SanityDocument> | null\n}\n\nexport default function usePreviewState(documentId: string, schemaType?: SchemaType): PreviewState {\n  const documentPreviewStore = useDocumentPreviewStore()\n  const [preview, setPreview] = useState<PreviewState>({})\n\n  useEffect(() => {\n    if (!schemaType) {\n      return undefined\n    }\n    const subscription = getPreviewStateObservable(\n      documentPreviewStore,\n      schemaType,\n      documentId,\n      '',\n    ).subscribe((state) => {\n      setPreview(state)\n    })\n\n    return () => {\n      subscription?.unsubscribe()\n    }\n  }, [documentPreviewStore, schemaType, documentId])\n\n  return preview\n}\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {Box, Card, Flex, Text} from '@sanity/ui'\nimport {useCallback, useMemo, type HTMLProps, type ReactElement} from 'react'\nimport {StateLink} from 'sanity/router'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {\n  getPreviewValueWithFallback,\n  PreviewCard,\n  SanityDefaultPreview,\n  Translate,\n  useSchema,\n  useTranslation,\n  type Path,\n  type SanityDocument,\n} from '../internals'\nimport type {\n  MainDocumentState,\n  PresentationSearchParams,\n  StructureDocumentPaneParams,\n} from '../types'\nimport {DocumentListPane} from './DocumentListPane'\nimport {DocumentPanel} from './DocumentPanel'\nimport usePreviewState from './usePreviewState'\n\nexport function ContentEditor(props: {\n  documentId?: string\n  documentType?: string\n  mainDocumentState?: MainDocumentState\n  onFocusPath: (path: Path) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  refs: {_id: string; _type: string}[]\n  structureParams: StructureDocumentPaneParams\n  searchParams: PresentationSearchParams\n}): ReactElement {\n  const {\n    documentId,\n    documentType,\n    mainDocumentState,\n    onFocusPath,\n    onStructureParams,\n    refs,\n    searchParams,\n    structureParams,\n  } = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const schema = useSchema()\n\n  const MainDocumentLink = useCallback(\n    (props: HTMLProps<HTMLAnchorElement>) => {\n      return (\n        <StateLink\n          {...props}\n          state={{\n            id: mainDocumentState?.document?._id,\n            type: mainDocumentState?.document?._type,\n            _searchParams: Object.entries(searchParams),\n          }}\n        />\n      )\n    },\n    [mainDocumentState, searchParams],\n  )\n\n  const schemaType = useMemo(\n    () => schema.get(mainDocumentState?.document?._type || 'shoe')!,\n    [mainDocumentState, schema],\n  )\n\n  const previewState = usePreviewState(mainDocumentState?.document?._id || '', schemaType)\n\n  const preview = useMemo(() => {\n    if (!mainDocumentState?.document) return null\n\n    return (\n      <SanityDefaultPreview\n        {...getPreviewValueWithFallback({\n          value: mainDocumentState!.document! as SanityDocument,\n          published: previewState.published,\n          draft: previewState.draft,\n        })}\n        schemaType={schemaType}\n        status={\n          <Card padding={1} radius={2} shadow={1}>\n            <Text muted size={0} weight=\"medium\">\n              {t('main-document.label')}\n            </Text>\n          </Card>\n        }\n      />\n    )\n  }, [mainDocumentState, schemaType, t, previewState])\n\n  if (documentId && documentType) {\n    return (\n      <DocumentPanel\n        documentId={documentId}\n        documentType={documentType}\n        onFocusPath={onFocusPath}\n        onStructureParams={onStructureParams}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      />\n    )\n  }\n\n  return (\n    <Flex direction=\"column\" flex={1} height=\"fill\">\n      {mainDocumentState && (\n        <Card padding={3} tone={mainDocumentState.document ? 'inherit' : 'caution'}>\n          {mainDocumentState.document ? (\n            <PreviewCard\n              __unstable_focusRing\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              as={MainDocumentLink as any}\n              data-as=\"a\"\n              radius={2}\n              sizing=\"border\"\n              tone=\"inherit\"\n            >\n              {preview}\n            </PreviewCard>\n          ) : (\n            <Card padding={2} radius={2} tone=\"inherit\">\n              <Flex gap={3}>\n                <Box flex=\"none\">\n                  <Text size={1}>\n                    <WarningOutlineIcon />\n                  </Text>\n                </Box>\n                <Box flex={1}>\n                  <Text size={1}>\n                    <Translate\n                      t={t}\n                      i18nKey=\"main-document.missing.text\"\n                      components={{Code: 'code'}}\n                      values={{path: mainDocumentState.path}}\n                    />\n                  </Text>\n                </Box>\n              </Flex>\n            </Card>\n          )}\n        </Card>\n      )}\n\n      <DocumentListPane\n        mainDocumentState={mainDocumentState}\n        onStructureParams={onStructureParams}\n        searchParams={searchParams}\n        refs={refs}\n      />\n    </Flex>\n  )\n}\n","import validate from './validate.js';\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  //\n  // Note to future-self: No, you can't remove the `toLowerCase()` call.\n  // REF: https://github.com/uuidjs/uuid/pull/677#issuecomment-1757351351\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n  var uuid = unsafeStringify(arr, offset);\n  // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n  return uuid;\n}\nexport default stringify;","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n  return getRandomValues(rnds8);\n}","var randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    offset = offset || 0;\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n    return buf;\n  }\n  return unsafeStringify(rnds);\n}\nexport default v4;","import {useState} from 'react'\nimport {v4 as uuid} from 'uuid'\n\nexport function usePanelId(id?: string): string {\n  const [panelId] = useState(() => id || uuid())\n  return panelId\n}\n","import {\n  useCallback,\n  useContext,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  type FunctionComponent,\n  type MouseEvent as ReactMouseEvent,\n} from 'react'\nimport {styled} from 'styled-components'\nimport {PanelsContext} from './PanelsContext'\nimport {usePanelId} from './usePanelId'\n\nconst Resizer = styled.div`\n  position: relative;\n`\nconst ResizerInner = styled.div<{\n  $disabled: boolean\n}>`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: -5px;\n  width: 9px;\n  z-index: 10;\n  cursor: ${({$disabled}) => ($disabled ? 'auto' : 'ew-resize')};\n\n  /* Border */\n  & > span:nth-child(1) {\n    display: block;\n    border-left: 1px solid var(--card-border-color);\n    position: absolute;\n    top: 0;\n    left: 4px;\n    bottom: 0;\n    transition: opacity 200ms;\n  }\n\n  ${({$disabled}) =>\n    !$disabled &&\n    `\n    /* Hover effect */\n    & > span:nth-child(2) {\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 9px;\n      bottom: 0;\n      background-color: var(--card-border-color);\n      opacity: 0;\n      transition: opacity 150ms;\n    }\n\n    @media (hover: hover) {\n      &:hover > span:nth-child(2) {\n        opacity: 0.2;\n      }\n    }\n  `}\n`\n\nexport const PanelResizer: FunctionComponent<{\n  id?: string\n  order: number\n  disabled?: boolean\n}> = function ({id: propId, order, disabled = false}) {\n  const el = useRef<HTMLDivElement>(null)\n\n  const context = useContext(PanelsContext)\n\n  if (context === null) {\n    throw Error(`Panel components must be rendered within a PanelGroup container`)\n  }\n\n  const id = usePanelId(propId)\n\n  const {activeResizer, drag, startDragging, stopDragging, registerElement, unregisterElement} =\n    context\n\n  const isDragging = activeResizer === id\n\n  if (context === null) {\n    throw Error(`Panel components must be rendered within a PanelGroup container`)\n  }\n\n  const onMouseDown = useCallback(\n    (event: ReactMouseEvent) => {\n      startDragging(id, event.nativeEvent)\n    },\n    [id, startDragging],\n  )\n\n  const onDrag = useCallback(\n    (e: MouseEvent) => {\n      drag(id, e)\n    },\n    [id, drag],\n  )\n\n  const onDragStop = useCallback(() => {\n    el.current!.blur()\n    stopDragging()\n  }, [stopDragging])\n\n  useEffect(() => {\n    if (!isDragging || disabled) return\n\n    // Set styles to prevent text selection and force an ew-resize cursor whilst\n    // dragging. Return a reset callback so we can revert to any values that\n    // might have been present before dragging started.\n    function setDocumentStyles() {\n      const bodyStyle = document.body.style\n      const documentStyle = document.documentElement.style\n\n      const {cursor} = documentStyle\n      const {userSelect} = bodyStyle\n\n      documentStyle.cursor = 'ew-resize'\n      bodyStyle.userSelect = 'none'\n\n      return () => {\n        if (cursor) documentStyle.cursor = cursor\n        else documentStyle.removeProperty('cursor')\n\n        if (userSelect) bodyStyle.userSelect = userSelect\n        else bodyStyle.removeProperty('user-select')\n      }\n    }\n\n    const resetDocumentStyles = setDocumentStyles()\n    window.addEventListener('mousemove', onDrag)\n    window.addEventListener('mouseup', onDragStop)\n    window.addEventListener('contextmenu', onDragStop)\n\n    return () => {\n      resetDocumentStyles()\n      window.removeEventListener('mousemove', onDrag)\n      window.removeEventListener('mouseup', onDragStop)\n      window.removeEventListener('contextmenu', onDragStop)\n    }\n  }, [disabled, isDragging, onDrag, onDragStop])\n\n  useLayoutEffect(() => {\n    registerElement(id, {id, order, type: 'resizer', el})\n\n    return () => {\n      unregisterElement(id)\n    }\n  }, [id, order, registerElement, unregisterElement])\n\n  return (\n    <Resizer onMouseDown={onMouseDown} ref={el}>\n      <ResizerInner $disabled={disabled}>\n        <span />\n        <span />\n      </ResizerInner>\n    </Resizer>\n  )\n}\n","import {\n  type Dispatch,\n  type FunctionComponent,\n  type PropsWithChildren,\n  type SetStateAction,\n} from 'react'\nimport type {Path, SanityDocument} from 'sanity'\nimport {ContentEditor} from './editor/ContentEditor'\nimport {CommentsIntentProvider, type CommentIntentGetter} from './internals'\nimport {DisplayedDocumentBroadcasterProvider} from './loader/DisplayedDocumentBroadcaster'\nimport {Panel} from './panels/Panel'\nimport {PanelResizer} from './panels/PanelResizer'\nimport type {\n  MainDocumentState,\n  PresentationParams,\n  PresentationSearchParams,\n  StructureDocumentPaneParams,\n} from './types'\n\nexport interface PresentationContentProps {\n  documentId: PresentationParams['id']\n  documentsOnPage: {_id: string; _type: string}[]\n  documentType: PresentationParams['type']\n  getCommentIntent: CommentIntentGetter\n  mainDocumentState: MainDocumentState | undefined\n  onFocusPath: (path: Path) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  searchParams: PresentationSearchParams\n  setDisplayedDocument: Dispatch<SetStateAction<Partial<SanityDocument> | null | undefined>>\n  structureParams: StructureDocumentPaneParams\n}\n\nconst PresentationContentWrapper: FunctionComponent<\n  PropsWithChildren<{\n    documentId?: string\n    getCommentIntent: CommentIntentGetter\n    setDisplayedDocument: Dispatch<SetStateAction<Partial<SanityDocument> | null | undefined>>\n  }>\n> = (props) => {\n  const {documentId, setDisplayedDocument, getCommentIntent} = props\n  return (\n    <>\n      <PanelResizer order={4} />\n      <Panel id=\"content\" minWidth={325} order={5}>\n        <DisplayedDocumentBroadcasterProvider\n          documentId={documentId}\n          setDisplayedDocument={setDisplayedDocument}\n        >\n          <CommentsIntentProvider getIntent={getCommentIntent}>\n            {props.children}\n          </CommentsIntentProvider>\n        </DisplayedDocumentBroadcasterProvider>\n      </Panel>\n    </>\n  )\n}\n\nexport const PresentationContent: FunctionComponent<PresentationContentProps> = (props) => {\n  const {\n    documentId,\n    documentsOnPage,\n    documentType,\n    getCommentIntent,\n    mainDocumentState,\n    onFocusPath,\n    onStructureParams,\n    searchParams,\n    setDisplayedDocument,\n    structureParams,\n  } = props\n\n  return (\n    <PresentationContentWrapper\n      documentId={documentId}\n      getCommentIntent={getCommentIntent}\n      setDisplayedDocument={setDisplayedDocument}\n    >\n      <ContentEditor\n        documentId={documentId}\n        documentType={documentType}\n        mainDocumentState={mainDocumentState}\n        onFocusPath={onFocusPath}\n        onStructureParams={onStructureParams}\n        refs={documentsOnPage}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      />\n    </PresentationContentWrapper>\n  )\n}\n","import {useCallback, type FunctionComponent, type PropsWithChildren} from 'react'\nimport {\n  PresentationNavigateContext,\n  type PresentationNavigateContextValue,\n} from './PresentationNavigateContext'\nimport type {PresentationNavigate} from './types'\n\nexport const PresentationNavigateProvider: FunctionComponent<\n  PropsWithChildren<{\n    navigate: PresentationNavigate\n  }>\n> = function (props) {\n  const {children, navigate: _navigate} = props\n\n  const navigate = useCallback<PresentationNavigateContextValue>(\n    (preview, document = undefined) => {\n      _navigate(document || {}, preview ? {preview} : {})\n    },\n    [_navigate],\n  )\n\n  return (\n    <PresentationNavigateContext.Provider value={navigate}>\n      {children}\n    </PresentationNavigateContext.Provider>\n  )\n}\n","import {useEffect, useState, type Dispatch, type SetStateAction} from 'react'\n\nexport function useLocalState<T>(key: string, defaultValue: T): [T, Dispatch<SetStateAction<T>>] {\n  const [value, setValue] = useState<T>(() =>\n    JSON.parse(localStorage.getItem(key) ?? JSON.stringify(defaultValue)),\n  )\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value))\n  }, [key, value])\n\n  return [value, setValue]\n}\n","import {memo, useCallback, useMemo} from 'react'\nimport {Panel} from './panels/Panel'\nimport {PanelResizer} from './panels/PanelResizer'\nimport type {NavigatorOptions} from './types'\nimport {useLocalState} from './useLocalState'\n\n/** @internal */\nexport interface UsePresentationNavigatorProps {\n  unstable_navigator?: NavigatorOptions\n}\n\n/** @internal */\nexport interface UsePresentationNavigatorState {\n  navigatorEnabled: boolean\n  toggleNavigator: (() => void) | undefined\n}\n\n/** @internal */\nexport function usePresentationNavigator(\n  props: UsePresentationNavigatorProps,\n): [UsePresentationNavigatorState, () => JSX.Element] {\n  const {unstable_navigator} = props\n\n  const navigatorProvided = !!unstable_navigator?.component\n  const [_navigatorEnabled, setNavigatorEnabled] = useLocalState<boolean>(\n    'presentation/navigator',\n    navigatorProvided,\n  )\n  const navigatorEnabled = navigatorProvided ? _navigatorEnabled : false\n  const toggleNavigator = useMemo(() => {\n    if (!navigatorProvided) return undefined\n\n    return () => setNavigatorEnabled((enabled) => !enabled)\n  }, [navigatorProvided, setNavigatorEnabled])\n\n  const Component = useCallback(\n    function PresentationNavigator() {\n      return <>{navigatorEnabled && <Navigator {...unstable_navigator!} />}</>\n    },\n    [navigatorEnabled, unstable_navigator],\n  )\n\n  return [{navigatorEnabled, toggleNavigator}, Component]\n}\n\nfunction NavigatorComponent(props: NavigatorOptions) {\n  const {minWidth, maxWidth, component: NavigatorComponent} = props\n  const navigatorDisabled = minWidth != null && maxWidth != null && minWidth === maxWidth\n  return (\n    <>\n      <Panel id=\"navigator\" minWidth={minWidth} maxWidth={maxWidth} order={1}>\n        <NavigatorComponent />\n      </Panel>\n      <PanelResizer order={2} disabled={navigatorDisabled} />\n    </>\n  )\n}\nconst Navigator = memo(NavigatorComponent)\n","import {useMemo, type FunctionComponent, type PropsWithChildren} from 'react'\nimport {PresentationParamsContext} from './PresentationParamsContext'\nimport type {PresentationParams} from './types'\n\nexport const PresentationParamsProvider: FunctionComponent<\n  PropsWithChildren<{\n    params: PresentationParams\n  }>\n> = function (props) {\n  const {children, params} = props\n\n  const context = useMemo<PresentationParams>(() => params, [params])\n\n  return (\n    <PresentationParamsContext.Provider value={context}>\n      {children}\n    </PresentationParamsContext.Provider>\n  )\n}\n","import {useMemo, type FunctionComponent, type PropsWithChildren} from 'react'\nimport {PresentationContext, type PresentationContextValue} from './PresentationContext'\nimport type {\n  PresentationNavigate,\n  PresentationParams,\n  PresentationSearchParams,\n  StructureDocumentPaneParams,\n} from './types'\n\nexport const PresentationProvider: FunctionComponent<\n  PropsWithChildren<{\n    devMode: boolean\n    name: string\n    navigate: PresentationNavigate\n    params: PresentationParams\n    searchParams: PresentationSearchParams\n    structureParams: StructureDocumentPaneParams\n  }>\n> = function (props) {\n  const {children, devMode, name, navigate, params, searchParams, structureParams} = props\n\n  const context = useMemo<PresentationContextValue>(\n    () => ({\n      devMode,\n      name,\n      navigate,\n      params,\n      searchParams,\n      structureParams,\n    }),\n    [devMode, name, navigate, params, searchParams, structureParams],\n  )\n\n  return <PresentationContext.Provider value={context}>{children}</PresentationContext.Provider>\n}\n","import {Box} from '@sanity/ui'\nimport {motion, type VariantLabels, type Variants} from 'framer-motion'\nimport {forwardRef, useId, type ReactEventHandler} from 'react'\nimport {styled} from 'styled-components'\n\nconst IFrameElement = motion.create(styled.iframe`\n  box-shadow: 0 0 0 1px var(--card-border-color);\n  border: 0;\n  max-height: 100%;\n  width: 100%;\n  view-transition-class: presentation-tool-iframe;\n`)\n\nconst IFrameOverlay = styled(Box)`\n  position: absolute;\n  inset: 0;\n  background: transparent;\n`\n\ninterface IFrameProps {\n  animate: VariantLabels\n  initial: VariantLabels\n  onLoad: ReactEventHandler<HTMLIFrameElement>\n  preventClick: boolean\n  src: string\n  variants: Variants\n  style: React.CSSProperties\n}\n\nexport const IFrame = forwardRef<HTMLIFrameElement, IFrameProps>(function IFrame(props, ref) {\n  const {animate, initial, onLoad, preventClick, src, variants, style} = props\n  const id = useId()\n\n  return (\n    <>\n      <IFrameElement\n        style={{\n          ...style,\n          // useId() guarantees that the ID will be unique, even if we add support for multiple iframe instances,\n          // while `view-transition-class: presentation-tool-iframe` provides userland a way to customize the transition with CSS if they wish\n          viewTransitionName: `presentation-tool-iframe-${id.replace(/[^a-zA-Z0-9-_]/g, '_')}`,\n        }}\n        animate={animate}\n        initial={initial}\n        onLoad={onLoad}\n        ref={ref}\n        src={src}\n        variants={variants}\n      />\n      {preventClick && <IFrameOverlay />}\n    </>\n  )\n})\n","import {LaunchIcon} from '@sanity/icons'\nimport {Button, Text, Tooltip} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {useTranslation} from 'sanity'\nimport {presentationLocaleNamespace} from '../i18n'\nimport type {PreviewProps} from './Preview'\n\n/** @internal */\nexport function OpenPreviewButton(\n  props: Pick<PreviewProps, 'openPopup'> & {\n    previewLocationOrigin: string\n    previewLocationRoute: string\n  },\n): React.ReactNode {\n  const {openPopup, previewLocationOrigin, previewLocationRoute} = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n\n  const handleOpenPopup = useCallback(\n    (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n      event.preventDefault()\n      openPopup(event.currentTarget.href)\n    },\n    [openPopup],\n  )\n\n  return (\n    <Tooltip\n      animate\n      content={<Text size={1}>{t('share-url.menu-item.open.text')}</Text>}\n      fallbackPlacements={['bottom-start']}\n      padding={2}\n      placement=\"bottom\"\n      portal\n    >\n      <Button\n        as=\"a\"\n        aria-label={t('share-url.menu-item.open.text')}\n        fontSize={1}\n        icon={LaunchIcon}\n        mode=\"bleed\"\n        padding={2}\n        href={`${previewLocationOrigin}${previewLocationRoute}`}\n        // @ts-expect-error the `as=\"a\"` prop isn't enough to change the type of event.target from <div> to <a>\n        onClick={handleOpenPopup}\n        rel=\"opener\"\n        target=\"_blank\"\n      />\n    </Tooltip>\n  )\n}\n","import {ResetIcon} from '@sanity/icons'\nimport {TextInput, type TextInputClearButtonProps} from '@sanity/ui'\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  type ChangeEvent,\n  type FunctionComponent,\n  type KeyboardEvent,\n  type ReactNode,\n} from 'react'\nimport {useTranslation} from 'sanity'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {useActiveWorkspace} from '../internals'\n\nexport const PreviewLocationInput: FunctionComponent<{\n  fontSize?: number\n  onChange: (value: string) => void\n  origin: string\n  padding?: number\n  prefix?: ReactNode\n  suffix?: ReactNode\n  value: string\n}> = function (props) {\n  const {fontSize = 1, onChange, origin, padding = 3, prefix, suffix, value} = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {basePath = '/'} = useActiveWorkspace()?.activeWorkspace || {}\n\n  const inputRef = useRef<HTMLInputElement | null>(null)\n  const [sessionValue, setSessionValue] = useState<string | undefined>(undefined)\n  const [customValidity, setCustomValidity] = useState<string | undefined>(undefined)\n\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    setSessionValue(event.currentTarget.value)\n  }, [])\n\n  const handleKeyDown = useCallback(\n    (event: KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Enter') {\n        if (sessionValue === undefined) {\n          return\n        }\n\n        const absoluteValue =\n          sessionValue.startsWith('/') || sessionValue === ''\n            ? `${origin}${sessionValue}`\n            : sessionValue\n\n        if (!absoluteValue.startsWith(origin + '/') && absoluteValue !== origin) {\n          setCustomValidity(t('preview-location-input.error', {origin, context: 'missing-origin'}))\n          return\n        }\n        // `origin` is an empty string '' if the Studio is embedded, and that's when we need to protect against recursion\n        if (!origin && (absoluteValue.startsWith(`${basePath}/`) || absoluteValue === basePath)) {\n          setCustomValidity(\n            t('preview-location-input.error', {basePath, context: 'same-base-path'}),\n          )\n          return\n        }\n\n        const nextValue = absoluteValue === origin ? origin + '/' : absoluteValue\n\n        setCustomValidity(undefined)\n        setSessionValue(undefined)\n\n        onChange(nextValue.slice(origin.length))\n\n        inputRef.current?.blur()\n      }\n\n      if (event.key === 'Escape') {\n        setCustomValidity(undefined)\n        setSessionValue(undefined)\n      }\n    },\n    [basePath, onChange, origin, sessionValue, t],\n  )\n\n  const handleBlur = useCallback(() => {\n    setCustomValidity(undefined)\n    setSessionValue(undefined)\n  }, [])\n\n  useEffect(() => {\n    setCustomValidity(undefined)\n    setSessionValue(undefined)\n  }, [origin, value])\n\n  const resetButton: TextInputClearButtonProps = useMemo(() => ({icon: ResetIcon}), [])\n\n  return (\n    <>\n      <TextInput\n        clearButton={customValidity ? resetButton : undefined}\n        customValidity={customValidity}\n        fontSize={fontSize}\n        onBlur={handleBlur}\n        onClear={() => {\n          setCustomValidity(undefined)\n          setSessionValue(origin + value)\n        }}\n        onChange={handleChange}\n        onKeyDownCapture={handleKeyDown}\n        padding={padding}\n        prefix={prefix}\n        style={{zIndex: 1}}\n        radius={2}\n        ref={inputRef}\n        space={padding}\n        suffix={suffix}\n        value={sessionValue === undefined ? `${origin}${value}` : sessionValue}\n      />\n    </>\n  )\n}\n","import type {SyncTag} from '@sanity/client'\nimport {CopyIcon, ShareIcon} from '@sanity/icons'\nimport {SanityMonogram} from '@sanity/logos'\nimport {fetchSharedAccessQuery} from '@sanity/preview-url-secret/constants'\nimport {\n  disablePreviewAccessSharing,\n  enablePreviewAccessSharing,\n} from '@sanity/preview-url-secret/toggle-preview-access-sharing'\nimport {setSecretSearchParams} from '@sanity/preview-url-secret/without-secret-search-params'\nimport {\n  Box,\n  Button,\n  Card,\n  Grid,\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuItem,\n  Spinner,\n  Stack,\n  Switch,\n  Text,\n  Tooltip,\n  useToast,\n} from '@sanity/ui'\nimport {AnimatePresence, motion} from 'framer-motion'\nimport {lazy, memo, Suspense, useCallback, useEffect, useMemo, useState} from 'react'\nimport {useClient, useCurrentUser, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\nimport {API_VERSION} from '../constants'\nimport {presentationLocaleNamespace} from '../i18n'\nimport type {PreviewProps} from './Preview'\n\nconst QRCodeSVG = lazy(() => import('./QRCodeSVG'))\n\nexport interface SharePreviewMenuProps {\n  canToggleSharePreviewAccess: boolean\n  canUseSharedPreviewAccess: boolean\n  previewLocationRoute: string\n  initialUrl: PreviewProps['initialUrl']\n  perspective: string\n}\n\nconst QrCodeLogoSize = 24\nconst QrCodeLogoPadding = 16\nconst QrSize = 224\n\nconst StyledSanityMonogram = styled(SanityMonogram)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  height: ${QrCodeLogoSize}px;\n  width: ${QrCodeLogoSize}px;\n`\n\nconst MotionSpinner = motion.create(Spinner)\nconst MotionText = motion.create(Text)\nconst MotionMonogram = motion.create(StyledSanityMonogram)\n\nexport const SharePreviewMenu = memo(function SharePreviewMenuComponent(\n  props: SharePreviewMenuProps,\n) {\n  const {\n    canToggleSharePreviewAccess,\n    canUseSharedPreviewAccess,\n    initialUrl,\n    previewLocationRoute,\n    perspective,\n  } = props\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {push: pushToast} = useToast()\n  const client = useClient({apiVersion: API_VERSION})\n  const currentUser = useCurrentUser()\n  const [loading, setLoading] = useState(true)\n  const [enabling, setEnabling] = useState(false)\n  const [disabling, setDisabling] = useState(false)\n  const [secret, setSecret] = useState<string | null>(null)\n  const busy = enabling || disabling || loading\n  const url = useMemo(\n    () =>\n      secret ? setSecretSearchParams(initialUrl, secret, previewLocationRoute, perspective) : null,\n    [initialUrl, perspective, previewLocationRoute, secret],\n  )\n\n  const [error, setError] = useState<unknown>(null)\n  if (error) {\n    throw error\n  }\n\n  const handleUnableToToggle = useCallback(() => {\n    pushToast({\n      closable: true,\n      status: 'warning',\n      title: t('share-preview-menu.error_toggle-sharing', {context: 'toggle-sharing'}),\n    })\n  }, [pushToast, t])\n\n  const handleDisableSharing = useCallback(async () => {\n    try {\n      setDisabling(true)\n      await disablePreviewAccessSharing(\n        client,\n        '@sanity/presentation',\n        typeof window === 'undefined' ? '' : location.href,\n        currentUser?.id,\n      )\n      setSecret(null)\n    } catch (error) {\n      setError(error)\n    } finally {\n      setDisabling(false)\n    }\n  }, [client, currentUser?.id])\n  const handleEnableSharing = useCallback(async () => {\n    try {\n      setEnabling(true)\n\n      const previewUrlSecret = await enablePreviewAccessSharing(\n        client,\n        '@sanity/presentation',\n        typeof window === 'undefined' ? '' : location.href,\n        currentUser?.id,\n      )\n      setSecret(previewUrlSecret.secret)\n    } catch (error) {\n      setError(error)\n    } finally {\n      setEnabling(false)\n    }\n  }, [client, currentUser?.id])\n\n  const handleCopyUrl = useCallback(() => {\n    try {\n      if (!url) {\n        throw new Error('No URL to copy')\n      }\n      navigator.clipboard.writeText(url.toString())\n      pushToast({\n        closable: true,\n        status: 'success',\n        title: t('share-url.clipboard.status', {context: 'success'}),\n      })\n    } catch (error) {\n      setError(error)\n    }\n  }, [pushToast, t, url])\n\n  useEffect(() => {\n    let controller = new AbortController()\n    let usedTags: SyncTag[] = []\n    async function fetchShareSecret(lastLiveEventId: string | null, signal: AbortSignal) {\n      const {result, syncTags} = await client.fetch<string | null>(\n        fetchSharedAccessQuery,\n        {},\n        {filterResponse: false, lastLiveEventId, tag: 'presentation.fetch-shared-access-secret'},\n      )\n      if (Array.isArray(syncTags)) {\n        usedTags = syncTags\n      }\n      if (!signal.aborted) {\n        setSecret(result)\n      }\n    }\n    const subscription = client.live.events().subscribe({\n      next: (event) => {\n        if (event.type === 'message') {\n          controller.abort()\n          controller = new AbortController()\n          if (event.tags.some((tag) => usedTags.includes(tag))) {\n            fetchShareSecret(event.id, controller.signal)\n          }\n        }\n      },\n      error: setError,\n    })\n\n    fetchShareSecret(null, controller.signal).finally(() => setLoading(false))\n\n    return () => {\n      subscription.unsubscribe()\n      controller.abort()\n    }\n  }, [client])\n\n  return (\n    <MenuButton\n      button={\n        <Button\n          aria-label={t('preview-frame.share-button.aria-label')}\n          fontSize={1}\n          icon={ShareIcon}\n          mode=\"bleed\"\n          padding={2}\n        />\n      }\n      id=\"share-menu\"\n      menu={\n        <Menu style={{maxWidth: 248}} padding={canUseSharedPreviewAccess ? undefined : 0}>\n          {canUseSharedPreviewAccess ? (\n            <>\n              <label style={{cursor: 'pointer'}}>\n                <Grid\n                  columns={2}\n                  rows={2}\n                  gapX={3}\n                  gapY={1}\n                  style={{\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    gridTemplateColumns: 'min-content 1fr',\n                    gridTemplateRows: 'min-content',\n                  }}\n                  paddingTop={3}\n                  paddingX={3}\n                >\n                  <Tooltip\n                    animate\n                    content={\n                      <Text size={1}>\n                        {t('share-preview-menu.toggle-button.tooltip', {\n                          context: url ? 'disable' : 'enable',\n                        })}\n                      </Text>\n                    }\n                    fallbackPlacements={['bottom-start']}\n                    padding={1}\n                    placement=\"bottom\"\n                    portal\n                  >\n                    <Switch\n                      checked={enabling || (url !== null && !disabling)}\n                      readOnly={enabling || disabling}\n                      indeterminate={loading}\n                      onChange={\n                        !canToggleSharePreviewAccess\n                          ? handleUnableToToggle\n                          : url\n                            ? handleDisableSharing\n                            : handleEnableSharing\n                      }\n                    />\n                  </Tooltip>\n                  <Text size={1} weight=\"medium\">\n                    {t('share-preview-menu.toggle-button.label', {context: 'first-line'})}\n                  </Text>\n                  <span />\n                  <Text muted size={1}>\n                    {t('share-preview-menu.toggle-button.label', {context: 'second-line'})}\n                  </Text>\n                </Grid>\n              </label>\n              <Box padding={3} paddingTop={2}>\n                <Stack space={3}>\n                  <Card\n                    tone={busy || !url ? 'transparent' : undefined}\n                    style={{\n                      position: 'relative',\n                      aspectRatio: '1 / 1',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                    }}\n                  >\n                    <AnimatePresence>\n                      {busy ? (\n                        <MotionSpinner\n                          muted\n                          initial={{opacity: 0}}\n                          animate={{opacity: 1}}\n                          exit={{opacity: 0}}\n                        />\n                      ) : url ? (\n                        <>\n                          <Suspense fallback={<Spinner />}>\n                            <QRCodeSVG\n                              title={t('share-preview-menu.qr-code.title', {url: url.toString()})}\n                              value={url.toString()}\n                              size={QrSize}\n                              color=\"var(--card-fg-color)\"\n                              logoSize={QrCodeLogoSize + QrCodeLogoPadding}\n                            />\n                            <MotionMonogram\n                              initial={{opacity: -0.5}}\n                              animate={{opacity: 1.5}}\n                              exit={{opacity: 0}}\n                            />\n                          </Suspense>\n                        </>\n                      ) : (\n                        <MotionText\n                          muted\n                          size={1}\n                          style={{maxWidth: '100px', textWrap: 'pretty', textAlign: 'center'}}\n                          initial={{opacity: 0}}\n                          animate={{opacity: 1}}\n                          exit={{opacity: 0}}\n                        >\n                          {t('share-preview-menu.qr-code.placeholder')}\n                        </MotionText>\n                      )}\n                    </AnimatePresence>\n                  </Card>\n                  <Text muted size={1}>\n                    {t('share-preview-menu.qr-code.instructions')}\n                  </Text>\n                </Stack>\n              </Box>\n              <MenuDivider />\n              <MenuItem\n                disabled={!url || disabling}\n                icon={CopyIcon}\n                onClick={handleCopyUrl}\n                fontSize={1}\n                padding={3}\n                text={t('share-preview-menu.copy-url.text')}\n              />\n            </>\n          ) : (\n            <Card padding={2} tone=\"caution\" radius={3}>\n              <Text style={{textWrap: 'pretty'}}>\n                {t('share-preview-menu.error', {context: 'missing-grants'})}\n              </Text>\n            </Card>\n          )}\n        </Menu>\n      }\n      popover={{\n        animate: true,\n        constrainSize: true,\n        placement: 'bottom',\n        portal: true,\n      }}\n    />\n  )\n})\nSharePreviewMenu.displayName = 'Memo(SharePreviewMenu)'\n","import {\n  CheckmarkIcon,\n  ChevronDownIcon,\n  DesktopIcon,\n  EditIcon,\n  MobileDeviceIcon,\n  PanelLeftIcon,\n  PublishIcon,\n  RefreshIcon,\n} from '@sanity/icons'\nimport {withoutSecretSearchParams} from '@sanity/preview-url-secret/without-secret-search-params'\nimport {\n  Box,\n  Button,\n  Card,\n  Flex,\n  Hotkeys,\n  Menu,\n  MenuButton,\n  MenuItem,\n  Stack,\n  Switch,\n  Text,\n  Tooltip,\n  type ButtonTone,\n} from '@sanity/ui'\nimport {\n  createElement,\n  useCallback,\n  useMemo,\n  type ComponentType,\n  type FunctionComponent,\n  type ReactNode,\n  type RefObject,\n} from 'react'\nimport {useTranslation} from 'sanity'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {ACTION_IFRAME_RELOAD} from '../reducers/presentationReducer'\nimport type {HeaderOptions, PresentationPerspective} from '../types'\nimport {OpenPreviewButton} from './OpenPreviewButton'\nimport type {PreviewProps} from './Preview'\nimport {PreviewLocationInput} from './PreviewLocationInput'\nimport {SharePreviewMenu} from './SharePreviewMenu'\n\nconst PERSPECTIVE_TITLE_KEY: Record<PresentationPerspective, string> = {\n  previewDrafts: 'preview-frame.perspective.previewDrafts.title',\n  published: 'preview-frame.perspective.published.title',\n}\n\nconst PERSPECTIVE_TONES: Record<PresentationPerspective, ButtonTone> = {\n  previewDrafts: 'caution',\n  published: 'positive',\n}\n\nconst PERSPECTIVE_ICONS: Record<PresentationPerspective, ComponentType> = {\n  previewDrafts: EditIcon,\n  published: PublishIcon,\n}\n\nexport interface PreviewHeaderProps extends PreviewProps {\n  iframeRef: RefObject<HTMLIFrameElement>\n  renderDefault: (props: PreviewHeaderProps) => ReactNode\n}\n\nconst PreviewHeaderDefault: FunctionComponent<Omit<PreviewHeaderProps, 'renderDefault'>> = (\n  props,\n) => {\n  const {\n    canSharePreviewAccess,\n    canToggleSharePreviewAccess,\n    canUseSharedPreviewAccess,\n    dispatch,\n    iframe,\n    iframeRef,\n    initialUrl,\n    loadersConnection,\n    navigatorEnabled,\n    onPathChange,\n    onRefresh,\n    openPopup,\n    overlaysConnection,\n    perspective,\n    previewUrl,\n    setPerspective,\n    setViewport,\n    targetOrigin,\n    toggleNavigator,\n    toggleOverlay,\n    viewport,\n    visualEditing: {overlaysEnabled},\n  } = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n\n  const toggleViewportSize = useCallback(\n    () => setViewport(viewport === 'desktop' ? 'mobile' : 'desktop'),\n    [setViewport, viewport],\n  )\n\n  const previewLocationOrigin = useMemo(() => {\n    return targetOrigin === location.origin ? '' : targetOrigin\n  }, [targetOrigin])\n\n  const handleRefresh = () => {\n    onRefresh(() => {\n      if (!iframeRef.current) {\n        return\n      }\n      dispatch({type: ACTION_IFRAME_RELOAD})\n      // Funky way to reload an iframe without CORS issues\n      // eslint-disable-next-line no-self-assign\n      // ref.current.src = ref.current.src\n      Object.assign(iframeRef.current, {src: `${targetOrigin}${previewUrl || '/'}`})\n    })\n  }\n\n  const previewLocationRoute = useMemo(() => {\n    const previewURL = new URL(previewUrl || '/', targetOrigin)\n    const {pathname, search} = withoutSecretSearchParams(previewURL)\n\n    return `${pathname}${search}`\n  }, [previewUrl, targetOrigin])\n\n  return (\n    <>\n      {toggleNavigator && (\n        <Box flex=\"none\" marginRight={1} padding={1}>\n          <Tooltip\n            animate\n            content={<Text size={1}>{t('preview-frame.navigator.toggle-button.tooltip')}</Text>}\n            fallbackPlacements={['bottom-start']}\n            padding={2}\n            placement=\"bottom\"\n            portal\n          >\n            <Button\n              aria-label={t('preview-frame.navigator.toggle-button.aria-label')}\n              fontSize={1}\n              icon={PanelLeftIcon}\n              mode=\"bleed\"\n              onClick={toggleNavigator}\n              padding={2}\n              selected={navigatorEnabled}\n            />\n          </Tooltip>\n        </Box>\n      )}\n\n      <Tooltip\n        animate\n        content={\n          <Flex align=\"center\" style={{whiteSpace: 'nowrap'}}>\n            <Box padding={1}>\n              <Text size={1}>\n                {t('preview-frame.overlay.toggle-button.tooltip', {\n                  context: overlaysEnabled ? 'disable' : 'enable',\n                })}\n              </Text>\n            </Box>\n            <Box paddingY={1}>\n              <Hotkeys keys={['Alt']} style={{marginTop: -4, marginBottom: -4}} />\n            </Box>\n          </Flex>\n        }\n        fallbackPlacements={['bottom-start']}\n        padding={1}\n        placement=\"bottom\"\n        portal\n      >\n        <Card\n          as=\"label\"\n          flex=\"none\"\n          marginRight={1}\n          padding={3}\n          style={{\n            lineHeight: 0,\n            borderRadius: 999,\n            userSelect: 'none',\n          }}\n          tone={overlaysEnabled ? 'transparent' : undefined}\n        >\n          <Flex align=\"center\" gap={3}>\n            <div style={{margin: -4}}>\n              <Switch\n                checked={overlaysEnabled}\n                onChange={toggleOverlay}\n                disabled={iframe.status === 'loading' || overlaysConnection !== 'connected'}\n              />\n            </div>\n            <Box>\n              <Text muted={!overlaysEnabled} size={1} weight=\"medium\">\n                {t('preview-frame.overlay.toggle-button.text')}\n              </Text>\n            </Box>\n          </Flex>\n        </Card>\n      </Tooltip>\n\n      <Box flex={1} marginX={1}>\n        <PreviewLocationInput\n          prefix={\n            <Box padding={1}>\n              <Tooltip\n                animate\n                content={\n                  <Text size={1}>\n                    {iframe.status === 'loaded'\n                      ? t('preview-frame.refresh-button.tooltip')\n                      : t('preview-frame.status', {context: iframe.status})}\n                  </Text>\n                }\n                fallbackPlacements={['bottom-end']}\n                padding={2}\n                placement=\"bottom\"\n                portal\n              >\n                <Button\n                  aria-label={t('preview-frame.refresh-button.aria-label')}\n                  fontSize={1}\n                  icon={RefreshIcon}\n                  mode=\"bleed\"\n                  loading={iframe.status === 'reloading' || iframe.status === 'refreshing'}\n                  onClick={handleRefresh}\n                  padding={2}\n                />\n              </Tooltip>\n            </Box>\n          }\n          onChange={onPathChange}\n          origin={previewLocationOrigin}\n          suffix={\n            <Box padding={1}>\n              <OpenPreviewButton\n                openPopup={openPopup}\n                previewLocationOrigin={previewLocationOrigin}\n                previewLocationRoute={previewLocationRoute}\n              />\n            </Box>\n          }\n          value={previewLocationRoute}\n        />\n      </Box>\n\n      <Flex align=\"center\" flex=\"none\" gap={1} padding={1}>\n        <MenuButton\n          button={\n            <Button\n              fontSize={1}\n              iconRight={ChevronDownIcon}\n              mode=\"bleed\"\n              padding={2}\n              space={2}\n              text={t(\n                PERSPECTIVE_TITLE_KEY[\n                  loadersConnection === 'connected' ? perspective : 'previewDrafts'\n                ],\n              )}\n              loading={loadersConnection === 'reconnecting' && iframe.status !== 'loaded'}\n              disabled={loadersConnection !== 'connected'}\n            />\n          }\n          id=\"perspective-menu\"\n          menu={\n            <Menu style={{maxWidth: 240}}>\n              <MenuItem\n                fontSize={1}\n                onClick={() => setPerspective('previewDrafts')}\n                padding={3}\n                pressed={perspective === 'previewDrafts'}\n                tone={PERSPECTIVE_TONES.previewDrafts}\n              >\n                <Flex align=\"flex-start\" gap={3}>\n                  <Box flex=\"none\">\n                    <Text size={1}>{createElement(PERSPECTIVE_ICONS.previewDrafts)}</Text>\n                  </Box>\n                  <Stack flex={1} space={2}>\n                    <Text size={1} weight=\"medium\">\n                      {t(PERSPECTIVE_TITLE_KEY['previewDrafts'])}\n                    </Text>\n                    <Text muted size={1}>\n                      {t('preview-frame.perspective.previewDrafts.text')}\n                    </Text>\n                  </Stack>\n                  <Box flex=\"none\">\n                    <Text\n                      muted\n                      size={1}\n                      style={{\n                        opacity: perspective === 'previewDrafts' ? 1 : 0,\n                      }}\n                    >\n                      <CheckmarkIcon />\n                    </Text>\n                  </Box>\n                </Flex>\n              </MenuItem>\n              <MenuItem\n                fontSize={1}\n                onClick={() => setPerspective('published')}\n                padding={3}\n                pressed={perspective === 'published'}\n                tone={PERSPECTIVE_TONES.published}\n              >\n                <Flex align=\"flex-start\" gap={3}>\n                  <Box flex=\"none\">\n                    <Text size={1}>{createElement(PERSPECTIVE_ICONS.published)}</Text>\n                  </Box>\n                  <Stack flex={1} space={2}>\n                    <Text size={1} weight=\"medium\">\n                      {t(PERSPECTIVE_TITLE_KEY['published'])}\n                    </Text>\n                    <Text muted size={1}>\n                      {t('preview-frame.perspective.published.text')}\n                    </Text>\n                  </Stack>\n                  <Box flex=\"none\">\n                    <Text\n                      muted\n                      size={1}\n                      style={{\n                        opacity: perspective === 'published' ? 1 : 0,\n                      }}\n                    >\n                      <CheckmarkIcon />\n                    </Text>\n                  </Box>\n                </Flex>\n              </MenuItem>\n            </Menu>\n          }\n          popover={{\n            animate: true,\n            constrainSize: true,\n            placement: 'bottom',\n            portal: true,\n          }}\n        />\n      </Flex>\n\n      <Flex align=\"center\" flex=\"none\" gap={1}>\n        <Tooltip\n          animate\n          content={\n            <Text size={1}>\n              {t('preview-frame.viewport-button.tooltip', {\n                context: viewport === 'desktop' ? 'narrow' : 'full',\n              })}\n            </Text>\n          }\n          fallbackPlacements={['bottom-start']}\n          padding={2}\n          placement=\"bottom\"\n          portal\n        >\n          <Button\n            aria-label={t('preview-frame.viewport-button.aria-label')}\n            fontSize={1}\n            icon={viewport === 'desktop' ? MobileDeviceIcon : DesktopIcon}\n            mode=\"bleed\"\n            onClick={toggleViewportSize}\n            padding={2}\n          />\n        </Tooltip>\n      </Flex>\n\n      {canSharePreviewAccess && (\n        <Flex align=\"center\" flex=\"none\" gap={1} paddingX={1}>\n          <SharePreviewMenu\n            canToggleSharePreviewAccess={canToggleSharePreviewAccess}\n            canUseSharedPreviewAccess={canUseSharedPreviewAccess}\n            previewLocationRoute={previewLocationRoute}\n            initialUrl={initialUrl}\n            perspective={perspective}\n          />\n        </Flex>\n      )}\n    </>\n  )\n}\n\nconst PreviewHeader: FunctionComponent<\n  Omit<PreviewHeaderProps, 'renderDefault'> & {options?: HeaderOptions}\n> = (props) => {\n  const renderDefault = useCallback((props: Omit<PreviewHeaderProps, 'renderDefault'>) => {\n    return createElement(PreviewHeaderDefault, props)\n  }, [])\n\n  const header = props.options?.component\n    ? createElement(props.options.component, {...props, renderDefault})\n    : renderDefault(props)\n\n  return (\n    <Card flex=\"none\" padding={2} borderBottom style={{position: 'relative'}}>\n      <Flex align=\"center\" style={{minHeight: 0}}>\n        {header}\n      </Flex>\n    </Card>\n  )\n}\n\n/** @internal */\nexport function usePresentationPreviewHeader(\n  props: Omit<PreviewHeaderProps, 'renderDefault'> & {options?: HeaderOptions},\n): () => ReactNode {\n  const Component = useCallback(() => {\n    return <PreviewHeader {...props} />\n  }, [props])\n\n  return Component\n}\n","import {\n  Button,\n  Card,\n  Code,\n  Flex,\n  Label,\n  Spinner,\n  Stack,\n  Text,\n  TooltipDelayGroupProvider,\n  usePrefersReducedMotion,\n} from '@sanity/ui'\nimport {AnimatePresence, motion, MotionConfig} from 'framer-motion'\nimport {\n  forwardRef,\n  memo,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n  useSyncExternalStore,\n} from 'react'\nimport {flushSync} from 'react-dom'\nimport {useTranslation} from 'sanity'\nimport {ErrorCard} from '../components/ErrorCard'\nimport {MAX_TIME_TO_OVERLAYS_CONNECTION} from '../constants'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {\n  ACTION_IFRAME_LOADED,\n  ACTION_IFRAME_RELOAD,\n  type DispatchPresentationAction,\n  type PresentationState,\n} from '../reducers/presentationReducer'\nimport type {\n  ConnectionStatus,\n  HeaderOptions,\n  PresentationPerspective,\n  PresentationViewport,\n} from '../types'\nimport {usePresentationTool} from '../usePresentationTool'\nimport {IFrame} from './IFrame'\nimport {usePresentationPreviewHeader} from './PreviewHeader'\n\nconst MotionFlex = motion.create(Flex)\n\nexport interface PreviewProps extends Pick<PresentationState, 'iframe' | 'visualEditing'> {\n  canSharePreviewAccess: boolean\n  canToggleSharePreviewAccess: boolean\n  canUseSharedPreviewAccess: boolean\n  dispatch: DispatchPresentationAction\n  header?: HeaderOptions\n  initialUrl: URL\n  loadersConnection: ConnectionStatus\n  navigatorEnabled: boolean\n  onPathChange: (nextPath: string) => void\n  onRefresh: (fallback: () => void) => void\n  openPopup: (url: string) => void\n  overlaysConnection: ConnectionStatus\n  perspective: PresentationPerspective\n  previewUrl?: string\n  setPerspective: (perspective: 'previewDrafts' | 'published') => void\n  setViewport: (mode: 'desktop' | 'mobile') => void\n  targetOrigin: string\n  toggleNavigator?: () => void\n  toggleOverlay: () => void\n  viewport: PresentationViewport\n}\n\nexport const Preview = memo(\n  forwardRef<HTMLIFrameElement, PreviewProps>(function PreviewComponent(props, forwardedRef) {\n    const {dispatch, iframe, header, initialUrl, loadersConnection, overlaysConnection, viewport} =\n      props\n\n    const {t} = useTranslation(presentationLocaleNamespace)\n    const {devMode} = usePresentationTool()\n    const prefersReducedMotion = usePrefersReducedMotion()\n    const ref = useRef<HTMLIFrameElement | null>(null)\n\n    const PreviewHeader = usePresentationPreviewHeader({\n      ...props,\n      iframeRef: ref,\n      options: header,\n    })\n\n    // Forward the iframe ref to the parent component\n    useImperativeHandle<HTMLIFrameElement | null, HTMLIFrameElement | null>(\n      forwardedRef,\n      () => ref.current,\n    )\n\n    const loading = iframe.status === 'loading' || iframe.status === 'reloading'\n    const [timedOut, setTimedOut] = useState(false)\n    const refreshing = iframe.status === 'refreshing'\n    const [somethingIsWrong, setSomethingIsWrong] = useState(false)\n    const iframeIsBusy = loading || refreshing || overlaysConnection === 'connecting'\n\n    const handleRetry = useCallback(() => {\n      if (!ref.current) {\n        return\n      }\n\n      ref.current.src = initialUrl.toString()\n\n      dispatch({type: ACTION_IFRAME_RELOAD})\n    }, [dispatch, initialUrl])\n    const handleContinueAnyway = useCallback(() => {\n      setContinueAnyway(true)\n    }, [])\n\n    const [continueAnyway, setContinueAnyway] = useState(false)\n    const [showOverlaysConnectionStatus, setShowOverlaysConnectionState] = useState(false)\n    useEffect(() => {\n      if (loading || refreshing) {\n        return\n      }\n\n      if (overlaysConnection === 'connecting' || overlaysConnection === 'reconnecting') {\n        const timeout = setTimeout(() => {\n          setShowOverlaysConnectionState(true)\n        }, 5_000)\n        return () => clearTimeout(timeout)\n      }\n      return\n    }, [overlaysConnection, loading, refreshing])\n\n    useEffect(() => {\n      if (loading || refreshing || !showOverlaysConnectionStatus) {\n        return\n      }\n      if (overlaysConnection === 'connected') {\n        setSomethingIsWrong(false)\n        setShowOverlaysConnectionState(false)\n        setTimedOut(false)\n        setContinueAnyway(false)\n      }\n      if (overlaysConnection === 'connecting') {\n        const timeout = setTimeout(() => {\n          setTimedOut(true)\n          // eslint-disable-next-line no-console\n          console.error(\n            `Unable to connect to visual editing. Make sure you've setup '@sanity/visual-editing' correctly`,\n          )\n        }, MAX_TIME_TO_OVERLAYS_CONNECTION)\n        return () => clearTimeout(timeout)\n      }\n      if (overlaysConnection === 'reconnecting') {\n        const timeout = setTimeout(() => {\n          setTimedOut(true)\n          setSomethingIsWrong(true)\n        }, MAX_TIME_TO_OVERLAYS_CONNECTION)\n        return () => clearTimeout(timeout)\n      }\n      return\n    }, [loading, overlaysConnection, refreshing, showOverlaysConnectionStatus])\n\n    const onIFrameLoad = useCallback(() => {\n      dispatch({type: ACTION_IFRAME_LOADED})\n    }, [dispatch])\n\n    /**\n     * Ensure that clicking outside of menus and dialogs will close as focus shifts to the iframe\n     */\n    useEffect(() => {\n      if (!ref.current) {\n        return\n      }\n      const instance = ref.current\n      function handleBlur() {\n        if (instance !== document.activeElement) {\n          return\n        }\n\n        instance.dispatchEvent(new MouseEvent('mousedown', {bubbles: true, cancelable: true}))\n      }\n      window.addEventListener('blur', handleBlur)\n      return () => {\n        window.removeEventListener('blur', handleBlur)\n      }\n    }, [])\n\n    const preventIframeInteraction = useMemo(() => {\n      return (\n        (loading || (overlaysConnection === 'connecting' && iframe.status !== 'refreshing')) &&\n        !continueAnyway\n      )\n    }, [continueAnyway, iframe.status, loading, overlaysConnection])\n\n    const canUseViewTransition = useSyncExternalStore(\n      useCallback(() => () => {}, []),\n      () => CSS.supports(`(view-transition-name: test)`),\n    )\n    const iframeAnimations = useMemo(() => {\n      return [\n        preventIframeInteraction ? 'background' : 'active',\n        loading ? 'reloading' : 'idle',\n        // If CSS View Transitions are supported, then transition iframe viewport dimensions with that instead of Motion\n        canUseViewTransition ? '' : viewport,\n        showOverlaysConnectionStatus && !continueAnyway ? 'timedOut' : '',\n      ]\n    }, [\n      canUseViewTransition,\n      continueAnyway,\n      loading,\n      preventIframeInteraction,\n      showOverlaysConnectionStatus,\n      viewport,\n    ])\n\n    const [currentViewport, setCurrentViewport] = useState(viewport)\n    const [iframeStyle, setIframeStyle] = useState(iframeVariants[viewport])\n    useEffect(() => {\n      if (canUseViewTransition && viewport !== currentViewport) {\n        const update = () => {\n          setCurrentViewport(viewport)\n          setIframeStyle(iframeVariants[viewport])\n        }\n        if (\n          !prefersReducedMotion &&\n          'startViewTransition' in document &&\n          typeof document.startViewTransition === 'function'\n        ) {\n          document.startViewTransition(() => flushSync(() => update()))\n        } else {\n          update()\n        }\n      }\n    }, [canUseViewTransition, prefersReducedMotion, currentViewport, viewport])\n\n    return (\n      <MotionConfig transition={prefersReducedMotion ? {duration: 0} : undefined}>\n        <TooltipDelayGroupProvider delay={1000}>\n          <PreviewHeader />\n\n          {/* @TODO: Move this to <PreviewFrame /> */}\n          <Card flex={1} tone=\"transparent\">\n            <Flex\n              align=\"center\"\n              height=\"fill\"\n              justify=\"center\"\n              padding={(canUseViewTransition ? currentViewport : viewport) === 'desktop' ? 0 : 2}\n              sizing=\"border\"\n              style={{\n                position: 'relative',\n                cursor: iframeIsBusy ? 'wait' : undefined,\n              }}\n            >\n              <AnimatePresence>\n                {!somethingIsWrong &&\n                !loading &&\n                !refreshing &&\n                // viewport, // using CSS View Transitions instead of framer motion to drive this\n                showOverlaysConnectionStatus &&\n                !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={spinnerVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      inset: '0',\n                      position: 'absolute',\n                      backdropFilter: timedOut\n                        ? 'blur(16px) saturate(0.5) grayscale(0.5)'\n                        : 'blur(2px)',\n                      ['transition' as string]: 'backdrop-filter 0.2s ease-in-out',\n                      // @TODO Because of Safari we have to do this\n                      WebkitBackdropFilter: timedOut\n                        ? 'blur(16px) saturate(0.5) grayscale(0.5)'\n                        : 'blur(2px)',\n                      WebkitTransition: '-webkit-backdrop-filter 0.2s ease-in-out',\n                      zIndex: 1,\n                    }}\n                  >\n                    <Flex\n                      style={{...sizes[viewport]}}\n                      justify=\"center\"\n                      align=\"center\"\n                      direction=\"column\"\n                      gap={4}\n                    >\n                      {timedOut && (\n                        <Button\n                          disabled\n                          fontSize={1}\n                          mode=\"ghost\"\n                          text={t('preview-frame.continue-button.text')}\n                          style={{opacity: 0}}\n                        />\n                      )}\n                      <Card\n                        radius={2}\n                        tone={timedOut ? 'caution' : 'inherit'}\n                        padding={4}\n                        shadow={1}\n                      >\n                        <Flex justify=\"center\" align=\"center\" direction=\"column\" gap={4}>\n                          <Spinner muted />\n                          <Text muted size={1}>\n                            {timedOut\n                              ? t('preview-frame.status', {context: 'timeout'})\n                              : t('preview-frame.status', {context: 'connecting'})}\n                          </Text>\n                        </Flex>\n                      </Card>\n                      {timedOut && (\n                        <Button\n                          fontSize={1}\n                          // mode=\"ghost\"\n                          tone=\"critical\"\n                          onClick={handleContinueAnyway}\n                          text={t('preview-frame.continue-button.text')}\n                        />\n                      )}\n                    </Flex>\n                  </MotionFlex>\n                ) : (loading ||\n                    (overlaysConnection === 'connecting' && iframe.status !== 'refreshing')) &&\n                  !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={spinnerVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      inset: '0',\n                      position: 'absolute',\n                      // boxShadow: '0 0 0 1px var(--card-shadow-outline-color)',\n                    }}\n                  >\n                    <Flex\n                      style={{...sizes[viewport]}}\n                      justify=\"center\"\n                      align=\"center\"\n                      direction=\"column\"\n                      gap={4}\n                    >\n                      <Spinner muted />\n                      <Text muted size={1}>\n                        {t('preview-frame.status', {context: 'loading'})}\n                      </Text>\n                    </Flex>\n                  </MotionFlex>\n                ) : somethingIsWrong && !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={errorVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      background: 'var(--card-bg-color)',\n                      inset: '0',\n                      position: 'absolute',\n                    }}\n                  >\n                    <ErrorCard\n                      flex={1}\n                      message={t('preview-frame.connection.error.text')}\n                      onRetry={handleRetry}\n                      onContinueAnyway={handleContinueAnyway}\n                    >\n                      {devMode && (\n                        <>\n                          {overlaysConnection !== 'connected' && (\n                            <Card padding={3} radius={2} tone=\"critical\">\n                              <Stack space={3}>\n                                <Label muted size={0}>\n                                  {t('preview-frame.overlay.connection-status.label')}\n                                </Label>\n                                <Code size={1}>\n                                  {t('channel.status', {context: overlaysConnection})}\n                                </Code>\n                              </Stack>\n                            </Card>\n                          )}\n\n                          {loadersConnection !== 'connected' && (\n                            <Card padding={3} radius={2} tone=\"critical\">\n                              <Stack space={3}>\n                                <Label muted size={0}>\n                                  {t('preview-frame.loader.connection-status.label')}\n                                </Label>\n                                <Code size={1}>\n                                  {t('channel.status', {context: loadersConnection})}\n                                </Code>\n                              </Stack>\n                            </Card>\n                          )}\n                        </>\n                      )}\n                    </ErrorCard>\n                  </MotionFlex>\n                ) : null}\n              </AnimatePresence>\n              <IFrame\n                animate={iframeAnimations}\n                initial={['background']}\n                onLoad={onIFrameLoad}\n                preventClick={preventIframeInteraction}\n                ref={ref}\n                src={initialUrl.toString()}\n                style={iframeStyle}\n                variants={iframeVariants}\n              />\n            </Flex>\n          </Card>\n        </TooltipDelayGroupProvider>\n      </MotionConfig>\n    )\n  }),\n)\nPreview.displayName = 'Memo(ForwardRef(Preview))'\n\nconst sizes = {\n  desktop: {\n    width: '100%',\n    height: '100%',\n  },\n  mobile: {\n    width: 375,\n    height: 650,\n  },\n}\n\nconst spinnerVariants = {\n  initial: {opacity: 1},\n  animate: {opacity: [0, 0, 1]},\n  exit: {opacity: [1, 0, 0]},\n}\n\nconst errorVariants = {\n  initial: {opacity: 1},\n  animate: {opacity: [0, 0, 1]},\n  exit: {opacity: [1, 0, 0]},\n}\n\nconst iframeVariants = {\n  desktop: {\n    ...sizes.desktop,\n    boxShadow: '0 0 0 0px var(--card-border-color)',\n  },\n  mobile: {\n    ...sizes.mobile,\n    boxShadow: '0 0 0 1px var(--card-border-color)',\n  },\n  background: {\n    opacity: 0,\n    scale: 1,\n  },\n  idle: {\n    scale: 1,\n  },\n  reloading: {\n    scale: [1, 1, 1, 0.98],\n  },\n  active: {\n    opacity: [0, 0, 1],\n    scale: 1,\n  },\n  timedOut: {\n    opacity: [0, 0, 1],\n  },\n}\n","import {useEffect, useRef} from 'react'\nimport {useEffectEvent} from 'use-effect-event'\n\n/**\n * Similar to `useEffect`, but only execute the callback on value change.\n * @param value - The value to watch for changes.\n * @param callback - The callback to execute when the value changes.\n * @param initialValue - An optional initial value to compare against.\n * @param comparator - An optional comparator function for determining changes, useful if the value is non-primitive. Should return true if the callback should be executed.\n * @internal\n */\nexport function useEffectOnChange<T>(\n  value: T,\n  _callback: (value: T, prevValue: T | undefined) => void | (() => void),\n  initialValue?: T,\n  comparator?: (a: T, b?: T) => boolean | undefined,\n): void {\n  const previousValueRef = useRef<T | undefined>(initialValue)\n  const callback = useEffectEvent(_callback)\n\n  useEffect(() => {\n    const prev = previousValueRef.current\n    previousValueRef.current = value\n    if (comparator ? comparator(value, prev) : value !== prev) {\n      return callback(value, prev)\n    }\n  }, [callback, comparator, value])\n}\n","import {type FunctionComponent} from 'react'\nimport {useEditState} from './internals'\nimport type {PresentationNavigate} from './types'\nimport {useEffectOnChange} from './util/useEffectOnChange'\n\ninterface RevisionSwitcherProps {\n  documentId: string\n  documentRevision: string | undefined\n  documentType: string\n  navigate: PresentationNavigate\n  perspective: 'previewDrafts' | 'published'\n}\n\n/**\n * Renderless component to handle displaying the correct revision when the\n * perspective is switched. When the perspective changes to 'published', the\n * `rev` parameter correpsonding to the published document is resolved from the\n * published edit state. When the perspective changes to 'previewDrafts', the\n * `rev` parameter is removed, as the latest draft should be displayed.\n * @internal\n */\nexport const RevisionSwitcher: FunctionComponent<RevisionSwitcherProps> = function (props) {\n  const {documentId, documentType, navigate, perspective, documentRevision} = props\n\n  const editState = useEditState(documentId, documentType)\n\n  useEffectOnChange(perspective, (value) => {\n    let rev: string | undefined = undefined\n    if (value === 'published' && editState.published) {\n      const {_updatedAt, _rev} = editState.published\n      rev = `${_updatedAt}/${_rev}`\n    }\n    if (documentRevision !== rev) {\n      navigate({}, {rev}, true)\n    }\n  })\n\n  return null\n}\n","/** @internal */\nexport function defineWarnOnce() {\n  let warned = false\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return (...args: any[]): void => {\n    if (!warned) {\n      // eslint-disable-next-line no-console\n      console.warn(...args)\n      warned = true\n    }\n  }\n}\n","import type {ClientPerspective} from '@sanity/client'\nimport isEqual from 'fast-deep-equal'\nimport {useCallback, useMemo, useRef, useState, type MutableRefObject} from 'react'\nimport type {FrameState, PresentationPerspective} from './types'\nimport {defineWarnOnce} from './util/warnOnce'\n\nexport type DocumentOnPage = {\n  _id: string\n  _type: string\n}\n\ntype DocumentCache = Record<string, DocumentOnPage>\ntype KeyedDocumentCache = Record<string, DocumentCache>\n\nconst warnOnceAboutCrossDatasetReference = defineWarnOnce()\n\nexport function useDocumentsOnPage(\n  perspective: PresentationPerspective,\n  frameStateRef: MutableRefObject<FrameState>,\n): [\n  DocumentOnPage[],\n  (key: string, perspective: PresentationPerspective, state: DocumentOnPage[]) => void,\n] {\n  if (perspective !== 'published' && perspective !== 'previewDrafts') {\n    throw new Error(`Invalid perspective: ${perspective}`)\n  }\n\n  const [published, setPublished] = useState<KeyedDocumentCache>({})\n  const [previewDrafts, setPreviewDrafts] = useState<KeyedDocumentCache>({})\n\n  // Used to compare the frame url with its value when the cache was last updated\n  // If the url has changed, the entire cache is replaced\n  const urlRef = useRef<string | undefined>('')\n\n  const setDocumentsOnPage = useCallback(\n    (key: string, perspective: ClientPerspective, sourceDocuments: DocumentOnPage[] = []) => {\n      const documents = sourceDocuments.filter((sourceDocument) => {\n        if ('_projectId' in sourceDocument && sourceDocument._projectId) {\n          // eslint-disable-next-line no-warning-comments\n          // @TODO Handle cross dataset references\n\n          warnOnceAboutCrossDatasetReference(\n            'Cross dataset references are not supported yet, ignoring source document',\n            sourceDocument,\n          )\n          return false\n        }\n        return sourceDocument\n      })\n\n      const setCache = perspective === 'published' ? setPublished : setPreviewDrafts\n\n      setCache((cache) => {\n        // Create the `next` documents, dedupe by `_id`\n        const next: Record<string, DocumentOnPage> = {}\n        for (const document of documents) {\n          next[document._id] = document\n        }\n\n        // If the frame url has changed, replace the entire cache with the next documents\n        if (urlRef.current !== frameStateRef.current.url) {\n          urlRef.current = frameStateRef.current.url\n          return {[key]: next}\n        }\n\n        // If the keyed cache has changed, return the entire cache and replace the keyed part\n        const prev = cache[key]\n        if (!isEqual(prev, next)) {\n          return {...cache, [key]: next}\n        }\n\n        // Otherwise return the entire cache as is\n        return cache\n      })\n    },\n    [frameStateRef],\n  )\n\n  const documentsOnPage = useMemo(() => {\n    const keyedCache = perspective === 'published' ? published : previewDrafts\n    const uniqueDocuments = Object.values(keyedCache).reduce((acc, cache) => {\n      Object.values(cache).forEach((doc) => {\n        acc[doc._id] = doc\n      })\n      return acc\n    }, {})\n\n    return Object.values(uniqueDocuments)\n  }, [perspective, previewDrafts, published])\n\n  return [documentsOnPage, setDocumentsOnPage]\n}\n","import type {ResponseQueryOptions} from '@sanity/client'\nimport {match, type Path} from 'path-to-regexp'\nimport {useEffect, useRef, useState} from 'react'\nimport {useClient} from 'sanity'\nimport {useRouter, type RouterState} from 'sanity/router'\nimport {useEffectEvent} from 'use-effect-event'\nimport {API_VERSION} from './constants'\nimport type {\n  DocumentResolver,\n  DocumentResolverContext,\n  MainDocument,\n  MainDocumentState,\n  PresentationNavigate,\n  PreviewUrlOption,\n} from './types'\n\n// Helper function to \"unwrap\" a result when it is either explicitly provided or\n// returned as the result of a passed function\nfunction fnOrObj<T, U>(arg: T | ((ctx: U) => T), context: U): T {\n  return arg instanceof Function ? arg(context) : arg\n}\n\nfunction getQueryFromResult(\n  resolver: DocumentResolver,\n  context: DocumentResolverContext,\n): string | undefined {\n  if (resolver.resolve) {\n    const filter = resolver.resolve(context)?.filter\n    return filter\n      ? `// groq\n*[${filter}][0]{_id, _type}`\n      : undefined\n  }\n\n  if ('type' in resolver) {\n    return `// groq\n*[_type == \"${resolver.type}\"][0]{_id, _type}`\n  }\n\n  return `// groq\n*[${fnOrObj(resolver.filter, context)}][0]{_id, _type}`\n}\n\nfunction getParamsFromResult(\n  resolver: DocumentResolver,\n  context: DocumentResolverContext,\n): Record<string, string> {\n  if (resolver.resolve) {\n    return resolver.resolve(context)?.params ?? context.params\n  }\n\n  if ('type' in resolver) {\n    return {}\n  }\n\n  return fnOrObj(resolver.params, context) ?? context.params\n}\n\nexport function getRouteContext(route: Path, url: URL): DocumentResolverContext | undefined {\n  const routes = Array.isArray(route) ? route : [route]\n\n  for (route of routes) {\n    let origin: DocumentResolverContext['origin'] = undefined\n    let path = route\n\n    // Handle absolute URLs\n    if (typeof route === 'string') {\n      try {\n        const absolute = new URL(route)\n        origin = absolute.origin\n        path = absolute.pathname\n      } catch {\n        // Ignore, as we assume a relative path\n      }\n    }\n\n    // If an origin has been explicitly provided, check that it matches\n    if (origin && url.origin !== origin) continue\n\n    try {\n      const matcher = match<Record<string, string>>(path, {decode: decodeURIComponent})\n      const result = matcher(url.pathname)\n      if (result) {\n        const {params, path} = result\n        return {origin, params, path}\n      }\n    } catch (e) {\n      throw new Error(`\"${route}\" is not a valid route pattern`)\n    }\n  }\n  return undefined\n}\n\nexport function useMainDocument(props: {\n  navigate?: PresentationNavigate\n  navigationHistory: RouterState[]\n  path?: string\n  previewUrl?: PreviewUrlOption\n  resolvers?: DocumentResolver[]\n}): MainDocumentState | undefined {\n  const {navigate, navigationHistory, path, previewUrl, resolvers = []} = props\n  const {state: routerState} = useRouter()\n  const client = useClient({apiVersion: API_VERSION})\n  const relativeUrl =\n    path || routerState._searchParams?.find(([key]) => key === 'preview')?.[1] || ''\n\n  const [mainDocumentState, setMainDocumentState] = useState<MainDocumentState | undefined>(\n    undefined,\n  )\n  const mainDocumentIdRef = useRef<string | undefined>(undefined)\n\n  const handleResponse = useEffectEvent((doc: MainDocument | undefined, url: URL) => {\n    if (!doc || mainDocumentIdRef.current !== doc._id) {\n      setMainDocumentState({\n        document: doc,\n        path: url.pathname,\n      })\n      mainDocumentIdRef.current = doc?._id\n\n      // We only want to force a navigation to the main document if\n      // the path changed but the document ID did not. An explicit\n      // document navigation should take precedence over displaying\n      // the main document. We determine if an explicit document\n      // navigation has occured by comparing the IDs of the last two\n      // resultant navigation states.\n      if (navigationHistory.at(-1)?.['id'] === navigationHistory.at(-2)?.['id']) {\n        navigate?.({\n          id: doc?._id,\n          type: doc?._type,\n        })\n      }\n    }\n  })\n\n  useEffect(() => {\n    const base =\n      typeof previewUrl === 'string'\n        ? previewUrl\n        : typeof previewUrl === 'object'\n          ? previewUrl?.origin || location.origin\n          : location.origin\n    const url = new URL(relativeUrl, base)\n\n    if (resolvers.length) {\n      let result:\n        | {\n            context: DocumentResolverContext\n            resolver: DocumentResolver\n          }\n        | undefined\n\n      for (const resolver of resolvers) {\n        const context = getRouteContext(resolver.route, url)\n        if (context) {\n          result = {context, resolver}\n          break\n        }\n      }\n\n      if (result) {\n        const query = getQueryFromResult(result.resolver, result.context)\n        const params = getParamsFromResult(result.resolver, result.context)\n\n        if (query) {\n          const controller = new AbortController()\n          const options: ResponseQueryOptions = {\n            perspective: 'previewDrafts',\n            signal: controller.signal,\n          }\n\n          client\n            .fetch<MainDocument | undefined>(query, params, options)\n            .then((doc) => handleResponse(doc, url))\n            .catch((e) => {\n              if (e instanceof Error && e.name === 'AbortError') return\n              setMainDocumentState({document: undefined, path: url.pathname})\n              mainDocumentIdRef.current = undefined\n            })\n          return () => {\n            controller.abort()\n          }\n        }\n      }\n    }\n    setMainDocumentState(undefined)\n    mainDocumentIdRef.current = undefined\n    return undefined\n  }, [client, handleResponse, previewUrl, relativeUrl, resolvers])\n\n  return mainDocumentState\n}\n","import {urlStringToPath} from '@repo/visual-editing-helpers'\nimport {studioPath} from '@sanity/client/csm'\nimport type {PresentationStateParams} from '../types'\n\nexport function parseId(rawId: string | undefined): string | undefined {\n  if (rawId === undefined) {\n    return undefined\n  }\n\n  const segments = decodeURIComponent(rawId)?.split('.')\n\n  if (segments[0] === 'drafts') {\n    segments.shift()\n  }\n\n  return segments.join('.')\n}\n\nexport function parsePath(rawPath: string | undefined): string | undefined {\n  if (rawPath === undefined) {\n    return undefined\n  }\n\n  return studioPath.toString(urlStringToPath(decodeURIComponent(rawPath)))\n}\n\nexport function parseRouterState(state: PresentationStateParams): PresentationStateParams {\n  return {\n    id: parseId(state.id),\n    path: parsePath(state.path),\n    type: state.type,\n  }\n}\n","import {useCallback, useEffect, useMemo, useRef, useState, type MutableRefObject} from 'react'\nimport type {RouterContextValue, RouterState, SearchParam} from 'sanity/router'\nimport {getPublishedId} from './internals'\nimport {parseRouterState} from './lib/parse'\nimport type {\n  CombinedSearchParams,\n  FrameState,\n  PresentationNavigate,\n  PresentationParams,\n  PresentationSearchParams,\n  PresentationStateParams,\n  StructureDocumentPaneParams,\n} from './types'\n\nfunction pruneObject<T extends RouterState | PresentationParams>(obj: T): T {\n  return Object.fromEntries(\n    Object.entries(obj).filter(\n      ([, value]) => value !== undefined && value !== '' && value !== null,\n    ),\n  ) as T\n}\n\nexport function useParams({\n  initialPreviewUrl,\n  routerNavigate,\n  routerState,\n  routerSearchParams,\n  frameStateRef,\n}: {\n  initialPreviewUrl: URL\n  routerNavigate: RouterContextValue['navigate']\n  routerState: RouterState & PresentationStateParams\n  routerSearchParams: {\n    [k: string]: string\n  }\n  frameStateRef: MutableRefObject<FrameState>\n}): {\n  navigate: PresentationNavigate\n  navigationHistory: RouterState[]\n  params: PresentationParams\n  searchParams: PresentationSearchParams\n  structureParams: StructureDocumentPaneParams\n} {\n  const params = useMemo<PresentationParams>(() => {\n    const {id, path, type} = parseRouterState(routerState)\n\n    return {\n      id,\n      type,\n      path,\n      preview:\n        routerSearchParams['preview'] || `${initialPreviewUrl.pathname}${initialPreviewUrl.search}`,\n      perspective: routerSearchParams['perspective'],\n      viewport: routerSearchParams['viewport'],\n      inspect: routerSearchParams['inspect'],\n      rev: routerSearchParams['rev'],\n      since: routerSearchParams['since'],\n      template: routerSearchParams['template'],\n      templateParams: routerSearchParams['templateParams'],\n      view: routerSearchParams['view'],\n      // assist\n      pathKey: routerSearchParams['pathKey'],\n      instruction: routerSearchParams['instruction'],\n      // comments\n      comment: routerSearchParams['comment'],\n      changesInspectorTab: routerSearchParams['changesInspectorTab'] as 'history' | 'review',\n    }\n  }, [routerState, routerSearchParams, initialPreviewUrl])\n\n  const structureParams = useMemo<StructureDocumentPaneParams>(() => {\n    const pruned = pruneObject({\n      inspect: params.inspect,\n      path: params.path,\n      rev: params.rev,\n      since: params.since,\n      template: params.template,\n      templateParams: params.templateParams,\n      view: params.view,\n      // assist\n      pathKey: params.pathKey,\n      instruction: params.instruction,\n      // comments\n      comment: params.comment,\n      changesInspectorTab: params.changesInspectorTab,\n    })\n    return pruned\n  }, [\n    params.changesInspectorTab,\n    params.comment,\n    params.inspect,\n    params.instruction,\n    params.path,\n    params.pathKey,\n    params.rev,\n    params.since,\n    params.template,\n    params.templateParams,\n    params.view,\n  ])\n\n  const searchParams = useMemo<PresentationSearchParams>(() => {\n    const pruned = pruneObject({\n      perspective: params.perspective,\n      preview: params.preview,\n      viewport: params.viewport,\n    })\n    return pruned\n  }, [params.perspective, params.preview, params.viewport])\n\n  const routerStateRef = useRef(routerState)\n\n  useEffect(() => {\n    routerStateRef.current = routerState\n  }, [routerState])\n\n  const [navigationHistory, setNavigationHistory] = useState<RouterState[]>([routerState])\n\n  const navigate = useCallback<PresentationNavigate>(\n    (nextState, nextSearchState = {}, forceReplace) => {\n      // Force navigation to use published IDs only\n      if (nextState.id) nextState.id = getPublishedId(nextState.id)\n\n      // Extract type, id and path as 'routerState'\n      const {_searchParams: routerSearchParams, ...routerState} = routerStateRef.current\n\n      // Convert array of search params to an object\n      const routerSearchState = (routerSearchParams || []).reduce((acc, [key, value]) => {\n        acc[key as keyof CombinedSearchParams] = value as undefined | 'history' | 'review'\n        return acc\n      }, {} as CombinedSearchParams)\n\n      // Merge routerState and incoming state\n      const state: RouterState = pruneObject({\n        ...routerState,\n        ...nextState,\n      })\n\n      // Merge routerSearchState and incoming searchState\n      const searchState = pruneObject({\n        ...routerSearchState,\n        ...nextSearchState,\n      })\n\n      // If the document has changed, clear the template and templateParams\n      if (routerState.id !== state['id']) {\n        delete searchState.template\n        delete searchState.templateParams\n      }\n\n      state._searchParams = Object.entries(searchState).reduce(\n        (acc, [key, value]) => [...acc, [key, value] as SearchParam],\n        [] as SearchParam[],\n      )\n\n      const replace = forceReplace ?? searchState.preview === frameStateRef.current.url\n\n      setNavigationHistory((prev) => [...prev, state])\n      routerNavigate(state, {replace})\n    },\n    [routerNavigate, frameStateRef],\n  )\n\n  return {\n    navigate,\n    navigationHistory,\n    params,\n    searchParams,\n    structureParams,\n  }\n}\n","import type {Controller} from '@sanity/comlink'\nimport {useCallback, useEffect, useState} from 'react'\nimport {POPUP_CHECK_INTERVAL} from './constants'\n\n/**\n * A hook for managing popup Window contexts\n *\n * This hook handles:\n * - Opening new popup Windows, and adding them as targets to the controller\n * - Tracking existing popup windows, and cleaning up closed popups\n *\n * @param controller - Comlink controller instance that manages communication\n * between Window contexts\n *\n * @returns An object containing:\n * - popups: A Set of currently open popup Window objects\n * - open: Function to open a new popup Window with the specified URL\n *\n */\nexport const usePopups = (\n  controller?: Controller,\n): {\n  popups: Set<Window>\n  open: (url: string) => void\n} => {\n  // State to keep track of open popup windows\n  const [popups, setPopups] = useState<Set<Window>>(() => new Set())\n\n  // Function to open a new popup window\n  const open = useCallback((url: string) => {\n    const source = window.open(url, '_blank')\n    if (source) {\n      setPopups((prev) => new Set(prev).add(source))\n    }\n  }, [])\n\n  // Handles syncing the existing popups with the controller\n  useEffect(() => {\n    const unsubs: Array<() => void> = []\n    if (popups.size && controller) {\n      // loop popups and add targets\n      for (const source of popups) {\n        if (source && 'closed' in source && !source.closed) {\n          unsubs.push(controller.addTarget(source))\n        }\n      }\n    }\n    return () => {\n      unsubs.forEach((unsub) => unsub())\n    }\n  }, [controller, popups])\n\n  // Checks for closed popups and removes them from the tracked Set\n  useEffect(() => {\n    if (popups.size) {\n      const interval = setInterval(() => {\n        const closed = new Set<Window>()\n        for (const source of popups) {\n          if (source && 'closed' in source && source.closed) {\n            closed.add(source)\n          }\n        }\n        if (closed.size) {\n          setPopups((prev) => {\n            const next = new Set(prev)\n            for (const source of closed) {\n              next.delete(source)\n            }\n            return next\n          })\n        }\n      }, POPUP_CHECK_INTERVAL)\n\n      return () => {\n        clearInterval(interval)\n      }\n    }\n\n    return\n  }, [popups])\n\n  return {popups, open}\n}\n","import {createPreviewSecret} from '@sanity/preview-url-secret/create-secret'\nimport {definePreviewUrl} from '@sanity/preview-url-secret/define-preview-url'\nimport {startTransition, useEffect, useMemo, useRef, useState} from 'react'\nimport {useClient, useCurrentUser, type SanityClient} from 'sanity'\nimport {suspend} from 'suspend-react'\nimport {API_VERSION} from './constants'\nimport {useActiveWorkspace} from './internals'\nimport type {PreviewUrlOption} from './types'\n\nexport function usePreviewUrl(\n  previewUrl: PreviewUrlOption,\n  toolName: string,\n  studioPreviewPerspective: 'published' | 'previewDrafts',\n  previewSearchParam: string | null,\n  canCreateUrlPreviewSecrets: boolean,\n): URL {\n  const client = useClient({apiVersion: API_VERSION})\n  const workspace = useActiveWorkspace()\n  const basePath = workspace?.activeWorkspace?.basePath || '/'\n  const workspaceName = workspace?.activeWorkspace?.name || 'default'\n  const deps = useSuspendCacheKeys(toolName, basePath, workspaceName, previewSearchParam)\n  const previewUrlSecret = usePreviewUrlSecret(\n    (canCreateUrlPreviewSecrets && typeof previewUrl === 'object') ||\n      typeof previewUrl === 'function',\n    deps,\n  )\n\n  return suspend(async () => {\n    if (typeof previewUrl === 'string') {\n      const resolvedUrl = new URL(previewUrl, location.origin)\n      let resultUrl = resolvedUrl\n      try {\n        if (previewSearchParam) {\n          const restoredUrl = new URL(previewSearchParam, resolvedUrl)\n          if (restoredUrl.origin === resolvedUrl.origin) {\n            resultUrl = restoredUrl\n          }\n        }\n      } catch {\n        // ignore\n      }\n      // Prevent infinite recursion\n      if (\n        location.origin === resultUrl.origin &&\n        (resultUrl.pathname.startsWith(`${basePath}/`) || resultUrl.pathname === basePath)\n      ) {\n        return resolvedUrl\n      }\n      return resultUrl\n    }\n    const resolvePreviewUrl =\n      typeof previewUrl === 'object' ? definePreviewUrl<SanityClient>(previewUrl) : previewUrl\n    const resolvedUrl = await resolvePreviewUrl({\n      client,\n      previewUrlSecret: previewUrlSecret!,\n      studioPreviewPerspective,\n      previewSearchParam,\n      studioBasePath: basePath,\n    })\n    return new URL(resolvedUrl, location.origin)\n  }, [...deps, previewUrlSecret]) satisfies URL\n}\n\n// https://github.com/pmndrs/suspend-react?tab=readme-ov-file#making-cache-keys-unique\nconst resolveUUID = Symbol()\n\nfunction useSuspendCacheKeys(\n  toolName: string,\n  basePath: string,\n  workspaceName: string,\n  previewSearchParam: string | null,\n) {\n  // Allow busting the cache when the Presentation Tool is reloaded, without causing it to suspend on every render that changes the `preview` parameter\n  const [cachedPreviewSearchParam, setCachedPreviewSearchParam] = useState(\n    () => previewSearchParam || '',\n  )\n  const timeoutRef = useRef(0)\n  useEffect(() => {\n    if (cachedPreviewSearchParam && previewSearchParam) {\n      // Handle resets, like when the Presentation Tool is clicked in the navbar\n      window.clearTimeout(timeoutRef.current)\n      return () => {\n        timeoutRef.current = window.setTimeout(() => {\n          setCachedPreviewSearchParam('')\n        }, 100)\n      }\n    }\n    return\n  }, [cachedPreviewSearchParam, previewSearchParam])\n\n  const currentUser = useCurrentUser()\n  return useMemo(\n    () => [\n      // Cache based on a few specific conditions\n      '@sanity/presentation',\n      basePath,\n      workspaceName,\n      toolName,\n      currentUser?.id,\n      resolveUUID,\n      cachedPreviewSearchParam,\n    ],\n    [basePath, currentUser?.id, toolName, workspaceName, cachedPreviewSearchParam],\n  )\n}\n\nfunction usePreviewUrlSecret(enabled: boolean, deps: (string | symbol | undefined)[]) {\n  const client = useClient({apiVersion: API_VERSION})\n  const currentUser = useCurrentUser()\n  const [secretLastExpiredAt, setSecretLastExpiredAt] = useState<string>('')\n\n  const previewUrlSecret = enabled\n    ? suspend(async () => {\n        return await createPreviewSecret(\n          client,\n          '@sanity/presentation',\n          typeof window === 'undefined' ? '' : location.href,\n          currentUser?.id,\n        )\n      }, [...deps, secretLastExpiredAt])\n    : null\n\n  useEffect(() => {\n    if (!previewUrlSecret) return\n    const timeout = setTimeout(() => {\n      startTransition(() => setSecretLastExpiredAt(previewUrlSecret.expiresAt.toString()))\n    }, previewUrlSecret.expiresAt.getTime() - Date.now())\n    return () => clearTimeout(timeout)\n  }, [previewUrlSecret])\n\n  return previewUrlSecret?.secret || null\n}\n","import type {StatusEvent} from '@sanity/comlink'\nimport {useCallback, useMemo, useState} from 'react'\nimport type {ConnectionStatus} from './types'\n\n/**\n * A hook that manages and returns the connection status of multiple channels\n *\n * @returns {[string, (event: StatusEvent) => void]} - An array containing the\n * current status and a function to update the status based on incoming events\n *\n * The status can be one of the following:\n * - 'connected': If any channel is connected\n * - 'connecting': If the first connection is being established\n * - 'reconnecting': If a reconnection is in progress\n * - 'idle': If no connections have been made yet\n *\n * The function to update the status takes a `StatusEvent` object which includes\n * the channel and the status\n */\nexport function useStatus(): [ConnectionStatus, (event: StatusEvent) => void] {\n  // State to keep track of the status of each channel\n  const [statusMap, setStatusMap] = useState(\n    new Map<string, {status: ConnectionStatus; hasConnected: boolean}>(),\n  )\n\n  // Memoized computation of the overall status based on the status of individual channels\n  const status = useMemo(() => {\n    const values = Array.from(statusMap.values())\n    // If any channel is connected, return the `connected` status\n    if (values.find(({status}) => status === 'connected')) {\n      return 'connected'\n    }\n    // If the initial connection is being established, return `connecting` status\n    const handshaking = values.filter(({status}) => status === 'connecting')\n    if (handshaking.length) {\n      return handshaking.some(({hasConnected}) => !hasConnected) ? 'connecting' : 'reconnecting'\n    }\n    // If nothing has happened yet, return `idle` status\n    return 'idle'\n  }, [statusMap])\n\n  // Callback to update the status map based on the received event\n  const setStatusFromEvent = useCallback((event: StatusEvent) => {\n    setStatusMap((prev) => {\n      const next = new Map(prev)\n      if (event.status === 'disconnected') {\n        // Remove the channel from the map if a disconnect event is received\n        next.delete(event.connection)\n      } else {\n        // Update the status and connection flag for the channel\n        const hasConnected =\n          next.get(event.connection)?.hasConnected || event.status === 'connected'\n        const status = event.status === 'handshaking' ? 'connecting' : event.status\n        next.set(event.connection, {status, hasConnected})\n      }\n      return next\n    })\n  }, [])\n\n  // Return the overall status and the function to update the status\n  return [status, setStatusFromEvent]\n}\n","import {\n  createCompatibilityActors,\n  isAltKey,\n  isHotkey,\n  type PreviewKitNodeMsg,\n  type VisualEditingControllerMsg,\n  type VisualEditingNodeMsg,\n} from '@repo/visual-editing-helpers'\nimport {studioPath} from '@sanity/client/csm'\nimport {\n  createConnectionMachine,\n  createController,\n  type Controller,\n  type Message,\n} from '@sanity/comlink'\nimport {BoundaryElementProvider, Flex} from '@sanity/ui'\nimport {\n  lazy,\n  Suspense,\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n  type ReactElement,\n} from 'react'\nimport {useDataset, useProjectId, type Path, type SanityDocument, type Tool} from 'sanity'\nimport {useRouter, type RouterContextValue} from 'sanity/router'\nimport {styled} from 'styled-components'\nimport {useEffectEvent} from 'use-effect-event'\nimport {\n  COMMENTS_INSPECTOR_NAME,\n  DEFAULT_TOOL_NAME,\n  EDIT_INTENT_MODE,\n  LIVE_DRAFT_EVENTS_ENABLED,\n} from './constants'\nimport {useUnique, useWorkspace, type CommentIntentGetter} from './internals'\nimport {debounce} from './lib/debounce'\nimport {SharedStateProvider} from './overlays/SharedStateProvider'\nimport {Panel} from './panels/Panel'\nimport {Panels} from './panels/Panels'\nimport {PresentationContent} from './PresentationContent'\nimport {PresentationNavigateProvider} from './PresentationNavigateProvider'\nimport {usePresentationNavigator} from './PresentationNavigator'\nimport {PresentationParamsProvider} from './PresentationParamsProvider'\nimport {PresentationProvider} from './PresentationProvider'\nimport {Preview} from './preview/Preview'\nimport {\n  ACTION_IFRAME_LOADED,\n  ACTION_IFRAME_REFRESH,\n  ACTION_VISUAL_EDITING_OVERLAYS_TOGGLE,\n  presentationReducer,\n  presentationReducerInit,\n} from './reducers/presentationReducer'\nimport {RevisionSwitcher} from './RevisionSwitcher'\nimport type {\n  FrameState,\n  PresentationNavigate,\n  PresentationPerspective,\n  PresentationPluginOptions,\n  PresentationStateParams,\n  PresentationViewport,\n  StructureDocumentPaneParams,\n  VisualEditingConnection,\n} from './types'\nimport {useDocumentsOnPage} from './useDocumentsOnPage'\nimport {useMainDocument} from './useMainDocument'\nimport {useParams} from './useParams'\nimport {usePopups} from './usePopups'\nimport {usePreviewUrl} from './usePreviewUrl'\nimport {useStatus} from './useStatus'\n\nconst LoaderQueries = lazy(() => import('./loader/LoaderQueries'))\nconst LiveQueries = lazy(() => import('./loader/LiveQueries'))\nconst PostMessageDocuments = lazy(() => import('./overlays/PostMessageDocuments'))\nconst PostMessageFeatures = lazy(() => import('./features/PostMessageFeatures'))\nconst PostMessageRefreshMutations = lazy(() => import('./editor/PostMessageRefreshMutations'))\nconst PostMessagePerspective = lazy(() => import('./PostMessagePerspective'))\nconst PostMessagePreviewSnapshots = lazy(() => import('./editor/PostMessagePreviewSnapshots'))\nconst PostMessageSchema = lazy(() => import('./overlays/schema/PostMessageSchema'))\nconst PostMessageTelemetry = lazy(() => import('./PostMessageTelemetry'))\n\nconst Container = styled(Flex)`\n  overflow-x: auto;\n`\n\nexport default function PresentationTool(props: {\n  tool: Tool<PresentationPluginOptions>\n  canCreateUrlPreviewSecrets: boolean\n  canToggleSharePreviewAccess: boolean\n  canUseSharedPreviewAccess: boolean\n}): ReactElement {\n  const {canCreateUrlPreviewSecrets, canToggleSharePreviewAccess, canUseSharedPreviewAccess, tool} =\n    props\n  const components = tool.options?.components\n  const _previewUrl = tool.options?.previewUrl\n  const name = tool.name || DEFAULT_TOOL_NAME\n  const {unstable_navigator, unstable_header} = components || {}\n\n  const {navigate: routerNavigate, state: routerState} = useRouter() as RouterContextValue & {\n    state: PresentationStateParams\n  }\n  const routerSearchParams = useUnique(Object.fromEntries(routerState._searchParams || []))\n\n  const initialPreviewUrl = usePreviewUrl(\n    _previewUrl || '/',\n    name,\n    routerSearchParams['perspective'] === 'published' ? 'published' : 'previewDrafts',\n    routerSearchParams['preview'] || null,\n    canCreateUrlPreviewSecrets,\n  )\n  const canSharePreviewAccess = useMemo<boolean>(() => {\n    if (\n      _previewUrl &&\n      typeof _previewUrl === 'object' &&\n      'draftMode' in _previewUrl &&\n      _previewUrl.draftMode\n    ) {\n      // eslint-disable-next-line no-console\n      console.warn('previewUrl.draftMode is deprecated, use previewUrl.previewMode instead')\n      return _previewUrl.draftMode.shareAccess !== false\n    }\n    if (\n      _previewUrl &&\n      typeof _previewUrl === 'object' &&\n      'previewMode' in _previewUrl &&\n      _previewUrl.previewMode\n    ) {\n      return _previewUrl.previewMode.shareAccess !== false\n    }\n    return false\n  }, [_previewUrl])\n\n  const [devMode] = useState(() => {\n    const option = tool.options?.devMode\n\n    if (typeof option === 'function') return option()\n    if (typeof option === 'boolean') return option\n\n    return typeof window !== 'undefined' && window.location.hostname === 'localhost'\n  })\n\n  const targetOrigin = useMemo(() => {\n    return initialPreviewUrl.origin\n  }, [initialPreviewUrl.origin])\n\n  const iframeRef = useRef<HTMLIFrameElement>(null)\n\n  const [controller, setController] = useState<Controller>()\n  const [visualEditingComlink, setVisualEditingComlink] = useState<VisualEditingConnection | null>(\n    null,\n  )\n\n  const frameStateRef = useRef<FrameState>({\n    title: undefined,\n    url: undefined,\n  })\n\n  const {\n    navigate: _navigate,\n    navigationHistory,\n    params,\n    searchParams,\n    structureParams,\n  } = useParams({\n    initialPreviewUrl,\n    routerNavigate,\n    routerState,\n    routerSearchParams,\n    frameStateRef,\n  })\n\n  // Most navigation events should be debounced, so use this unless explicitly needed\n  const navigate = useMemo(() => debounce<PresentationNavigate>(_navigate, 50), [_navigate])\n\n  const [state, dispatch] = useReducer(presentationReducer, {}, presentationReducerInit)\n\n  const perspective = useMemo(\n    () => (params.perspective ? 'published' : 'previewDrafts'),\n    [params.perspective],\n  )\n\n  const viewport = useMemo(() => (params.viewport ? 'mobile' : 'desktop'), [params.viewport])\n\n  const [documentsOnPage, setDocumentsOnPage] = useDocumentsOnPage(perspective, frameStateRef)\n\n  const projectId = useProjectId()\n  const dataset = useDataset()\n\n  const mainDocumentState = useMainDocument({\n    // Prevent flash of content by using immediate navigation\n    navigate: _navigate,\n    navigationHistory,\n    path: params.preview,\n    previewUrl: tool.options?.previewUrl,\n    resolvers: tool.options?.resolve?.mainDocuments,\n  })\n\n  const [overlaysConnection, setOverlaysConnection] = useStatus()\n  const [loadersConnection, setLoadersConnection] = useStatus()\n  const [previewKitConnection, setPreviewKitConnection] = useStatus()\n\n  const {open: handleOpenPopup} = usePopups(controller)\n\n  const isLoading = state.iframe.status === 'loading'\n\n  useEffect(() => {\n    const target = iframeRef.current?.contentWindow\n\n    if (!target || isLoading) return\n\n    const controller = createController({targetOrigin})\n    controller.addTarget(target)\n    setController(controller)\n\n    return () => {\n      controller.destroy()\n      setController(undefined)\n    }\n  }, [targetOrigin, isLoading])\n\n  const handleNavigate = useEffectEvent<typeof navigate>(\n    (nextState, nextSearchState, forceReplace) =>\n      navigate(nextState, nextSearchState, forceReplace),\n  )\n  useEffect(() => {\n    if (!controller) return\n\n    const comlink = controller.createChannel<VisualEditingControllerMsg, VisualEditingNodeMsg>(\n      {\n        name: 'presentation',\n        heartbeat: true,\n        connectTo: 'visual-editing',\n      },\n      createConnectionMachine<VisualEditingControllerMsg, VisualEditingNodeMsg>().provide({\n        actors: createCompatibilityActors<VisualEditingControllerMsg>(),\n      }),\n    )\n\n    comlink.on('visual-editing/focus', (data) => {\n      if (!('id' in data)) return\n      handleNavigate({\n        type: data.type,\n        id: data.id,\n        path: data.path,\n      })\n    })\n\n    comlink.on('visual-editing/navigate', (data) => {\n      const {title, url} = data\n      if (frameStateRef.current.url !== url) {\n        handleNavigate({}, {preview: url})\n      }\n      frameStateRef.current = {title, url}\n    })\n\n    comlink.on('visual-editing/meta', (data) => {\n      frameStateRef.current.title = data.title\n    })\n\n    comlink.on('visual-editing/toggle', (data) => {\n      dispatch({\n        type: ACTION_VISUAL_EDITING_OVERLAYS_TOGGLE,\n        enabled: data.enabled,\n      })\n    })\n\n    comlink.on('visual-editing/documents', (data) => {\n      setDocumentsOnPage(\n        'visual-editing',\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        data.perspective as unknown as any,\n        data.documents,\n      )\n    })\n\n    // @todo This won't work for multiple window contexts?\n    comlink.on('visual-editing/refreshing', (data) => {\n      if (data.source === 'manual') {\n        clearTimeout(refreshRef.current)\n      } else if (data.source === 'mutation') {\n        dispatch({type: ACTION_IFRAME_REFRESH})\n      }\n    })\n\n    comlink.on('visual-editing/refreshed', () => {\n      dispatch({type: ACTION_IFRAME_LOADED})\n    })\n\n    comlink.onStatus(setOverlaysConnection)\n\n    const stop = comlink.start()\n    setVisualEditingComlink(comlink)\n\n    return () => {\n      stop()\n      setVisualEditingComlink(null)\n    }\n  }, [controller, handleNavigate, setDocumentsOnPage, setOverlaysConnection, targetOrigin])\n\n  useEffect(() => {\n    if (!controller) return\n    const comlink = controller.createChannel<Message, PreviewKitNodeMsg>(\n      {\n        name: 'presentation',\n        connectTo: 'preview-kit',\n        heartbeat: true,\n      },\n      createConnectionMachine<Message, PreviewKitNodeMsg>().provide({\n        actors: createCompatibilityActors(),\n      }),\n    )\n\n    comlink.onStatus(setPreviewKitConnection)\n\n    comlink.on('preview-kit/documents', (data) => {\n      if (data.projectId === projectId && data.dataset === dataset) {\n        setDocumentsOnPage(\n          'preview-kit',\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          data.perspective as unknown as any,\n          data.documents,\n        )\n      }\n    })\n\n    return comlink.start()\n  }, [controller, dataset, projectId, setDocumentsOnPage, setPreviewKitConnection, targetOrigin])\n\n  const handleFocusPath = useCallback(\n    (nextPath: Path) => {\n      // Don’t need to explicitly set the id here because it was either already set via postMessage or is the same if navigating in the document pane\n      navigate({path: studioPath.toString(nextPath)}, {}, true)\n    },\n    [navigate],\n  )\n\n  const handlePreviewPath = useCallback(\n    (nextPath: string) => {\n      const url = new URL(nextPath, initialPreviewUrl.origin)\n      const preview = url.pathname + url.search\n      if (url.origin === initialPreviewUrl.origin && preview !== params.preview) {\n        navigate({}, {preview})\n      }\n    },\n    [initialPreviewUrl, params, navigate],\n  )\n\n  const handleStructureParams = useCallback(\n    (structureParams: StructureDocumentPaneParams) => {\n      navigate({}, structureParams)\n    },\n    [navigate],\n  )\n\n  // Dispatch a focus or blur message when the id or path change\n  useEffect(() => {\n    if (params.id && params.path) {\n      visualEditingComlink?.post('presentation/focus', {id: params.id, path: params.path})\n    } else {\n      visualEditingComlink?.post('presentation/blur')\n    }\n  }, [params.id, params.path, visualEditingComlink])\n\n  // Dispatch a navigation message when the preview param changes\n  useEffect(() => {\n    if (\n      frameStateRef.current.url &&\n      params.preview &&\n      frameStateRef.current.url !== params.preview\n    ) {\n      frameStateRef.current.url = params.preview\n      if (overlaysConnection !== 'connected' && iframeRef.current) {\n        iframeRef.current.src = `${targetOrigin}${params.preview}`\n      } else {\n        visualEditingComlink?.post('presentation/navigate', {\n          url: params.preview,\n          type: 'replace',\n        })\n      }\n    }\n  }, [overlaysConnection, targetOrigin, params.preview, visualEditingComlink])\n\n  const toggleOverlay = useCallback(\n    () => visualEditingComlink?.post('presentation/toggle-overlay'),\n    [visualEditingComlink],\n  )\n\n  const [displayedDocument, setDisplayedDocument] = useState<\n    Partial<SanityDocument> | null | undefined\n  >(null)\n\n  useEffect(() => {\n    const handleKeyUp = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        toggleOverlay()\n      }\n    }\n    const handleKeydown = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        toggleOverlay()\n      }\n\n      if (isHotkey(['mod', '\\\\'], e)) {\n        toggleOverlay()\n      }\n    }\n    window.addEventListener('keydown', handleKeydown)\n    window.addEventListener('keyup', handleKeyUp)\n    return () => {\n      window.removeEventListener('keydown', handleKeydown)\n      window.removeEventListener('keyup', handleKeyUp)\n    }\n  }, [toggleOverlay])\n\n  const [boundaryElement, setBoundaryElement] = useState<HTMLDivElement | null>(null)\n\n  const [{navigatorEnabled, toggleNavigator}, PresentationNavigator] = usePresentationNavigator({\n    unstable_navigator,\n  })\n\n  // Handle edge case where the `&rev=` parameter gets \"stuck\"\n  const idRef = useRef<string | undefined>(params.id)\n  useEffect(() => {\n    if (params.rev && idRef.current && params.id !== idRef.current) {\n      navigate({}, {rev: undefined})\n    }\n    idRef.current = params.id\n  })\n\n  const refreshRef = useRef<number>()\n  const handleRefresh = useCallback(\n    (fallback: () => void) => {\n      dispatch({type: ACTION_IFRAME_REFRESH})\n      if (visualEditingComlink) {\n        // We only wait 300ms for the iframe to ack the refresh request before running the fallback logic\n        refreshRef.current = window.setTimeout(fallback, 300)\n        visualEditingComlink.post('presentation/refresh', {\n          source: 'manual',\n          livePreviewEnabled:\n            previewKitConnection === 'connected' || loadersConnection === 'connected',\n        })\n        return\n      }\n      fallback()\n    },\n    [loadersConnection, previewKitConnection, visualEditingComlink],\n  )\n\n  const workspace = useWorkspace()\n\n  const getCommentIntent = useCallback<CommentIntentGetter>(\n    ({id, type, path}) => {\n      if (frameStateRef.current.url) {\n        return {\n          title: frameStateRef.current.title || frameStateRef.current.url,\n          name: 'edit',\n          params: {\n            id,\n            path,\n            type,\n            inspect: COMMENTS_INSPECTOR_NAME,\n            workspace: workspace.name,\n            mode: EDIT_INTENT_MODE,\n            preview: params.preview,\n          },\n        }\n      }\n      return undefined\n    },\n    [params.preview, workspace.name],\n  )\n\n  const setViewport = useCallback(\n    (next: PresentationViewport) => {\n      // Omit the viewport URL search param if the next viewport state is the\n      // default: 'desktop'\n      const viewport = next === 'desktop' ? undefined : 'mobile'\n      navigate({}, {viewport}, true)\n    },\n    [navigate],\n  )\n\n  const setPerspective = useCallback(\n    (next: PresentationPerspective) => {\n      // Omit the perspective URL search param if the next perspective state is\n      // the default: 'previewDrafts'\n      const perspective = next === 'previewDrafts' ? undefined : next\n      navigate({}, {perspective})\n    },\n    [navigate],\n  )\n\n  return (\n    <>\n      <PresentationProvider\n        devMode={devMode}\n        name={name}\n        navigate={navigate}\n        params={params}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      >\n        <PresentationNavigateProvider navigate={navigate}>\n          <PresentationParamsProvider params={params}>\n            <SharedStateProvider comlink={visualEditingComlink}>\n              <Container height=\"fill\">\n                <Panels>\n                  <PresentationNavigator />\n                  <Panel\n                    id=\"preview\"\n                    minWidth={325}\n                    defaultSize={navigatorEnabled ? 50 : 75}\n                    order={3}\n                  >\n                    <Flex direction=\"column\" flex={1} height=\"fill\" ref={setBoundaryElement}>\n                      <BoundaryElementProvider element={boundaryElement}>\n                        <Preview\n                          canSharePreviewAccess={canSharePreviewAccess}\n                          canToggleSharePreviewAccess={canToggleSharePreviewAccess}\n                          canUseSharedPreviewAccess={canUseSharedPreviewAccess}\n                          dispatch={dispatch}\n                          header={unstable_header}\n                          iframe={state.iframe}\n                          initialUrl={initialPreviewUrl}\n                          loadersConnection={loadersConnection}\n                          navigatorEnabled={navigatorEnabled}\n                          onPathChange={handlePreviewPath}\n                          onRefresh={handleRefresh}\n                          openPopup={handleOpenPopup}\n                          overlaysConnection={overlaysConnection}\n                          previewUrl={params.preview}\n                          perspective={perspective}\n                          ref={iframeRef}\n                          setPerspective={setPerspective}\n                          setViewport={setViewport}\n                          targetOrigin={targetOrigin}\n                          toggleNavigator={toggleNavigator}\n                          toggleOverlay={toggleOverlay}\n                          viewport={viewport}\n                          visualEditing={state.visualEditing}\n                        />\n                      </BoundaryElementProvider>\n                    </Flex>\n                  </Panel>\n                  <PresentationContent\n                    documentId={params.id}\n                    documentsOnPage={documentsOnPage}\n                    documentType={params.type}\n                    getCommentIntent={getCommentIntent}\n                    mainDocumentState={mainDocumentState}\n                    onFocusPath={handleFocusPath}\n                    onStructureParams={handleStructureParams}\n                    searchParams={searchParams}\n                    setDisplayedDocument={setDisplayedDocument}\n                    structureParams={structureParams}\n                  />\n                </Panels>\n              </Container>\n            </SharedStateProvider>\n          </PresentationParamsProvider>\n        </PresentationNavigateProvider>\n      </PresentationProvider>\n      <Suspense>\n        {controller &&\n          (LIVE_DRAFT_EVENTS_ENABLED ? (\n            <LiveQueries\n              controller={controller}\n              perspective={perspective}\n              liveDocument={displayedDocument}\n              onDocumentsOnPage={setDocumentsOnPage}\n              onLoadersConnection={setLoadersConnection}\n            />\n          ) : (\n            <LoaderQueries\n              controller={controller}\n              perspective={perspective}\n              liveDocument={displayedDocument}\n              onDocumentsOnPage={setDocumentsOnPage}\n              onLoadersConnection={setLoadersConnection}\n              documentsOnPage={documentsOnPage}\n            />\n          ))}\n        {visualEditingComlink && params.id && params.type && (\n          <PostMessageRefreshMutations\n            comlink={visualEditingComlink}\n            id={params.id}\n            type={params.type}\n            loadersConnection={loadersConnection}\n            previewKitConnection={previewKitConnection}\n          />\n        )}\n        {visualEditingComlink && (\n          <PostMessageSchema comlink={visualEditingComlink} perspective={perspective} />\n        )}\n        {visualEditingComlink && documentsOnPage.length > 0 && (\n          <PostMessagePreviewSnapshots\n            comlink={visualEditingComlink}\n            perspective={perspective}\n            refs={documentsOnPage}\n          />\n        )}\n        {visualEditingComlink && <PostMessageDocuments comlink={visualEditingComlink} />}\n        {visualEditingComlink && <PostMessageFeatures comlink={visualEditingComlink} />}\n        {visualEditingComlink && (\n          <PostMessagePerspective comlink={visualEditingComlink} perspective={perspective} />\n        )}\n        {visualEditingComlink && <PostMessageTelemetry comlink={visualEditingComlink} />}\n        {params.id && params.type && (\n          <RevisionSwitcher\n            documentId={params.id}\n            documentRevision={params.rev}\n            documentType={params.type}\n            navigate={navigate}\n            perspective={perspective}\n          />\n        )}\n      </Suspense>\n    </>\n  )\n}\n","import {\n  schemaIdSingleton,\n  schemaType,\n  schemaTypeSingleton,\n} from '@sanity/preview-url-secret/constants'\nimport {useToast} from '@sanity/ui'\nimport {uuid} from '@sanity/uuid'\nimport {useEffect, useState, type ReactElement} from 'react'\nimport {useGrantsStore, useTranslation, type PermissionCheckResult, type Tool} from 'sanity'\nimport {presentationLocaleNamespace} from './i18n'\nimport {PresentationSpinner} from './PresentationSpinner'\nimport PresentationTool from './PresentationTool'\nimport type {PresentationPluginOptions} from './types'\n\nexport default function PresentationToolGrantsCheck(props: {\n  tool: Tool<PresentationPluginOptions>\n}): ReactElement {\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {previewUrl} = props.tool.options ?? {}\n  const {push: pushToast} = useToast()\n  const willGeneratePreviewUrlSecret =\n    typeof previewUrl === 'object' || typeof previewUrl === 'function'\n  const grantsStore = useGrantsStore()\n  const [previewAccessSharingCreatePermission, setCreateAccessSharingPermission] =\n    useState<PermissionCheckResult | null>(null)\n  const [previewAccessSharingUpdatePermission, setUpdateAccessSharingPermission] =\n    useState<PermissionCheckResult | null>(null)\n  const [previewAccessSharingReadPermission, setReadAccessSharingPermission] =\n    useState<PermissionCheckResult | null>(null)\n  const [previewUrlSecretPermission, setPreviewUrlSecretPermission] =\n    useState<PermissionCheckResult | null>(null)\n\n  useEffect(() => {\n    if (!willGeneratePreviewUrlSecret) return undefined\n\n    const previewCreateAccessSharingPermissionSubscription = grantsStore\n      .checkDocumentPermission('create', {_id: schemaIdSingleton, _type: schemaTypeSingleton})\n      .subscribe(setCreateAccessSharingPermission)\n    const previewUpdateAccessSharingPermissionSubscription = grantsStore\n      .checkDocumentPermission('update', {_id: schemaIdSingleton, _type: schemaTypeSingleton})\n      .subscribe(setUpdateAccessSharingPermission)\n    const previewReadAccessSharingPermissionSubscription = grantsStore\n      .checkDocumentPermission('read', {_id: schemaIdSingleton, _type: schemaTypeSingleton})\n      .subscribe(setReadAccessSharingPermission)\n    const previewUrlSecretPermissionSubscription = grantsStore\n      .checkDocumentPermission('create', {_id: `drafts.${uuid()}`, _type: schemaType})\n      .subscribe(setPreviewUrlSecretPermission)\n\n    return () => {\n      previewCreateAccessSharingPermissionSubscription.unsubscribe()\n      previewUpdateAccessSharingPermissionSubscription.unsubscribe()\n      previewReadAccessSharingPermissionSubscription.unsubscribe()\n      previewUrlSecretPermissionSubscription.unsubscribe()\n    }\n  }, [grantsStore, willGeneratePreviewUrlSecret])\n\n  const canCreateUrlPreviewSecrets = previewUrlSecretPermission?.granted\n\n  useEffect(() => {\n    if (!willGeneratePreviewUrlSecret || canCreateUrlPreviewSecrets !== false) return undefined\n    const raf = requestAnimationFrame(() =>\n      pushToast({\n        closable: true,\n        status: 'error',\n        duration: 30_000,\n        title: t('preview-url-secret.missing-grants'),\n      }),\n    )\n    return () => cancelAnimationFrame(raf)\n  }, [canCreateUrlPreviewSecrets, pushToast, t, willGeneratePreviewUrlSecret])\n\n  if (\n    willGeneratePreviewUrlSecret &&\n    (!previewAccessSharingCreatePermission ||\n      typeof previewAccessSharingCreatePermission.granted === 'undefined' ||\n      !previewAccessSharingUpdatePermission ||\n      typeof previewAccessSharingUpdatePermission.granted === 'undefined' ||\n      !previewUrlSecretPermission ||\n      !previewAccessSharingReadPermission ||\n      typeof previewAccessSharingReadPermission.granted === 'undefined' ||\n      typeof previewUrlSecretPermission.granted === 'undefined')\n  ) {\n    return <PresentationSpinner />\n  }\n\n  return (\n    <PresentationTool\n      {...props}\n      canCreateUrlPreviewSecrets={canCreateUrlPreviewSecrets === true}\n      canToggleSharePreviewAccess={\n        previewAccessSharingCreatePermission?.granted === true &&\n        previewAccessSharingUpdatePermission?.granted === true\n      }\n      canUseSharedPreviewAccess={previewAccessSharingReadPermission?.granted === true}\n    />\n  )\n}\n"],"names":["channelsToComlinkMap","MSG_HANDSHAKE_SYN","MSG_HANDSHAKE_SYN_ACK","MSG_HANDSHAKE_ACK","MSG_RESPONSE","MSG_HEARTBEAT","MSG_DISCONNECT","comlinkToChannelsMap","convertToComlinkEvent","event","_a","data","domain","DOMAIN","to","from","channelId","connectionId","type","convertToChannelsMessage","comlinkMessage","_b","rest","__objRest","message","__spreadProps$1","__spreadValues$1","responseTo","id","sendAsChannelsMessage","context","params","sources","targetOrigin","forEach","source","postMessage","createCompatibilityActors","listen","createListenLogic","requestMachine","createRequestMachine","provide","actions","debounce","fn","timeout","timer","args","clearTimeout","setTimeout","apply","SharedStateProvider","props","$","_c","comlink","children","t0","Symbol","for","sharedState","useRef","t1","t2","on","state","current","useEffect","t3","key","value","post","setValue","t4","key_0","removeValue","t5","t6","t7","PanelsContext","createContext","displayName","Root","styled","div","Panel","defaultSize","minWidth","maxWidth","order","undefined","useContext","Error","getPanelStyle","registerElement","unregisterElement","style","useLayoutEffect","itemKey","getStoredItem","JSON","parse","localStorage","getItem","setStoredItem","setItem","stringify","getKeyForPanels","panels","map","panel","join","usePanelsStorage","get","_temp2","set","_temp3","setDebounced","panels_0","widths","stored_0","__spreadProps","__spreadValues","stored","Array","isArray","some","_temp","val","getNextWidth","nextWidth","containerWidth","maxWidthPx","minWidthPx","Math","min","max","getNextWidths","delta","panelBefore","panelAfter","panelsState","initialDragState","prevWidths","initialWidths","nextWidths","pivotPanel","index","findIndex","width","abs","deltaApplied","deltaRemaining","toPrecision","localeCompare","numeric","length","getPanelWidth","getOffset","handleElement","initialOffset","initialHandleElementRect","pointerOffset","clientX","elementOffset","getBoundingClientRect","left","isPanel","element","isResizer","getSortedElements","elements","values","sort","a","b","validateWidths","widthsToValidate","total","reduce","remainingWidth","toFixed","getDefaultWidths","panelsWithoutWidth","remainingWidthTotal","widthsWithNulls","defaultWidth","PanelsWrapper","Panels","panelsEl","Map","setElements","useState","filter","setWidths","activeResizer","setActiveResizer","panelsRef","flexGrow","pointerEvents","id_0","prev","has","next","t8","id_1","prev_0","next_0","delete","t9","window","innerWidth","dragOffset","resizerIndex","resizerRect","startX","dragRef","t10","id_2","elementsArr","el","resizer","resizeElement","acc","el_0","i","acc_0","el_1","i_0","pageX","startDragging","t11","stopDragging","t12","id_3","event_0","preventDefault","stopPropagation","resizer_0","resizeElement_0","offset","rect","prevWidth","i_1","drag","t13","t14","storage","t15","t16","widths_0","storedWidths","validatedStoredWidths","defaultWidths","t17","t18","t19","t20","resizeObserver","ResizeObserver","prevWidths_0","nextWidths_0","prevWidth_0","i_2","observe","disconnect","t21","t22","t23","t24","ErrorCard","onContinueAnyway","onRetry","restProps","t","useTranslation","presentationLocaleNamespace","retryButton","continueAnywayButton","Container","encodeQueryString","parts","Object","entries","resolveQueryStringFromParams","nextParams","allowed","safeNextParams","includes","obj","BackLink","forwardRef","ref","searchParams","_searchParams","ReferenceChildLink","documentId","documentType","parentRefPath","template","PresentationPaneRouterProvider","onStructureParams","structureParams","refs","routerState","resolvePathFromState","useRouter","fromEntries","routerSearchParams","useUnique","path","qs","createPathWithParams","childLinkProps","childId","find","r","_id","getPublishedId","_type","backLinkProps","childLinkProps_0","nextParams_0","inspect","groupIndex","siblingIndex","payload","hasGroupSiblings","groupLength","routerPanesState","ChildLink","ParameterizedLink","closeCurrentAndAfter","handleEditReference","replaceCurrent","_temp4","closeCurrent","_temp5","duplicateCurrent","_temp6","setView","_temp7","setParams","setPayload","_temp8","navigateIntent","_temp9","intentName","intentParams","options_0","console","warn","options","viewId","pane_0","pane","RootLayout","PaneLayout","Flex","WrappedCode","Code","DocumentListPane","mainDocumentState","devMode","usePresentationTool","document","ids","schemaTypeName","title","errorParams","setErrorParams","handleRetry","error","StructureDocumentListPane","r_0","DocumentPane","onFocusPath","templateParams","decodeJsonParams","templateParameters","paneDocumentNode","height","StructureDocumentPane","DocumentPanel","usePreviewState","schemaType","documentPreviewStore","useDocumentPreviewStore","preview","setPreview","subscription","getPreviewStateObservable","subscribe","unsubscribe","ContentEditor","schema","useSchema","props_0","MainDocumentLink","previewState","bb0","draft","published","getPreviewValueWithFallback","byteToHex","push","toString","slice","unsafeStringify","arr","toLowerCase","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","randomUUID","v4","buf","native","rnds","random","usePanelId","uuid","panelId","Resizer","ResizerInner","$disabled","PanelResizer","propId","disabled","isDragging","nativeEvent","onMouseDown","e","onDrag","blur","onDragStop","resetDocumentStyles","bodyStyle","body","documentStyle","documentElement","cursor","userSelect","removeProperty","addEventListener","removeEventListener","PresentationContentWrapper","setDisplayedDocument","getCommentIntent","PresentationContent","documentsOnPage","PresentationNavigateProvider","navigate","_navigate","useLocalState","defaultValue","usePresentationNavigator","unstable_navigator","navigatorProvided","component","_navigatorEnabled","setNavigatorEnabled","navigatorEnabled","toggleNavigator","Component","enabled","NavigatorComponent","navigatorDisabled","Navigator","memo","PresentationParamsProvider","PresentationProvider","name","IFrameElement","motion","create","iframe","IFrameOverlay","Box","IFrame","animate","initial","onLoad","preventClick","src","variants","useId","replace","viewTransitionName","OpenPreviewButton","openPopup","previewLocationOrigin","previewLocationRoute","currentTarget","href","handleOpenPopup","LaunchIcon","PreviewLocationInput","fontSize","onChange","origin","padding","prefix","suffix","basePath","useActiveWorkspace","activeWorkspace","inputRef","sessionValue","setSessionValue","customValidity","setCustomValidity","handleChange","absoluteValue","startsWith","nextValue","handleKeyDown","handleBlur","icon","ResetIcon","zIndex","QRCodeSVG","lazy","QrCodeLogoSize","QrCodeLogoPadding","QrSize","StyledSanityMonogram","SanityMonogram","MotionSpinner","Spinner","MotionText","Text","MotionMonogram","SharePreviewMenu","canToggleSharePreviewAccess","canUseSharedPreviewAccess","initialUrl","perspective","pushToast","useToast","client","useClient","apiVersion","API_VERSION","currentUser","useCurrentUser","loading","setLoading","enabling","setEnabling","disabling","setDisabling","secret","setSecret","busy","url","useMemo","setSecretSearchParams","setError","handleUnableToToggle","useCallback","closable","status","handleDisableSharing","disablePreviewAccessSharing","location","handleEnableSharing","previewUrlSecret","enablePreviewAccessSharing","handleCopyUrl","navigator","clipboard","writeText","controller","AbortController","usedTags","fetchShareSecret","lastLiveEventId","signal","result","syncTags","fetch","fetchSharedAccessQuery","filterResponse","tag","aborted","live","events","abort","tags","finally","ShareIcon","justifyContent","alignItems","gridTemplateColumns","gridTemplateRows","position","aspectRatio","display","opacity","textWrap","textAlign","CopyIcon","constrainSize","placement","portal","PERSPECTIVE_TITLE_KEY","previewDrafts","PERSPECTIVE_TONES","PERSPECTIVE_ICONS","EditIcon","PublishIcon","PreviewHeaderDefault","canSharePreviewAccess","dispatch","iframeRef","loadersConnection","onPathChange","onRefresh","overlaysConnection","previewUrl","setPerspective","setViewport","toggleOverlay","viewport","visualEditing","overlaysEnabled","toggleViewportSize","ACTION_IFRAME_RELOAD","assign","handleRefresh","previewURL","URL","pathname","search","withoutSecretSearchParams","PanelLeftIcon","whiteSpace","marginTop","marginBottom","lineHeight","borderRadius","margin","t25","t26","t27","t28","t29","RefreshIcon","t30","t31","t32","t33","t34","t35","t36","t37","ChevronDownIcon","t38","t39","t40","t41","createElement","t42","t43","t44","t45","t46","t47","t48","t49","t50","t51","t52","t53","t54","t55","t56","t57","t58","t59","t60","t61","t62","t63","t64","t65","t66","t67","t68","t69","t70","t71","t72","t73","t74","t75","MobileDeviceIcon","DesktopIcon","t76","t77","t78","t79","PreviewHeader","renderDefault","header","minHeight","usePresentationPreviewHeader","MotionFlex","Preview","forwardedRef","prefersReducedMotion","usePrefersReducedMotion","timedOut","setTimedOut","refreshing","somethingIsWrong","setSomethingIsWrong","iframeIsBusy","handleContinueAnyway","setContinueAnyway","continueAnyway","showOverlaysConnectionStatus","setShowOverlaysConnectionState","MAX_TIME_TO_OVERLAYS_CONNECTION","onIFrameLoad","ACTION_IFRAME_LOADED","instance","activeElement","dispatchEvent","MouseEvent","bubbles","cancelable","preventIframeInteraction","canUseViewTransition","useSyncExternalStore","CSS","supports","iframeAnimations","currentViewport","setCurrentViewport","iframeStyle","setIframeStyle","iframeVariants","update","startViewTransition","flushSync","duration","spinnerVariants","inset","backdropFilter","WebkitBackdropFilter","WebkitTransition","sizes","errorVariants","background","desktop","mobile","exit","boxShadow","scale","idle","reloading","active","useEffectOnChange","_callback","initialValue","comparator","previousValueRef","callback","useEffectEvent","RevisionSwitcher","documentRevision","editState","useEditState","rev","_updatedAt","_rev","defineWarnOnce","warned","warnOnceAboutCrossDatasetReference","useDocumentsOnPage","frameStateRef","setPublished","setPreviewDrafts","urlRef","setDocumentsOnPage","sourceDocuments","documents","sourceDocument","_projectId","setCache","cache","isEqual","uniqueDocuments","doc","fnOrObj","arg","Function","getQueryFromResult","resolver","resolve","getParamsFromResult","getRouteContext","route","routes","absolute","match","decode","decodeURIComponent","useMainDocument","navigationHistory","resolvers","relativeUrl","setMainDocumentState","mainDocumentIdRef","at","handleResponse","base","url_0","query","then","doc_0","catch","parseId","rawId","segments","split","shift","parsePath","rawPath","studioPath","urlStringToPath","parseRouterState","pruneObject","useParams","initialPreviewUrl","routerNavigate","since","view","pathKey","instruction","comment","changesInspectorTab","routerStateRef","setNavigationHistory","nextState","nextSearchState","forceReplace","routerSearchState","searchState","usePopups","popups","setPopups","open","Set","add","unsubs","size","source_0","closed","addTarget","interval","setInterval","source_1","source_2","POPUP_CHECK_INTERVAL","clearInterval","unsub","usePreviewUrl","toolName","studioPreviewPerspective","previewSearchParam","canCreateUrlPreviewSecrets","workspace","workspaceName","deps","useSuspendCacheKeys","usePreviewUrlSecret","suspend","resolvedUrl","resultUrl","restoredUrl","definePreviewUrl","studioBasePath","resolveUUID","cachedPreviewSearchParam","setCachedPreviewSearchParam","timeoutRef","secretLastExpiredAt","setSecretLastExpiredAt","createPreviewSecret","startTransition","expiresAt","getTime","Date","now","useStatus","statusMap","setStatusMap","handshaking","status_1","connection","hasConnected_0","hasConnected","status_2","setStatusFromEvent","status_0","LoaderQueries","PostMessageDocuments","PostMessageFeatures","PostMessageRefreshMutations","PostMessagePerspective","PostMessagePreviewSnapshots","PostMessageSchema","PostMessageTelemetry","PresentationTool","tool","components","_previewUrl","DEFAULT_TOOL_NAME","unstable_header","draftMode","shareAccess","previewMode","option","hostname","setController","visualEditingComlink","setVisualEditingComlink","useReducer","presentationReducer","presentationReducerInit","projectId","useProjectId","dataset","useDataset","mainDocuments","setOverlaysConnection","setLoadersConnection","previewKitConnection","setPreviewKitConnection","isLoading","target","contentWindow","createController","destroy","handleNavigate","createChannel","heartbeat","connectTo","createConnectionMachine","actors","ACTION_VISUAL_EDITING_OVERLAYS_TOGGLE","refreshRef","ACTION_IFRAME_REFRESH","onStatus","stop","start","handleFocusPath","nextPath","handlePreviewPath","handleStructureParams","displayedDocument","handleKeyUp","isAltKey","handleKeydown","isHotkey","boundaryElement","setBoundaryElement","PresentationNavigator","idRef","fallback","livePreviewEnabled","useWorkspace","COMMENTS_INSPECTOR_NAME","mode","EDIT_INTENT_MODE","LIVE_DRAFT_EVENTS_ENABLED","PresentationToolGrantsCheck","willGeneratePreviewUrlSecret","grantsStore","useGrantsStore","previewAccessSharingCreatePermission","setCreateAccessSharingPermission","previewAccessSharingUpdatePermission","setUpdateAccessSharingPermission","previewAccessSharingReadPermission","setReadAccessSharingPermission","previewUrlSecretPermission","setPreviewUrlSecretPermission","previewCreateAccessSharingPermissionSubscription","checkDocumentPermission","schemaIdSingleton","schemaTypeSingleton","previewUpdateAccessSharingPermissionSubscription","previewReadAccessSharingPermissionSubscription","previewUrlSecretPermissionSubscription","granted","raf","requestAnimationFrame","cancelAnimationFrame"],"mappings":"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","x_google_ignoreList":[15,16,17,18]}