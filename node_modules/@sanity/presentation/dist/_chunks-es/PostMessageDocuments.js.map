{"version":3,"file":"PostMessageDocuments.js","sources":["../../src/overlays/PostMessageDocuments.tsx"],"sourcesContent":["import type {MutationEvent, ReconnectEvent, WelcomeEvent} from '@sanity/client'\nimport {memo, useEffect, type FunctionComponent} from 'react'\nimport {filter, first, merge, shareReplay} from 'rxjs'\nimport {useClient} from 'sanity'\nimport {API_VERSION} from '../constants'\nimport type {VisualEditingConnection} from '../types'\n\ninterface PostMessageDocumentsProps {\n  comlink: VisualEditingConnection\n}\n\nconst PostMessageDocuments: FunctionComponent<PostMessageDocumentsProps> = (props) => {\n  const {comlink} = props\n  const client = useClient({apiVersion: API_VERSION})\n\n  useEffect(() => {\n    const listener = client\n      .listen(\n        '*[!(_id in path(\"_.**\"))]',\n        {},\n        {\n          effectFormat: 'mendoza',\n          events: ['welcome', 'mutation', 'reconnect'],\n          includePreviousRevision: false,\n          includeResult: false,\n          tag: 'presentation-documents',\n          visibility: 'transaction',\n        },\n      )\n      .pipe(\n        filter(\n          (event): event is WelcomeEvent | ReconnectEvent | MutationEvent =>\n            event.type === 'welcome' || event.type === 'reconnect' || event.type === 'mutation',\n        ),\n      )\n\n    const welcome = listener.pipe(\n      filter((event): event is WelcomeEvent => event.type === 'welcome'),\n      shareReplay({bufferSize: 1, refCount: false}),\n    )\n\n    // When new contexts initialize, they need to explicitly request the welcome\n    // event, as we can't rely on emitting it into the void\n    const unsubscribe = comlink.on('visual-editing/snapshot-welcome', async () => {\n      const event = await new Promise<WelcomeEvent>((resolve) => {\n        welcome.pipe(first()).subscribe((event) => {\n          resolve(event)\n        })\n      })\n      return {event}\n    })\n\n    const reconnect = listener.pipe(\n      filter((event): event is ReconnectEvent => event.type === 'reconnect'),\n    )\n\n    const mutations = listener.pipe(\n      filter((event): event is MutationEvent => event.type === 'mutation'),\n    )\n\n    const events = merge(\n      /**\n       * @deprecated remove 'welcome' here and switch to explict welcome message fetching at next major\n       */\n      welcome,\n      mutations,\n      reconnect,\n    ).subscribe((event) => {\n      comlink.post('presentation/snapshot-event', {event})\n    })\n\n    return () => {\n      unsubscribe()\n      events.unsubscribe()\n    }\n  }, [client, comlink])\n\n  useEffect(() => {\n    return comlink.on('visual-editing/fetch-snapshot', async (data) => {\n      const snapshot = await client.getDocument(data.documentId, {\n        tag: 'document.snapshots',\n      })\n      return {snapshot}\n    })\n  }, [client, comlink])\n\n  useEffect(() => {\n    return comlink.on('visual-editing/mutate', async (data) => {\n      return client.dataRequest('mutate', data, {\n        visibility: 'async',\n        returnDocuments: true,\n      })\n    })\n  }, [client, comlink])\n\n  return null\n}\n\nexport default memo(PostMessageDocuments)\n"],"names":["PostMessageDocuments","props","$","_c","comlink","t0","Symbol","for","apiVersion","API_VERSION","client","useClient","t1","t2","listener","listen","effectFormat","events","includePreviousRevision","includeResult","tag","visibility","pipe","filter","_temp","welcome","_temp2","shareReplay","bufferSize","refCount","unsubscribe","on","event","Promise","resolve","first","subscribe","event_1","reconnect","_temp3","mutations","_temp4","merge","event_5","post","useEffect","t3","t4","data","snapshot","getDocument","documentId","t5","t6","data_0","dataRequest","returnDocuments","memo","type","event_0","event_3","event_4"],"mappings":"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"}