import { EyeOpenIcon } from "@sanity/icons";
import { lazy } from "react";
import { defineLocaleResourceBundle, definePlugin } from "sanity";
import { route } from "sanity/router";
const visionLocaleNamespace = "vision", visionUsEnglishLocaleBundle = defineLocaleResourceBundle({
  locale: "en-US",
  namespace: visionLocaleNamespace,
  resources: () => import("./resources.esm.js")
});
var __getOwnPropSymbols = Object.getOwnPropertySymbols, __hasOwnProp = Object.prototype.hasOwnProperty, __propIsEnum = Object.prototype.propertyIsEnumerable, __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    __hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0 && (target[prop] = source[prop]);
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source))
      exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop) && (target[prop] = source[prop]);
  return target;
};
const visionTool = definePlugin((options) => {
  const _a = options || {}, {
    name,
    title,
    icon
  } = _a, config = __objRest(_a, [
    "name",
    "title",
    "icon"
  ]);
  return {
    name: "@sanity/vision",
    tools: [{
      name: name || "vision",
      title: title || "Vision",
      icon: icon || EyeOpenIcon,
      component: lazy(() => import("./SanityVision.esm.js")),
      options: config,
      router: route.create("/*"),
      __internalApplicationType: "sanity/vision"
    }],
    i18n: {
      bundles: [visionUsEnglishLocaleBundle]
    }
  };
});
export {
  visionLocaleNamespace,
  visionTool
};
//# sourceMappingURL=index.esm.js.map
